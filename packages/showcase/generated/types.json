{
    "\"csstype\"": [
        {
            "name": "Properties",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 511,
                    "name": "alignSelf",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 509,
                    "name": "display",
                    "type": "stringLiteral",
                    "values": [
                        "block",
                        "inline",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "none",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex",
                        "grid"
                    ],
                    "isOptional": true
                },
                {
                    "id": 512,
                    "name": "justifySelf",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 510,
                    "name": "overflow",
                    "type": "stringLiteral",
                    "values": [
                        "auto",
                        "hidden",
                        "scroll",
                        "visible",
                        "inherit"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "BadgeTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3142,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3143,
                    "name": "holder",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3144,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3145,
                                    "name": "align",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Badge/types.ts",
                                            "line": 13,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "left"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "right"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "top"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "bottom"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "top-right"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "bottom-right"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "top-left"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "bottom-left"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3145
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Badge/types.ts",
                                    "line": 12,
                                    "character": 15
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3034,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right",
                        "top-right",
                        "bottom-right",
                        "top-left",
                        "bottom-left"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3035,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3033,
                    "name": "content",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ]
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "BlockTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3262,
                    "name": "container",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3263,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3265,
                                    "name": "hoverSurface",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Block/types.ts",
                                            "line": 19,
                                            "character": 24
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "major"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "minor"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3264,
                                    "name": "surface",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Block/types.ts",
                                            "line": 18,
                                            "character": 19
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "major"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "minor"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3265,
                                        3264
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Block/types.ts",
                                    "line": 17,
                                    "character": 18
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3153,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3152,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3154,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3150,
                    "name": "hoverSurface",
                    "type": "stringLiteral",
                    "values": [
                        "major",
                        "medium",
                        "minor"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3155,
                    "name": "overflow",
                    "type": "stringLiteral",
                    "values": [
                        "auto",
                        "hidden",
                        "scroll",
                        "visible",
                        "inherit"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3151,
                    "name": "position",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3149,
                    "name": "surface",
                    "type": "stringLiteral",
                    "values": [
                        "major",
                        "medium",
                        "minor"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3148,
                    "name": "tag",
                    "type": "stringLiteral",
                    "values": [
                        "div",
                        "span",
                        "header",
                        "footer",
                        "article",
                        "section",
                        "aside",
                        "main"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ButtonGroupTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 7384,
                    "name": "children",
                    "type": "reference",
                    "overwrites": {
                        "type": "reference",
                        "name": "Props.children",
                        "id": 1561
                    },
                    "values": [
                        "ReactElement",
                        "ReactElement[]"
                    ]
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ButtonTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1668,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1669,
                    "name": "filled",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1670,
                    "name": "outline",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1672,
                    "name": "plain",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1671,
                    "name": "text",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1545,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1561,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1560,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1557,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "filled",
                        "outline",
                        "text",
                        "plain"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1546,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1547,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1548,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1549,
                    "name": "formEncType",
                    "comment": "The formenctype attribute specifies how form-data should be encoded before sending it to a server. This attribute overrides the form's enctype attribute.\nThe formenctype attribute is only used for buttons with type=\"submit\".",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1550,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1551,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1552,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1553,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1558,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1556,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1554,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "submit",
                        "reset",
                        "button"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1559,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1555,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "string[]",
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ChartTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 6813,
                    "name": "data",
                    "type": "reference",
                    "values": [
                        "Array"
                    ]
                },
                {
                    "id": 6812,
                    "name": "labels",
                    "type": "reference",
                    "values": [
                        "Array"
                    ]
                },
                {
                    "id": 6814,
                    "name": "options",
                    "type": "reference",
                    "values": [
                        "ChartOptions"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6811,
                    "name": "type",
                    "comment": {
                        "tags": [
                            {
                                "tag": "default",
                                "text": "line\n"
                            }
                        ]
                    },
                    "type": "stringLiteral",
                    "tags": {
                        "default": "line"
                    },
                    "values": [
                        "line",
                        "pie",
                        "verticalBar",
                        "horizontalBar",
                        "doughnut",
                        "radar",
                        "polar",
                        "scatter",
                        "bubble"
                    ]
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "CheckTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5362,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5371,
                    "name": "children",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 5372,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 5373,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 5374,
                                            "name": "checked",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        },
                                        {
                                            "id": 5375,
                                            "name": "focus",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ReactElement"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/hocs/Check/types.ts",
                                    "line": 17,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 5368,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5363,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5359,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5360,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5364,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5370,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5361,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "checkbox",
                        "radio",
                        "switch"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5369,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "CheckboxTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1792,
                    "name": "check",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1793,
                    "name": "icon",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1677,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1679,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1678,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1675,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1676,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1682,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1681,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1680,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "DatePickerTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1861,
                    "name": "dateGrind",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1864,
                    "name": "gridBlock",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1860,
                    "name": "textFieldOkButton",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1859,
                    "name": "textFieldWrapper",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1863,
                    "name": "title",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1862,
                    "name": "weekDay",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1798,
                    "name": "format",
                    "comment": "Format moment YYYY-MM-DD",
                    "type": "intrinsic",
                    "tags": {
                        "default": "YYYY-MM-DD"
                    },
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1809,
                    "name": "hideToday",
                    "comment": "Hide today button",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1808,
                    "name": "locale",
                    "comment": {
                        "tags": [
                            {
                                "tag": "default",
                                "text": "ru\n"
                            }
                        ]
                    },
                    "type": "stringLiteral",
                    "tags": {
                        "default": "ru"
                    },
                    "values": [
                        "en",
                        "ru",
                        "it",
                        "fr",
                        "de"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1807,
                    "name": "masked",
                    "comment": "Enable mask input",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1800,
                    "name": "maxValue",
                    "comment": "Max datetime that could be selected",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1799,
                    "name": "minValue",
                    "comment": "Min datetime that could be selected",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1801,
                    "name": "onChange",
                    "comment": "Callback function will with Date object\nor string if format property was passed.",
                    "type": "reflection",
                    "values": [
                        "(moment: Moment, value: string) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1806,
                    "name": "stayOpen",
                    "comment": "Do not close datepicker on change\nlatest value",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1796,
                    "name": "type",
                    "comment": "Type for DatePicker",
                    "type": "stringLiteral",
                    "tags": {
                        "default": "day"
                    },
                    "values": [
                        "year",
                        "month",
                        "day"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1797,
                    "name": "value",
                    "comment": "Property value could be a string\nif you pass format property aswell\notherwise value should be instance of Date",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Props for text form fields",
            "weight": 100,
            "children": [
                {
                    "id": 785,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 780,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 779,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 782,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 777,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 776,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 784,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 783,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 781,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 778,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "DateGridTitleProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1846,
                    "name": "gridType",
                    "type": "stringLiteral",
                    "values": [
                        "year",
                        "month",
                        "day"
                    ]
                },
                {
                    "id": 1845,
                    "name": "maxValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1844,
                    "name": "minValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1853,
                    "name": "onGridTypeChange",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1854,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1855,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 1856,
                                            "name": "type",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "reference",
                                                "name": "GridType",
                                                "id": 1865
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 91,
                                    "character": 25
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1847,
                    "name": "onNext",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1848,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1849,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 89,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1850,
                    "name": "onPrevious",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1851,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1852,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 90,
                                    "character": 19
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1857,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 1843,
                    "name": "value",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                }
            ]
        },
        {
            "name": "DateGridProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1821,
                    "name": "hideToday",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 1824,
                    "name": "maxValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1823,
                    "name": "minValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1825,
                    "name": "onChange",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1826,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1827,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 1828,
                                            "name": "date",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "reference",
                                                "name": "Moment"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 69,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1829,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 1830,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "year",
                        "month",
                        "day"
                    ]
                },
                {
                    "id": 1822,
                    "name": "value",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                }
            ]
        },
        {
            "name": "DateGridCalendarProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1836,
                    "name": "active",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1835,
                    "name": "maxValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1834,
                    "name": "minValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1837,
                    "name": "onClick",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1840,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1841,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 1833,
                    "name": "tmp",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1832,
                    "name": "value",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                }
            ]
        }
    ],
    "DividerTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 939,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 832,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 830,
                    "name": "dash",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 831,
                    "name": "gap",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 829,
                    "name": "vertical",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "DropTypes": [
        {
            "name": "TargetCoordinates",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3269,
                    "name": "bottom",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 3270,
                    "name": "left",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 3271,
                    "name": "right",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 3268,
                    "name": "top",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                }
            ]
        },
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3307,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3274,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3287,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3278,
                    "name": "distance",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3275,
                    "name": "justify",
                    "type": "stringLiteral",
                    "values": [
                        "start",
                        "center",
                        "end",
                        "start-outside",
                        "end-outside"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3279,
                    "name": "onClickOutside",
                    "type": "reflection",
                    "values": [
                        "(event: MouseEvent, outsideTarget: undefined) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3284,
                    "name": "onEsc",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3277,
                    "name": "stretchHeight",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3276,
                    "name": "stretchWidth",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3273,
                    "name": "target",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 690,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 694,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 703,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 701,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "block",
                        "inline",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "none",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex",
                        "grid"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "hidden",
                        "visible",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "collapse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "FieldTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5615,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5616,
                    "name": "cursor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5621,
                    "name": "fieldStyles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5623,
                    "name": "insideLabelStyles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5631,
                    "name": "isEmpty",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5627,
                    "name": "manyLines",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5614,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5624,
                    "name": "onClear",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5628,
                    "name": "onEnter",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5617,
                    "name": "onLabelOverlay",
                    "type": "reflection",
                    "values": [
                        "(state: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5622,
                    "name": "overlayLabelAlign",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Props for text form fields",
            "weight": 100,
            "children": [
                {
                    "id": 785,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 780,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 779,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 782,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 777,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 776,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 784,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 783,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 781,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 778,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "FlexboxTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3426,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3313,
                    "name": "alignContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3312,
                    "name": "alignItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3319,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3310,
                    "name": "column",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3316,
                    "name": "direction",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "row",
                        "column",
                        "column-reverse",
                        "row-reverse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3318,
                    "name": "flow",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3311,
                    "name": "inline",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3314,
                    "name": "justifyContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3315,
                    "name": "justifyItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3317,
                    "name": "wrap",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "nowrap",
                        "wrap",
                        "wrap-reverse"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "Global": [
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 690,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 694,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 703,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 701,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "block",
                        "inline",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "none",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex",
                        "grid"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "hidden",
                        "visible",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "collapse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 690,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 694,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 703,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 701,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "block",
                        "inline",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "none",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex",
                        "grid"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "hidden",
                        "visible",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "collapse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 711,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 717,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 715,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 714,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 716,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 712,
                    "name": "mx",
                    "comment": "Margin horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 713,
                    "name": "my",
                    "comment": "Margin vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleFlex",
            "comment": "Flexbox children styles",
            "weight": 400,
            "children": [
                {
                    "id": 723,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 719,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 720,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 721,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert"
                    ],
                    "isOptional": true
                },
                {
                    "id": 722,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert"
                    ],
                    "isOptional": true
                },
                {
                    "id": 724,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 732,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 730,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 727,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 726,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 731,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 729,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 728,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 733,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 703,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 711,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 717,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 715,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 714,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 716,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 712,
                    "name": "mx",
                    "comment": "Margin horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 713,
                    "name": "my",
                    "comment": "Margin vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 701,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "block",
                        "inline",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "none",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex",
                        "grid"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "hidden",
                        "visible",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "collapse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 732,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 730,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 727,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 726,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 731,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 729,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 728,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 733,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 711,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 717,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 715,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 714,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 716,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 712,
                    "name": "mx",
                    "comment": "Margin horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 713,
                    "name": "my",
                    "comment": "Margin vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleFlex",
            "comment": "Flexbox children styles",
            "weight": 400,
            "children": [
                {
                    "id": 723,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 719,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 720,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 721,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert"
                    ],
                    "isOptional": true
                },
                {
                    "id": 722,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert"
                    ],
                    "isOptional": true
                },
                {
                    "id": 724,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 732,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 730,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 727,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 726,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 731,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 729,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 728,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 733,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleFlex",
            "comment": "Flexbox children styles",
            "weight": 400,
            "children": [
                {
                    "id": 723,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 719,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 720,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 721,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert"
                    ],
                    "isOptional": true
                },
                {
                    "id": 722,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert"
                    ],
                    "isOptional": true
                },
                {
                    "id": 724,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Props for text form fields",
            "weight": 100,
            "children": [
                {
                    "id": 785,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 780,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 779,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 782,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 777,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 776,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 784,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 783,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 781,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 778,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 690,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 694,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "GridTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3550,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3441,
                    "name": "alignContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3440,
                    "name": "alignItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3437,
                    "name": "autoColumns",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3439,
                    "name": "autoFlow",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3438,
                    "name": "autoRows",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3430,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3434,
                    "name": "columnGap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3436,
                    "name": "gap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3429,
                    "name": "inline",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3442,
                    "name": "justifyContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3443,
                    "name": "justifyItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3435,
                    "name": "rowGap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3433,
                    "name": "templateAreas",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3431,
                    "name": "templateColumns",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3432,
                    "name": "templateRows",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "IconTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1053,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 1054,
                    "name": "icon",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 946,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 945,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 943,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "circle",
                        "oval",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 944,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 942,
                    "name": "type",
                    "type": "reference",
                    "values": [
                        "Global.IconProp"
                    ]
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "IconsetTypes": [
        {
            "name": "Index",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 13,
                    "name": "filled",
                    "type": "reference",
                    "values": [
                        "Filled"
                    ]
                },
                {
                    "id": 14,
                    "name": "outline",
                    "type": "reference",
                    "values": [
                        "Outline"
                    ]
                }
            ]
        }
    ],
    "MenuTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1883,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "start",
                        "center",
                        "end"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1882,
                    "name": "border",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "narrow",
                        "wide"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1885,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1877,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "filled",
                        "outline",
                        "color",
                        "underline",
                        "tab",
                        "filled-underline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1869,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1880,
                    "name": "direction",
                    "type": "stringLiteral",
                    "values": [
                        "row",
                        "column"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1886,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1879,
                    "name": "distance",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1878,
                    "name": "flip",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1875,
                    "name": "items",
                    "type": "reference",
                    "values": [
                        "Item[]"
                    ]
                },
                {
                    "id": 1871,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(value: Value) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1884,
                    "name": "separator",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1881,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1876,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1870,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "ItemProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2009,
                    "name": "active",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2011,
                    "name": "onEnter",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2010,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Item",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1993,
                    "name": "content",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ]
                },
                {
                    "id": 1995,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1994,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ]
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "MeterTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2772,
                    "name": "container",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2773,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 2776,
                                    "name": "decoration",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Meter/types.ts",
                                            "line": 31,
                                            "character": 22
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "MeterDecoration",
                                        "id": 2782
                                    }
                                },
                                {
                                    "id": 2774,
                                    "name": "shape",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Meter/types.ts",
                                            "line": 29,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "MeterShape",
                                        "id": 2783
                                    }
                                },
                                {
                                    "id": 2775,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Meter/types.ts",
                                            "line": 30,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "Global.Size",
                                        "id": 799
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        2776,
                                        2774,
                                        2775
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Meter/types.ts",
                                    "line": 28,
                                    "character": 18
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2777,
                    "name": "thumb",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2778,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 2779,
                                    "name": "shape",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Meter/types.ts",
                                            "line": 34,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "MeterShape",
                                        "id": 2783
                                    }
                                },
                                {
                                    "id": 2780,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Meter/types.ts",
                                            "line": 35,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "Global.Size",
                                        "id": 799
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        2779,
                                        2780
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Meter/types.ts",
                                    "line": 33,
                                    "character": 14
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2665,
                    "name": "animation",
                    "comment": "Enabled process animation",
                    "type": "intrinsic",
                    "tags": {
                        "default": "false"
                    },
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2664,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2662,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "filled",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2659,
                    "name": "percent",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 2663,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2660,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2661,
                    "name": "type",
                    "comment": {
                        "tags": [
                            {
                                "tag": "default",
                                "text": "line\n"
                            }
                        ]
                    },
                    "type": "stringLiteral",
                    "tags": {
                        "default": "line"
                    },
                    "values": [
                        "line",
                        "circle"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ModalTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3699,
                    "name": "cross",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3698,
                    "name": "header",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3690,
                    "name": "overlay",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3691,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3693,
                                    "name": "center",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Modal/types.ts",
                                            "line": 76,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3692,
                                    "name": "visible",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Modal/types.ts",
                                            "line": 75,
                                            "character": 19
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3693,
                                        3692
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 74,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3694,
                    "name": "window",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3695,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3697,
                                    "name": "fullSizeCenter",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Modal/types.ts",
                                            "line": 80,
                                            "character": 26
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3696,
                                    "name": "visible",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Modal/types.ts",
                                            "line": 79,
                                            "character": 19
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3697,
                                        3696
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 78,
                                    "character": 15
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "StyleProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3660,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 3661,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3659,
                    "name": "visible",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "Ref",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3581,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 3557,
                    "name": "close",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3558,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 3559,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 3560,
                                            "name": "didClose",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {
                                                "isOptional": true
                                            },
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "undefined"
                                                    },
                                                    {
                                                        "type": "reflection",
                                                        "declaration": {
                                                            "id": 3561,
                                                            "name": "__type",
                                                            "kind": 65536,
                                                            "kindString": "Type literal",
                                                            "flags": {},
                                                            "signatures": [
                                                                {
                                                                    "id": 3562,
                                                                    "name": "__call",
                                                                    "kind": 4096,
                                                                    "kindString": "Call signature",
                                                                    "flags": {},
                                                                    "type": {
                                                                        "type": "intrinsic",
                                                                        "name": "void"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 7,
                                    "character": 14
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3582,
                    "name": "customContent",
                    "type": "intrinsic",
                    "values": [
                        "ReactElement",
                        "null"
                    ]
                },
                {
                    "id": 3553,
                    "name": "open",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3554,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 3555,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 3556,
                                            "name": "customContent",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {
                                                "isOptional": true
                                            },
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "name": "ReactElement"
                                                    },
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "null"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 6,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3583,
                    "name": "overlay",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 3571,
                    "name": "setCenter",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3572,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 3573,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 3574,
                                            "name": "center",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 10,
                                    "character": 18
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3575,
                    "name": "setCustomContent",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3576,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 3577,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 3578,
                                            "name": "customContent",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "name": "ReactElement"
                                                    },
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "null"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 11,
                                    "character": 25
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3567,
                    "name": "setSubtitle",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3568,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 3569,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 3570,
                                            "name": "subtitle",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 9,
                                    "character": 20
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3563,
                    "name": "setTitle",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3564,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 3565,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 3566,
                                            "name": "title",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 8,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3580,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3579,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3584,
                    "name": "window",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3589,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3594,
                    "name": "didClose",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3600,
                    "name": "didOpen",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3588,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3590,
                    "name": "hideHeader",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3591,
                    "name": "onClose",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3597,
                    "name": "onOpen",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3587,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3586,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 690,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 694,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 703,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 701,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "block",
                        "inline",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "none",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex",
                        "grid"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "hidden",
                        "visible",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "collapse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "ModalWindowProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3672,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 3675,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3676,
                    "name": "containerAttr",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "HTMLAttributes",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "name": "HTMLElement"
                                    }
                                ]
                            },
                            {
                                "type": "reference",
                                "name": "SelfProps",
                                "id": 734
                            }
                        ]
                    },
                    "isOptional": true
                },
                {
                    "id": 3673,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3674,
                    "name": "hideHeader",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3677,
                    "name": "onClosePressed",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3678,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 3679,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 61,
                                    "character": 23
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3680,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                },
                {
                    "id": 3670,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3669,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3671,
                    "name": "visible",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "ModalOverlayProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3664,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 3666,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3665,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3667,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                },
                {
                    "id": 3663,
                    "name": "visible",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "ModalHeaderProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3684,
                    "name": "hideHeader",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3685,
                    "name": "onClosePressed",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3686,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 3687,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 69,
                                    "character": 23
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3688,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                },
                {
                    "id": 3683,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3682,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InnerProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3622,
                    "name": "innerRef",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        }
    ],
    "NotificationTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3715,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3702,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3703,
                    "name": "onClick",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "NotifyOptions",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3713,
                    "name": "customContent",
                    "comment": "if custom content filled then title and message will be ignored",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3708,
                    "name": "message",
                    "comment": "Message of notification",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 3710,
                    "name": "onClick",
                    "comment": "Will call on notificaion click",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3709,
                    "name": "timeout",
                    "comment": "Notification will be removed after timeout\nvalue in milisecods",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3707,
                    "name": "title",
                    "comment": "Title of notification",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        }
    ],
    "PanelTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3826,
                    "name": "container",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3827,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3828,
                                    "name": "align",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Panel/types.ts",
                                            "line": 11,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "left"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "right"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "top"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "bottom"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3828
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Panel/types.ts",
                                    "line": 10,
                                    "character": 18
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3718,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "right",
                        "bottom",
                        "left"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3719,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "PopoverTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3944,
                    "name": "arrow",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3945,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3946,
                                    "name": "align",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Popover/types.ts",
                                            "line": 17,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "left"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "right"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "top"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "bottom"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3946
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Popover/types.ts",
                                    "line": 16,
                                    "character": 14
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3943,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3831,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3836,
                    "name": "arrowHeight",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3835,
                    "name": "arrowWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3832,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3834,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3833,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "RadioTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2150,
                    "name": "check",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 2151,
                    "name": "icon",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2035,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2037,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2036,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2033,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2034,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2040,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2039,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2038,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "RangeTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2166,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2167,
                    "name": "rail",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2169,
                    "name": "thumb",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2168,
                    "name": "track",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2164,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2156,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2155,
                    "name": "max",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2154,
                    "name": "min",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2162,
                    "name": "mode",
                    "type": "stringLiteral",
                    "values": [
                        "single",
                        "range"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2158,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(value: number) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2163,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2157,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ScrollViewTypes": [
        {
            "name": "Variants",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 7188,
                    "name": "active",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 7190,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 7191,
                    "name": "content",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 7198,
                    "name": "xBar",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 7199,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 7200,
                                    "name": "active",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 31,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        7200
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "lab/layout/ScrollView/types.ts",
                                    "line": 30,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 7201,
                    "name": "xThumb",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 7202,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 7203,
                                    "name": "active",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 34,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        7203
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "lab/layout/ScrollView/types.ts",
                                    "line": 33,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 7192,
                    "name": "yBar",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 7193,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 7194,
                                    "name": "active",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 25,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        7194
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "lab/layout/ScrollView/types.ts",
                                    "line": 24,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 7195,
                    "name": "yThumb",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 7196,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 7197,
                                    "name": "active",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 28,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        7197
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "lab/layout/ScrollView/types.ts",
                                    "line": 27,
                                    "character": 15
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 7079,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 7081,
                    "name": "color",
                    "comment": "Custom ScrollBar color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 7080,
                    "name": "mode",
                    "comment": "Display mode",
                    "type": "stringLiteral",
                    "tags": {
                        "default": "scroll"
                    },
                    "values": [
                        "always",
                        "scroll",
                        "hidden"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "SelectTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2330,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2333,
                    "name": "dropItem",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2332,
                    "name": "dropMenu",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2331,
                    "name": "input",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                }
            ]
        },
        {
            "name": "SearchProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2327,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2328,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onSearch",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2321,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2322,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2323,
                                            "name": "searchValue",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Select/types.ts",
                                    "line": 62,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2326,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "searchValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 2324,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2180,
                    "name": "defaultValues",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2177,
                    "name": "multiselect",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2181,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(values: undefined, changedValue: Option) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2176,
                    "name": "options",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ]
                },
                {
                    "id": 2175,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2178,
                    "name": "searchable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2179,
                    "name": "values",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Props for text form fields",
            "weight": 100,
            "children": [
                {
                    "id": 785,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 780,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 779,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 782,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 777,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 776,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 784,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 783,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 781,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 778,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "OptionsProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2303,
                    "name": "onClose",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2304,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2305,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2306,
                                            "name": "option",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Select/types.ts",
                                    "line": 57,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2307,
                    "name": "searchable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2302,
                    "name": "selected",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ]
                }
            ]
        },
        {
            "name": "SearchProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2327,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2328,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onSearch",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2321,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2322,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2323,
                                            "name": "searchValue",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Select/types.ts",
                                    "line": 62,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2326,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "searchValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 2324,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "Option",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2172,
                    "name": "text",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 2173,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        }
    ],
    "SpinnerTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1171,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 1170,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1059,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1058,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1062,
                    "name": "count",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1061,
                    "name": "duration",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1060,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1063,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "SplitTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 6946,
                    "name": "areaSize",
                    "comment": "Split area size, value in pixels",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6945,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "ReactElement[]"
                    ]
                },
                {
                    "id": 6944,
                    "name": "direction",
                    "type": "stringLiteral",
                    "values": [
                        "row",
                        "column"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6952,
                    "name": "onChange",
                    "comment": "Calls when mouseUp if position did change",
                    "type": "reflection",
                    "values": [
                        "(positions: undefined) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6948,
                    "name": "onMove",
                    "comment": "Calls when split area moves",
                    "type": "reflection",
                    "values": [
                        "(positions: undefined) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6947,
                    "name": "positions",
                    "comment": "You can give it array of numbers (in percent)",
                    "type": "intrinsic",
                    "values": [
                        "number[]"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "SwitchTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2479,
                    "name": "check",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 2480,
                    "name": "icon",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2364,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2366,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2365,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2362,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2363,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2369,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2368,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2367,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "TableTypes": [
        {
            "name": "TablePagination",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2990,
                    "name": "async",
                    "type": "reflection",
                    "values": [
                        "(page: number) => boolean"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2988,
                    "name": "pageSize",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 2989,
                    "name": "pageTotalSize",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "TableForm",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2803,
                    "name": "defaultData",
                    "type": "reflection",
                    "values": [
                        "unknown"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2808,
                    "name": "dismiss",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2802,
                    "name": "key",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2807,
                    "name": "render",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "TableColumn",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2787,
                    "name": "dataIndex",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 2789,
                    "name": "render",
                    "type": "reflection",
                    "values": [
                        "(row: any, value: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2786,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2788,
                    "name": "width",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "TableActions",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2796,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2795,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 2797,
                    "name": "onAction",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2798,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2799,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2800,
                                            "name": "row",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 14,
                                    "character": 17
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3029,
                    "name": "actionButtons",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3030,
                    "name": "actionButtonsEdit",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3028,
                    "name": "actions",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3016,
                    "name": "body",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3026,
                    "name": "column",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3011,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3012,
                    "name": "content",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3014,
                    "name": "headColumn",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3013,
                    "name": "headRow",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3027,
                    "name": "more",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3017,
                    "name": "pagination",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3018,
                    "name": "paginationButton",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3019,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3020,
                                    "name": "active",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Table/types.ts",
                                            "line": 114,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3020
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 113,
                                    "character": 25
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3021,
                    "name": "row",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3022,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3023,
                                    "name": "edited",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Table/types.ts",
                                            "line": 117,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "id": 3024,
                                    "name": "withActions",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Table/types.ts",
                                            "line": 118,
                                            "character": 23
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3023,
                                        3024
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 116,
                                    "character": 12
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3015,
                    "name": "search",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3025,
                    "name": "subrow",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "RowProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2943,
                    "name": "actions",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2944,
                    "name": "border",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2948,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2939,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 2946,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2942,
                    "name": "isBlur",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2941,
                    "name": "isExpanding",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2940,
                    "name": "isSelected",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2949,
                    "name": "onRowClick",
                    "type": "reflection",
                    "values": [
                        "(row: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2938,
                    "name": "row",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 2945,
                    "name": "scope",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2947,
                    "name": "style",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2953,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2815,
                    "name": "actions",
                    "type": "reference",
                    "values": [
                        "TableActions[]"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2816,
                    "name": "border",
                    "type": "stringLiteral",
                    "values": [
                        "all",
                        "external",
                        "internal",
                        "vertical",
                        "horizontal"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2821,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2832,
                    "name": "className",
                    "type": "intrinsic",
                    "overwrites": {
                        "type": "reference",
                        "name": "HTMLAttributes.className",
                        "id": 621
                    },
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2813,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 2812,
                    "name": "data",
                    "type": "reference",
                    "values": [
                        "Object[]"
                    ]
                },
                {
                    "id": 2814,
                    "name": "form",
                    "type": "reference",
                    "values": [
                        "TableForm"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2831,
                    "name": "hideHeaders",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2817,
                    "name": "indexKey",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2820,
                    "name": "noDataLabel",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2822,
                    "name": "onRowClick",
                    "type": "reflection",
                    "values": [
                        "(row: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2827,
                    "name": "onSearch",
                    "type": "reflection",
                    "values": [
                        "(value: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2819,
                    "name": "pagination",
                    "type": "reference",
                    "values": [
                        "TablePagination"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2818,
                    "name": "scope",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2826,
                    "name": "search",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "PaginationProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3008,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2999,
                    "name": "data",
                    "type": "reflection",
                    "values": [
                        "unknown"
                    ]
                },
                {
                    "id": 3003,
                    "name": "onChange",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3004,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 3005,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 3006,
                                            "name": "page",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "number"
                                            }
                                        },
                                        {
                                            "id": 3007,
                                            "name": "searchBar",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 100,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2996,
                    "name": "page",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 2995,
                    "name": "pagination",
                    "type": "reference",
                    "values": [
                        "TablePagination"
                    ]
                },
                {
                    "id": 2998,
                    "name": "search",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2997,
                    "name": "searchActive",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 3009,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                }
            ]
        },
        {
            "name": "InjectForm",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2978,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 2974,
                    "name": "data",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2975,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "indexSignature": [
                                {
                                    "id": 2976,
                                    "name": "__index",
                                    "kind": 8192,
                                    "kindString": "Index signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2977,
                                            "name": "key",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 82,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2984,
                    "name": "dismiss",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2979,
                    "name": "setData",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2980,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2981,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2982,
                                            "name": "key",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        },
                                        {
                                            "id": 2983,
                                            "name": "value",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 84,
                                    "character": 16
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "FormProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2971,
                    "name": "Form",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 2972,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2970,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 2966,
                    "name": "data",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 2967,
                    "name": "dismiss",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "ColumnProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2958,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2956,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 2955,
                    "name": "row",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 2957,
                    "name": "scope",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2959,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                }
            ]
        },
        {
            "name": "ActionsProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2961,
                    "name": "actions",
                    "type": "intrinsic",
                    "values": [
                        "any[]"
                    ]
                },
                {
                    "id": 2963,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2962,
                    "name": "data",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 2964,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                }
            ]
        }
    ],
    "TextFieldTypes": [
        {
            "name": "TextAreaProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2652,
                    "name": "cols",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2653,
                    "name": "rows",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2654,
                    "name": "wrap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2484,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2483,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2486,
                    "name": "masked",
                    "type": "reference",
                    "values": [
                        "IMask.AnyMaskedOptions"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2485,
                    "name": "multiline",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2487,
                    "name": "onChange",
                    "type": "reference",
                    "values": [
                        "ChangeEventHandler"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Props for text form fields",
            "weight": 100,
            "children": [
                {
                    "id": 785,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 780,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 779,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 782,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 777,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 776,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 784,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 783,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 781,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 778,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InputProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2629,
                    "name": "autoComplete",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2630,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2639,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2640,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2641,
                    "name": "formEncType",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2642,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2643,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2644,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2631,
                    "name": "list",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2645,
                    "name": "max",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2646,
                    "name": "maxLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2647,
                    "name": "min",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2648,
                    "name": "minLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2632,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2634,
                    "name": "pattern",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2633,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2635,
                    "name": "readOnly",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2636,
                    "name": "required",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2649,
                    "name": "step",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2637,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "email",
                        "hidden",
                        "number",
                        "password",
                        "reset",
                        "search",
                        "tel",
                        "text",
                        "url"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2638,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2650,
                    "name": "width",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "TextAreaProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2652,
                    "name": "cols",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2653,
                    "name": "rows",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2654,
                    "name": "wrap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InputProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2629,
                    "name": "autoComplete",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2630,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2639,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2640,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2641,
                    "name": "formEncType",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2642,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2643,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2644,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2631,
                    "name": "list",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2645,
                    "name": "max",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2646,
                    "name": "maxLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2647,
                    "name": "min",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2648,
                    "name": "minLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2632,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2634,
                    "name": "pattern",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2633,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2635,
                    "name": "readOnly",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2636,
                    "name": "required",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2649,
                    "name": "step",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2637,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "email",
                        "hidden",
                        "number",
                        "password",
                        "reset",
                        "search",
                        "tel",
                        "text",
                        "url"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2638,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2650,
                    "name": "width",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ThemeTypes": [
        {
            "name": "Variables",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4086,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Colors"
                    ]
                },
                {
                    "id": 4088,
                    "name": "distance",
                    "type": "reference",
                    "values": [
                        "Distance"
                    ]
                },
                {
                    "id": 4085,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 4087,
                    "name": "radius",
                    "type": "reference",
                    "values": [
                        "Radius"
                    ]
                },
                {
                    "id": 4089,
                    "name": "typography",
                    "type": "reference",
                    "values": [
                        "Typography"
                    ]
                }
            ]
        },
        {
            "name": "Typography",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4168,
                    "name": "caption",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4169,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4170,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 181,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4171,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 182,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4172,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 183,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4173,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 184,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4170,
                                        4171,
                                        4172,
                                        4173
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 180,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4162,
                    "name": "display",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4163,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4164,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 175,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4165,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 176,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4166,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 177,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4167,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 178,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4164,
                                        4165,
                                        4166,
                                        4167
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 174,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4150,
                    "name": "header",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4151,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4152,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 163,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4153,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 164,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4154,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 165,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4155,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 166,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4152,
                                        4153,
                                        4154,
                                        4155
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 162,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4149,
                    "name": "paragraph",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 4156,
                    "name": "text",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4157,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4158,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 169,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4159,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 170,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4160,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 171,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4161,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 172,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4158,
                                        4159,
                                        4160,
                                        4161
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 168,
                                    "character": 13
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4132,
                    "name": "Badge",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4133,
                    "name": "Block",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4121,
                    "name": "Button",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4122,
                    "name": "Checkbox",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4123,
                    "name": "DatePicker",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4117,
                    "name": "Divider",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4134,
                    "name": "Drop",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4135,
                    "name": "Flexbox",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4136,
                    "name": "Grid",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4118,
                    "name": "Icon",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4124,
                    "name": "Menu",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4130,
                    "name": "Meter",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4137,
                    "name": "Modal",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4138,
                    "name": "Notification",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4139,
                    "name": "Panel",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4140,
                    "name": "Popover",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4125,
                    "name": "Radio",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4126,
                    "name": "Range",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4127,
                    "name": "Select",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4119,
                    "name": "Spinner",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4128,
                    "name": "Switch",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4131,
                    "name": "Table",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4129,
                    "name": "TextField",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4141,
                    "name": "Tree",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4120,
                    "name": "Typography",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Index",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4075,
                    "name": "assets",
                    "type": "reference",
                    "values": [
                        "Assets"
                    ]
                },
                {
                    "id": 4076,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 4077,
                    "name": "replace",
                    "type": "reference",
                    "values": [
                        "Replace"
                    ]
                }
            ]
        },
        {
            "name": "Variables",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4086,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Colors"
                    ]
                },
                {
                    "id": 4088,
                    "name": "distance",
                    "type": "reference",
                    "values": [
                        "Distance"
                    ]
                },
                {
                    "id": 4085,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 4087,
                    "name": "radius",
                    "type": "reference",
                    "values": [
                        "Radius"
                    ]
                },
                {
                    "id": 4089,
                    "name": "typography",
                    "type": "reference",
                    "values": [
                        "Typography"
                    ]
                }
            ]
        },
        {
            "name": "Distance",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4146,
                    "name": "large",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 4145,
                    "name": "medium",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 4144,
                    "name": "small",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 4147,
                    "name": "xlarge",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 4143,
                    "name": "xsmall",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        },
        {
            "name": "Assets",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4092,
                    "name": "border",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4093,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4096,
                                    "name": "color",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 63,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4095,
                                    "name": "style",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 62,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4094,
                                    "name": "width",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 61,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4096,
                                        4095,
                                        4094
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 60,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4109,
                    "name": "fieldHeight",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4110,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4114,
                                    "name": "large",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 81,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4113,
                                    "name": "medium",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 80,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4112,
                                    "name": "small",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 79,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4115,
                                    "name": "xlarge",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 82,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4111,
                                    "name": "xsmall",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 78,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4114,
                                        4113,
                                        4112,
                                        4115,
                                        4111
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 77,
                                    "character": 20
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4108,
                    "name": "focus",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 4091,
                    "name": "global",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4102,
                    "name": "gradient",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4103,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4104,
                                    "name": "linear",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 71,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4105,
                                    "name": "linearVariant",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 72,
                                            "character": 25
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4106,
                                    "name": "radial",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 73,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4107,
                                    "name": "radialVariant",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 74,
                                            "character": 25
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4104,
                                        4105,
                                        4106,
                                        4107
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 70,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4097,
                    "name": "shadow",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4098,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4099,
                                    "name": "default",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 66,
                                            "character": 19
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4101,
                                    "name": "long",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 68,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4100,
                                    "name": "short",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 67,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4099,
                                        4101,
                                        4100
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 65,
                                    "character": 15
                                }
                            ]
                        }
                    }
                }
            ]
        }
    ],
    "TreeTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4070,
                    "name": "child",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4071,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4072,
                                    "name": "isOpen",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Tree/types.ts",
                                            "line": 25,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4072
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Tree/types.ts",
                                    "line": 24,
                                    "character": 14
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4061,
                    "name": "container",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4062,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4063,
                                    "name": "decoration",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Tree/types.ts",
                                            "line": 16,
                                            "character": 22
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "inline"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "flat"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "drop"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4064,
                                    "name": "needIndent",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Tree/types.ts",
                                            "line": 17,
                                            "character": 22
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4063,
                                        4064
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Tree/types.ts",
                                    "line": 15,
                                    "character": 18
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4066,
                    "name": "icon",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4067,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4068,
                                    "name": "decoration",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Tree/types.ts",
                                            "line": 21,
                                            "character": 22
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "inline"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "flat"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "drop"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4069,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Tree/types.ts",
                                            "line": 22,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4068,
                                        4069
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Tree/types.ts",
                                    "line": 20,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4065,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3952,
                    "name": "alwaysOpen",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3950,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3951,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "flat",
                        "drop",
                        "inline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3953,
                    "name": "defaultOpen",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3954,
                    "name": "indent",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3949,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "React.ReactNode",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "TypographyTypes": [
        {
            "name": "TextProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1433,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "center",
                        "end",
                        "initial",
                        "left",
                        "right",
                        "start",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "justify",
                        "match-parent"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1432,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1430,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1431,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1429,
                    "name": "decoration",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1428,
                    "name": "ellipsis",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1427,
                    "name": "quotes",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1435,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1436,
                    "name": "transform",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "capitalize",
                        "full-size-kana",
                        "full-width",
                        "lowercase",
                        "uppercase"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1434,
                    "name": "weight",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "normal",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "bold",
                        "bolder",
                        "lighter"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 626,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 621,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 624,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 678,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 676,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 677,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 686,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 685,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 687,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 679,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 681,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 682,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 680,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 684,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 683,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1174,
                    "name": "defaultStyles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 1175,
                    "name": "tag",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1176,
                    "name": "theme",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "TextProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1433,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "center",
                        "end",
                        "initial",
                        "left",
                        "right",
                        "start",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "justify",
                        "match-parent"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1432,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1430,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1431,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1429,
                    "name": "decoration",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1428,
                    "name": "ellipsis",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1427,
                    "name": "quotes",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1435,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1436,
                    "name": "transform",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "capitalize",
                        "full-size-kana",
                        "full-width",
                        "lowercase",
                        "uppercase"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1434,
                    "name": "weight",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "normal",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "bold",
                        "bolder",
                        "lighter"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "AnchorProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1302,
                    "name": "download",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1303,
                    "name": "href",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1304,
                    "name": "hrefLang",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1305,
                    "name": "media",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1306,
                    "name": "ping",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1310,
                    "name": "referrerPolicy",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1307,
                    "name": "rel",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1308,
                    "name": "target",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1309,
                    "name": "type",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ViewportTypes": [
        {
            "name": "Themes",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4415,
                    "name": "dark",
                    "type": "reference",
                    "values": [
                        "Index"
                    ]
                },
                {
                    "id": 4414,
                    "name": "light",
                    "type": "reference",
                    "values": [
                        "Index"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4421,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4418,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4419,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4420,
                    "name": "theme",
                    "type": "reflection",
                    "values": [
                        "(lib: T) => R"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4417,
                    "name": "wrapper",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "MountAreaElement",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4426,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "ReactElement"
                    ]
                },
                {
                    "id": 4425,
                    "name": "key",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        },
        {
            "name": "MountArea",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4423,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "DialogOptions",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4433,
                    "name": "buttonText",
                    "comment": "Button text",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4435,
                    "name": "customContent",
                    "comment": "if custom content filled then message and buttonText will be ignored",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4434,
                    "name": "hideHeader",
                    "comment": "Hides modal window header",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4432,
                    "name": "message",
                    "comment": "Message of dialog",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4431,
                    "name": "subtitle",
                    "comment": "Subtitle of modal window header",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4430,
                    "name": "title",
                    "comment": "Title of modal window header",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Context",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4428,
                    "name": "theme",
                    "type": "reference",
                    "values": [
                        "ThemeType.Index"
                    ]
                }
            ]
        }
    ]
}