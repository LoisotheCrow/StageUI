{
    "\"csstype\"": [
        {
            "name": "Properties",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2149,
                    "name": "alignSelf",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2147,
                    "name": "display",
                    "type": "stringLiteral",
                    "values": [
                        "block",
                        "inline",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "none",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex",
                        "grid"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2150,
                    "name": "justifySelf",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2148,
                    "name": "overflow",
                    "type": "stringLiteral",
                    "values": [
                        "auto",
                        "hidden",
                        "scroll",
                        "visible",
                        "inherit"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "BadgeTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 145,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right",
                        "top-right",
                        "bottom-right",
                        "top-left",
                        "bottom-left"
                    ],
                    "isOptional": true
                },
                {
                    "id": 146,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 148,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 147,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 144,
                    "name": "content",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ]
                },
                {
                    "id": 149,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 256,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 257,
                    "name": "holder",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "BlockTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 8,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 7,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 9,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5,
                    "name": "hoverSurface",
                    "type": "stringLiteral",
                    "values": [
                        "major",
                        "medium",
                        "minor"
                    ],
                    "isOptional": true
                },
                {
                    "id": 10,
                    "name": "overflow",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "scroll",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 11,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6,
                    "name": "position",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4,
                    "name": "surface",
                    "type": "stringLiteral",
                    "values": [
                        "major",
                        "medium",
                        "minor"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3,
                    "name": "tag",
                    "type": "stringLiteral",
                    "values": [
                        "div",
                        "span",
                        "header",
                        "footer",
                        "article",
                        "section",
                        "aside",
                        "main"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 118,
                    "name": "items",
                    "type": "reflection",
                    "values": [
                        "unknown"
                    ],
                    "isOptional": true
                },
                {
                    "id": 121,
                    "name": "variants",
                    "type": "reflection",
                    "values": [
                        "unknown"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ButtonTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1262,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1278,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1277,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1274,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "filled",
                        "outline",
                        "text",
                        "plain"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1263,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1264,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1265,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1266,
                    "name": "formEncType",
                    "comment": "The formenctype attribute specifies how form-data should be encoded before sending it to a server. This attribute overrides the form's enctype attribute.\nThe formenctype attribute is only used for buttons with type=\"submit\".",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1267,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1268,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1269,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1270,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1275,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1273,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1271,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "submit",
                        "reset",
                        "button"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1276,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1272,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "string[]",
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1385,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1386,
                    "name": "filled",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1387,
                    "name": "outline",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1389,
                    "name": "plain",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1388,
                    "name": "text",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        }
    ],
    "ChartTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5696,
                    "name": "data",
                    "type": "reference",
                    "values": [
                        "Array"
                    ]
                },
                {
                    "id": 5695,
                    "name": "labels",
                    "type": "reference",
                    "values": [
                        "Array"
                    ]
                },
                {
                    "id": 5697,
                    "name": "options",
                    "type": "reference",
                    "values": [
                        "ChartOptions"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5694,
                    "name": "type",
                    "comment": {
                        "tags": [
                            {
                                "tag": "default",
                                "text": "line\n"
                            }
                        ]
                    },
                    "type": "stringLiteral",
                    "tags": {
                        "default": "line"
                    },
                    "values": [
                        "line",
                        "pie",
                        "verticalBar",
                        "horizontalBar",
                        "doughnut",
                        "radar",
                        "polar",
                        "scatter",
                        "bubble"
                    ]
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "CheckTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3888,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3897,
                    "name": "children",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3898,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 3899,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 3900,
                                            "name": "checked",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ReactElement"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/hocs/Check/types.ts",
                                    "line": 17,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3894,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3889,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3885,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3886,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3890,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3896,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3887,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "checkbox",
                        "radio",
                        "switch"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3895,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "CheckboxTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 877,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 879,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 878,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 875,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 876,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 882,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 881,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 880,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 992,
                    "name": "check",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 993,
                    "name": "icon",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        }
    ],
    "DatePickerTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 997,
                    "name": "format",
                    "comment": "Format moment YYYY-MM-DD",
                    "type": "intrinsic",
                    "tags": {
                        "default": "YYYY-MM-DD"
                    },
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1007,
                    "name": "hideToday",
                    "comment": "Hide today button",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1006,
                    "name": "locale",
                    "comment": {
                        "tags": [
                            {
                                "tag": "default",
                                "text": "ru\n"
                            }
                        ]
                    },
                    "type": "stringLiteral",
                    "tags": {
                        "default": "ru"
                    },
                    "values": [
                        "en",
                        "ru",
                        "it",
                        "fr",
                        "de"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1005,
                    "name": "masked",
                    "comment": "Enable mask input",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 999,
                    "name": "maxValue",
                    "comment": "Max datetime that could be selected",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 998,
                    "name": "minValue",
                    "comment": "Min datetime that could be selected",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1000,
                    "name": "onChange",
                    "comment": "Callback function will with Date object\nor string if format property was passed.",
                    "type": "reflection",
                    "values": [
                        "(moment: Moment, value: string) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 996,
                    "name": "value",
                    "comment": "Property value could be a string\nif you pass format property aswell\notherwise value should be instance of Date",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Props for text form fields",
            "weight": 100,
            "children": [
                {
                    "id": 2423,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2418,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2417,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2420,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2415,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2414,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2422,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2421,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2419,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2416,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1058,
                    "name": "dateGrind",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1061,
                    "name": "gridBlock",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1057,
                    "name": "textFieldOkButton",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1056,
                    "name": "textFieldWrapper",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1060,
                    "name": "title",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1059,
                    "name": "weekDay",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "DateGridTitleProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1043,
                    "name": "gridType",
                    "type": "stringLiteral",
                    "values": [
                        "year",
                        "month",
                        "day"
                    ]
                },
                {
                    "id": 1042,
                    "name": "maxValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1041,
                    "name": "minValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1050,
                    "name": "onGridTypeChange",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1051,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1052,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 1053,
                                            "name": "type",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "reference",
                                                "name": "GridType",
                                                "id": 1062
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 80,
                                    "character": 25
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1044,
                    "name": "onNext",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1045,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1046,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 78,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1047,
                    "name": "onPrevious",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1048,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1049,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 79,
                                    "character": 19
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1054,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 1040,
                    "name": "value",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                }
            ]
        },
        {
            "name": "DateGridProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1019,
                    "name": "hideToday",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 1022,
                    "name": "maxValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1021,
                    "name": "minValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1023,
                    "name": "onChange",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1024,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1025,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 1026,
                                            "name": "date",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "reference",
                                                "name": "Moment"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 59,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1027,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 1020,
                    "name": "value",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                }
            ]
        },
        {
            "name": "DateGridCalendarProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1033,
                    "name": "active",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1032,
                    "name": "maxValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1031,
                    "name": "minValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1034,
                    "name": "onClick",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1037,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1038,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 1030,
                    "name": "tmp",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 1029,
                    "name": "value",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                }
            ]
        }
    ],
    "DividerTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2443,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2441,
                    "name": "dash",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2442,
                    "name": "gap",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2440,
                    "name": "vertical",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "DropTypes": [
        {
            "name": "TargetCoordinates",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4020,
                    "name": "bottom",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 4021,
                    "name": "left",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 4022,
                    "name": "right",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 4019,
                    "name": "top",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4025,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4038,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4029,
                    "name": "distance",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4026,
                    "name": "justify",
                    "type": "stringLiteral",
                    "values": [
                        "start",
                        "center",
                        "end",
                        "start-outside",
                        "end-outside"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4030,
                    "name": "onClickOutside",
                    "type": "reflection",
                    "values": [
                        "(event: MouseEvent, outsideTarget: undefined) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4035,
                    "name": "onEsc",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4028,
                    "name": "stretchHeight",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4027,
                    "name": "stretchWidth",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4024,
                    "name": "target",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 2328,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2327,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 2332,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2333,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2331,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2330,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 2341,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2347,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2345,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2344,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2346,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2342,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2343,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 2339,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2338,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2336,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2337,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "hidden",
                        "visible",
                        "collapse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2335,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "FieldTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4252,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4253,
                    "name": "cursor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4258,
                    "name": "fieldStyles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4260,
                    "name": "insideLabelStyles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4268,
                    "name": "isEmpty",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4264,
                    "name": "manyLines",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4251,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4261,
                    "name": "onClear",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4265,
                    "name": "onEnter",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4254,
                    "name": "onLabelOverlay",
                    "type": "reflection",
                    "values": [
                        "(state: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4259,
                    "name": "overlayLabelAlign",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Props for text form fields",
            "weight": 100,
            "children": [
                {
                    "id": 2423,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2418,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2417,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2420,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2415,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2414,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2422,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2421,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2419,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2416,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "FlexboxTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4405,
                    "name": "alignContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4404,
                    "name": "alignItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4411,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4402,
                    "name": "column",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4408,
                    "name": "direction",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "column",
                        "column-reverse",
                        "row",
                        "row-reverse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4410,
                    "name": "flow",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4403,
                    "name": "inline",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4406,
                    "name": "justifyContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4407,
                    "name": "justifyItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4409,
                    "name": "wrap",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "nowrap",
                        "wrap",
                        "wrap-reverse"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "Global": [
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 2328,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2327,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 2332,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2333,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2331,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2330,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 2341,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2347,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2345,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2344,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2346,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2342,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2343,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 2339,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2338,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2336,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2337,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "hidden",
                        "visible",
                        "collapse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2335,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 2328,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2327,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 2332,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2333,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2331,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2330,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 2341,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2347,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2345,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2344,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2346,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2342,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2343,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 2339,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2338,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2336,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2337,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "hidden",
                        "visible",
                        "collapse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2335,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 2349,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2355,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2353,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2352,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2354,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2350,
                    "name": "mx",
                    "comment": "Margin horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2351,
                    "name": "my",
                    "comment": "Margin vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleFlex",
            "comment": "Flexbox children styles",
            "weight": 400,
            "children": [
                {
                    "id": 2361,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2357,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2358,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2359,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2360,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2362,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 2370,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2368,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2365,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2364,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2369,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2367,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2366,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2371,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 2341,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2347,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2345,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2344,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2346,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2342,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2343,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 2349,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2355,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2353,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2352,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2354,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2350,
                    "name": "mx",
                    "comment": "Margin horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2351,
                    "name": "my",
                    "comment": "Margin vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 2339,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2338,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2336,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2337,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "hidden",
                        "visible",
                        "collapse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2335,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 2370,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2368,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2365,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2364,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2369,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2367,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2366,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2371,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 2349,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2355,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2353,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2352,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2354,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2350,
                    "name": "mx",
                    "comment": "Margin horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2351,
                    "name": "my",
                    "comment": "Margin vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleFlex",
            "comment": "Flexbox children styles",
            "weight": 400,
            "children": [
                {
                    "id": 2361,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2357,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2358,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2359,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2360,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2362,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 2370,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2368,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2365,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2364,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2369,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2367,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2366,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2371,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleFlex",
            "comment": "Flexbox children styles",
            "weight": 400,
            "children": [
                {
                    "id": 2361,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2357,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2358,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2359,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2360,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2362,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Props for text form fields",
            "weight": 100,
            "children": [
                {
                    "id": 2423,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2418,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2417,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2420,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2415,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2414,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2422,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2421,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2419,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2416,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 2328,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2327,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 2332,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2333,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2331,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2330,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "GridTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4535,
                    "name": "alignContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4534,
                    "name": "alignItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4531,
                    "name": "autoColumns",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4533,
                    "name": "autoFlow",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4532,
                    "name": "autoRows",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4524,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4528,
                    "name": "columnGap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4530,
                    "name": "gap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4523,
                    "name": "inline",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4536,
                    "name": "justifyContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4537,
                    "name": "justifyItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4529,
                    "name": "rowGap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4527,
                    "name": "templateAreas",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4525,
                    "name": "templateColumns",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4526,
                    "name": "templateRows",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "IconTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1396,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1395,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1393,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "circle",
                        "oval",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1394,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1392,
                    "name": "type",
                    "type": "reference",
                    "values": [
                        "Global.IconProp"
                    ]
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "IconsetTypes": [
        {
            "name": "Index",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1651,
                    "name": "filled",
                    "type": "reference",
                    "values": [
                        "Filled"
                    ]
                },
                {
                    "id": 1652,
                    "name": "outline",
                    "type": "reference",
                    "values": [
                        "Outline"
                    ]
                }
            ]
        }
    ],
    "MenuTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4702,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "start",
                        "center",
                        "end"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4701,
                    "name": "border",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "narrow",
                        "wide"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4704,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4696,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "filled",
                        "outline",
                        "color",
                        "underline",
                        "tab",
                        "filled-underline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4688,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4699,
                    "name": "direction",
                    "type": "stringLiteral",
                    "values": [
                        "row",
                        "column"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4705,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4698,
                    "name": "distance",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4697,
                    "name": "flip",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4694,
                    "name": "items",
                    "type": "reference",
                    "values": [
                        "Item[]"
                    ]
                },
                {
                    "id": 4690,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(value: Value) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4703,
                    "name": "separator",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4700,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4695,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4689,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "ItemProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4828,
                    "name": "active",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4830,
                    "name": "onEnter",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4829,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Item",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4812,
                    "name": "content",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ]
                },
                {
                    "id": 4814,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4813,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ]
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "MeterTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5312,
                    "name": "animation",
                    "comment": "Enabled process animation",
                    "type": "intrinsic",
                    "tags": {
                        "default": "false"
                    },
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5311,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5309,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "filled",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5306,
                    "name": "percent",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 5310,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5307,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5308,
                    "name": "type",
                    "comment": {
                        "tags": [
                            {
                                "tag": "default",
                                "text": "line\n"
                            }
                        ]
                    },
                    "type": "stringLiteral",
                    "tags": {
                        "default": "line"
                    },
                    "values": [
                        "line",
                        "circle"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ModalTypes": [
        {
            "name": "StyleProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 609,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 610,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 608,
                    "name": "visible",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "Ref",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 530,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 506,
                    "name": "close",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 507,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 508,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 509,
                                            "name": "didClose",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {
                                                "isOptional": true
                                            },
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "undefined"
                                                    },
                                                    {
                                                        "type": "reflection",
                                                        "declaration": {
                                                            "id": 510,
                                                            "name": "__type",
                                                            "kind": 65536,
                                                            "kindString": "Type literal",
                                                            "flags": {},
                                                            "signatures": [
                                                                {
                                                                    "id": 511,
                                                                    "name": "__call",
                                                                    "kind": 4096,
                                                                    "kindString": "Call signature",
                                                                    "flags": {},
                                                                    "type": {
                                                                        "type": "intrinsic",
                                                                        "name": "void"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 9,
                                    "character": 14
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 531,
                    "name": "customContent",
                    "type": "intrinsic",
                    "values": [
                        "ReactElement",
                        "null"
                    ]
                },
                {
                    "id": 502,
                    "name": "open",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 503,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 504,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 505,
                                            "name": "customContent",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {
                                                "isOptional": true
                                            },
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "name": "ReactElement"
                                                    },
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "null"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 8,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 532,
                    "name": "overlay",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 520,
                    "name": "setCenter",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 521,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 522,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 523,
                                            "name": "center",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 12,
                                    "character": 18
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 524,
                    "name": "setCustomContent",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 525,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 526,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 527,
                                            "name": "customContent",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "name": "ReactElement"
                                                    },
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "null"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 13,
                                    "character": 25
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 516,
                    "name": "setSubtitle",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 517,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 518,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 519,
                                            "name": "subtitle",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 11,
                                    "character": 20
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 512,
                    "name": "setTitle",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 513,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 514,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 515,
                                            "name": "title",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 10,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 529,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 528,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 533,
                    "name": "window",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 538,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 543,
                    "name": "didClose",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 549,
                    "name": "didOpen",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 537,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 539,
                    "name": "hideHeader",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 540,
                    "name": "onClose",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 546,
                    "name": "onOpen",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 536,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 535,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 2328,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2327,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 2332,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2333,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2331,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2330,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 2341,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2347,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2345,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2344,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2346,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2342,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2343,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 2339,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2338,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2336,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2337,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "hidden",
                        "visible",
                        "collapse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2335,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 642,
                    "name": "cross",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 641,
                    "name": "header",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 639,
                    "name": "overlay",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 640,
                    "name": "window",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                }
            ]
        },
        {
            "name": "ModalWindowProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 621,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 624,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 625,
                    "name": "containerAttr",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "HTMLAttributes",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "name": "HTMLElement"
                                    }
                                ]
                            },
                            {
                                "type": "reference",
                                "name": "SelfProps",
                                "id": 2372
                            }
                        ]
                    },
                    "isOptional": true
                },
                {
                    "id": 622,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 623,
                    "name": "hideHeader",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 626,
                    "name": "onClosePressed",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 627,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 628,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 63,
                                    "character": 23
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 629,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 619,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 618,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 620,
                    "name": "visible",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "ModalOverlayProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 613,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 615,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 614,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 616,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 612,
                    "name": "visible",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "ModalHeaderProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 633,
                    "name": "hideHeader",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "onClosePressed",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 635,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 636,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 71,
                                    "character": 23
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 637,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 632,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 631,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InnerProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 571,
                    "name": "innerRef",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        }
    ],
    "NotificationTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5480,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5481,
                    "name": "onClick",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "NotifyOptions",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5491,
                    "name": "customContent",
                    "comment": "if custom content filled then title and message will be ignored",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5486,
                    "name": "message",
                    "comment": "Message of notification",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 5488,
                    "name": "onClick",
                    "comment": "Will call on notificaion click",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5487,
                    "name": "timeout",
                    "comment": "Notification will be removed after timeout\nvalue in milisecods",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5485,
                    "name": "title",
                    "comment": "Title of notification",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        }
    ],
    "PanelTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 645,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "right",
                        "bottom",
                        "left"
                    ],
                    "isOptional": true
                },
                {
                    "id": 646,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 648,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 647,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 755,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "PopoverTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 758,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ],
                    "isOptional": true
                },
                {
                    "id": 764,
                    "name": "arrowHeight",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 763,
                    "name": "arrowWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 759,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 761,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 760,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 762,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 872,
                    "name": "arrow",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 871,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "RadioTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5018,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5020,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5019,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5016,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5017,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5023,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5022,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5021,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5133,
                    "name": "check",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 5134,
                    "name": "icon",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        }
    ],
    "RangeTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1515,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1508,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1507,
                    "name": "max",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1506,
                    "name": "min",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1510,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(value: number) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1514,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1509,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1517,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 1520,
                    "name": "handle",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 1518,
                    "name": "rail",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 1519,
                    "name": "track",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                }
            ]
        }
    ],
    "SelectTypes": [
        {
            "name": "SearchProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1221,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1222,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1214,
                    "name": "onSearch",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1215,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1216,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 1217,
                                            "name": "searchValue",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Select/types.ts",
                                    "line": 70,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1220,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1213,
                    "name": "searchValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1218,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1219,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1074,
                    "name": "defaultValues",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1071,
                    "name": "multiselect",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1075,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(values: undefined, changedValue: Option) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1070,
                    "name": "options",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ]
                },
                {
                    "id": 1069,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1072,
                    "name": "searchable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1073,
                    "name": "values",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Props for text form fields",
            "weight": 100,
            "children": [
                {
                    "id": 2423,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2418,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2417,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2420,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2415,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2414,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2422,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2421,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2419,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2416,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1224,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 1227,
                    "name": "dropItem",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 1226,
                    "name": "dropMenu",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 1225,
                    "name": "input",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                }
            ]
        },
        {
            "name": "OptionsProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1197,
                    "name": "onClose",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1198,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1199,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 1200,
                                            "name": "option",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Select/types.ts",
                                    "line": 65,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1201,
                    "name": "searchable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1196,
                    "name": "selected",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ]
                }
            ]
        },
        {
            "name": "SearchProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1221,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1222,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1214,
                    "name": "onSearch",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1215,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1216,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 1217,
                                            "name": "searchValue",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Select/types.ts",
                                    "line": 70,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1220,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1213,
                    "name": "searchValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1218,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1219,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "Option",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1066,
                    "name": "text",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1067,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        }
    ],
    "SpinnerTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3349,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3348,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3352,
                    "name": "count",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3351,
                    "name": "duration",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3350,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3353,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "SplitTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5829,
                    "name": "areaSize",
                    "comment": "Split area size, value in pixels",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5828,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "ReactElement[]"
                    ]
                },
                {
                    "id": 5827,
                    "name": "direction",
                    "type": "stringLiteral",
                    "values": [
                        "row",
                        "column"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5835,
                    "name": "onChange",
                    "comment": "Calls when mouseUp if position did change",
                    "type": "reflection",
                    "values": [
                        "(positions: undefined) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5831,
                    "name": "onMove",
                    "comment": "Calls when split area moves",
                    "type": "reflection",
                    "values": [
                        "(positions: undefined) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5830,
                    "name": "positions",
                    "comment": "You can give it array of numbers (in percent)",
                    "type": "intrinsic",
                    "values": [
                        "number[]"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "SwitchTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5181,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5183,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5182,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5179,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5180,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5186,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5185,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5184,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5296,
                    "name": "check",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 5297,
                    "name": "icon",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        }
    ],
    "TableTypes": [
        {
            "name": "TablePagination",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 464,
                    "name": "async",
                    "type": "reflection",
                    "values": [
                        "(page: number) => boolean"
                    ],
                    "isOptional": true
                },
                {
                    "id": 462,
                    "name": "pageSize",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 463,
                    "name": "pageTotalSize",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "TableForm",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 277,
                    "name": "defaultData",
                    "type": "reflection",
                    "values": [
                        "unknown"
                    ],
                    "isOptional": true
                },
                {
                    "id": 282,
                    "name": "dismiss",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 276,
                    "name": "key",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 281,
                    "name": "render",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "TableColumn",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 261,
                    "name": "dataIndex",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 263,
                    "name": "render",
                    "type": "reflection",
                    "values": [
                        "(row: any, value: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 260,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 262,
                    "name": "width",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "TableActions",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 270,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 269,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 271,
                    "name": "onAction",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 272,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 273,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 274,
                                            "name": "row",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 15,
                                    "character": 17
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "RowProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 417,
                    "name": "actions",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 418,
                    "name": "border",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 422,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 413,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 420,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 416,
                    "name": "isBlur",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 415,
                    "name": "isExpanding",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 414,
                    "name": "isSelected",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 423,
                    "name": "onRowClick",
                    "type": "reflection",
                    "values": [
                        "(row: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 412,
                    "name": "row",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 419,
                    "name": "scope",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 421,
                    "name": "style",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 427,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 289,
                    "name": "actions",
                    "type": "reference",
                    "values": [
                        "TableActions[]"
                    ],
                    "isOptional": true
                },
                {
                    "id": 290,
                    "name": "border",
                    "type": "stringLiteral",
                    "values": [
                        "all",
                        "external",
                        "internal",
                        "vertical",
                        "horizontal"
                    ],
                    "isOptional": true
                },
                {
                    "id": 295,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 306,
                    "name": "className",
                    "type": "intrinsic",
                    "overwrites": {
                        "type": "reference",
                        "name": "HTMLAttributes.className",
                        "id": 2259
                    },
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 287,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 286,
                    "name": "data",
                    "type": "reference",
                    "values": [
                        "Object[]"
                    ]
                },
                {
                    "id": 288,
                    "name": "form",
                    "type": "reference",
                    "values": [
                        "TableForm"
                    ],
                    "isOptional": true
                },
                {
                    "id": 305,
                    "name": "hideHeaders",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 291,
                    "name": "indexKey",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 294,
                    "name": "noDataLabel",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 296,
                    "name": "onRowClick",
                    "type": "reflection",
                    "values": [
                        "(row: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 301,
                    "name": "onSearch",
                    "type": "reflection",
                    "values": [
                        "(value: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 293,
                    "name": "pagination",
                    "type": "reference",
                    "values": [
                        "TablePagination"
                    ],
                    "isOptional": true
                },
                {
                    "id": 292,
                    "name": "scope",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 300,
                    "name": "search",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "PaginationProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 482,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 473,
                    "name": "data",
                    "type": "reflection",
                    "values": [
                        "unknown"
                    ]
                },
                {
                    "id": 477,
                    "name": "onChange",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 478,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 479,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 480,
                                            "name": "page",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "number"
                                            }
                                        },
                                        {
                                            "id": 481,
                                            "name": "searchBar",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 101,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 470,
                    "name": "page",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 469,
                    "name": "pagination",
                    "type": "reference",
                    "values": [
                        "TablePagination"
                    ]
                },
                {
                    "id": 472,
                    "name": "search",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 471,
                    "name": "searchActive",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 483,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 498,
                    "name": "actionButtons",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 499,
                    "name": "actionButtonsEdit",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 497,
                    "name": "actions",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 490,
                    "name": "body",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 495,
                    "name": "column",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 485,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 486,
                    "name": "content",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 488,
                    "name": "headColumn",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 487,
                    "name": "headRow",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 496,
                    "name": "more",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 491,
                    "name": "pagination",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 492,
                    "name": "paginationButton",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 493,
                    "name": "row",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 489,
                    "name": "search",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 494,
                    "name": "subrow",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                }
            ]
        },
        {
            "name": "InjectForm",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 452,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 448,
                    "name": "data",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 449,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "indexSignature": [
                                {
                                    "id": 450,
                                    "name": "__index",
                                    "kind": 8192,
                                    "kindString": "Index signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 451,
                                            "name": "key",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 83,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 458,
                    "name": "dismiss",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 453,
                    "name": "setData",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 454,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 455,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 456,
                                            "name": "key",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        },
                                        {
                                            "id": 457,
                                            "name": "value",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 85,
                                    "character": 16
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "FormProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 445,
                    "name": "Form",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 446,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 444,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 440,
                    "name": "data",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 441,
                    "name": "dismiss",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "ColumnProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 432,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 430,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 429,
                    "name": "row",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 431,
                    "name": "scope",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 433,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "ActionsProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 435,
                    "name": "actions",
                    "type": "intrinsic",
                    "values": [
                        "any[]"
                    ]
                },
                {
                    "id": 437,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 436,
                    "name": "data",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 438,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        }
    ],
    "TextFieldTypes": [
        {
            "name": "TextAreaProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4245,
                    "name": "cols",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4246,
                    "name": "rows",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4247,
                    "name": "wrap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4077,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4076,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4079,
                    "name": "masked",
                    "type": "reference",
                    "values": [
                        "IMask.AnyMaskedOptions"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4078,
                    "name": "multiline",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4080,
                    "name": "onChange",
                    "type": "reference",
                    "values": [
                        "ChangeEventHandler"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InputProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4222,
                    "name": "autoComplete",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4223,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4232,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4233,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4234,
                    "name": "formEncType",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4235,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4236,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4237,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4224,
                    "name": "list",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4238,
                    "name": "max",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4239,
                    "name": "maxLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4240,
                    "name": "min",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4241,
                    "name": "minLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4225,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4227,
                    "name": "pattern",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4226,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4228,
                    "name": "readOnly",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4229,
                    "name": "required",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4242,
                    "name": "step",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4230,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "email",
                        "hidden",
                        "number",
                        "password",
                        "reset",
                        "search",
                        "tel",
                        "text",
                        "url"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4231,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4243,
                    "name": "width",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "TextAreaProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4245,
                    "name": "cols",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4246,
                    "name": "rows",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4247,
                    "name": "wrap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Props for text form fields",
            "weight": 100,
            "children": [
                {
                    "id": 2423,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2418,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2417,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2420,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2415,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2414,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2422,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2421,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2419,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2416,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InputProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4222,
                    "name": "autoComplete",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4223,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4232,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4233,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4234,
                    "name": "formEncType",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4235,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4236,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4237,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4224,
                    "name": "list",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4238,
                    "name": "max",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4239,
                    "name": "maxLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4240,
                    "name": "min",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4241,
                    "name": "minLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4225,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4227,
                    "name": "pattern",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4226,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4228,
                    "name": "readOnly",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4229,
                    "name": "required",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4242,
                    "name": "step",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4230,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "email",
                        "hidden",
                        "number",
                        "password",
                        "reset",
                        "search",
                        "tel",
                        "text",
                        "url"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4231,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4243,
                    "name": "width",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ThemeTypes": [
        {
            "name": "Variables",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1534,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Colors"
                    ]
                },
                {
                    "id": 1536,
                    "name": "distance",
                    "type": "reference",
                    "values": [
                        "Distance"
                    ]
                },
                {
                    "id": 1533,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1535,
                    "name": "radius",
                    "type": "reference",
                    "values": [
                        "Radius"
                    ]
                },
                {
                    "id": 1537,
                    "name": "typography",
                    "type": "reference",
                    "values": [
                        "Typography"
                    ]
                }
            ]
        },
        {
            "name": "Typography",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1603,
                    "name": "caption",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1604,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1605,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 142,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1606,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 143,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1607,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 144,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1608,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 145,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1605,
                                        1606,
                                        1607,
                                        1608
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 141,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1597,
                    "name": "display",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1598,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1599,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 136,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1600,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 137,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1601,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 138,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1602,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 139,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1599,
                                        1600,
                                        1601,
                                        1602
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 135,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1585,
                    "name": "header",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1586,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1587,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 124,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1588,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 125,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1589,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 126,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1590,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 127,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1587,
                                        1588,
                                        1589,
                                        1590
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 123,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1584,
                    "name": "paragraph",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1591,
                    "name": "text",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1592,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1593,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 130,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1594,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 131,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1595,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 132,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1596,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 133,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1593,
                                        1594,
                                        1595,
                                        1596
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 129,
                                    "character": 13
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1567,
                    "name": "bage",
                    "type": "reference",
                    "values": [
                        "BageTypes.Overrides"
                    ]
                },
                {
                    "id": 1566,
                    "name": "block",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1565,
                    "name": "button",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1572,
                    "name": "checkbox",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1573,
                    "name": "datePicker",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1575,
                    "name": "icon",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1569,
                    "name": "modal",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1570,
                    "name": "panel",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1571,
                    "name": "popover",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1576,
                    "name": "range",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1574,
                    "name": "select",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1568,
                    "name": "table",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                }
            ]
        },
        {
            "name": "Index",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1523,
                    "name": "assets",
                    "type": "reference",
                    "values": [
                        "Assets"
                    ]
                },
                {
                    "id": 1524,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1525,
                    "name": "replace",
                    "type": "reference",
                    "values": [
                        "Replace"
                    ]
                }
            ]
        },
        {
            "name": "Variables",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1534,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Colors"
                    ]
                },
                {
                    "id": 1536,
                    "name": "distance",
                    "type": "reference",
                    "values": [
                        "Distance"
                    ]
                },
                {
                    "id": 1533,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1535,
                    "name": "radius",
                    "type": "reference",
                    "values": [
                        "Radius"
                    ]
                },
                {
                    "id": 1537,
                    "name": "typography",
                    "type": "reference",
                    "values": [
                        "Typography"
                    ]
                }
            ]
        },
        {
            "name": "Distance",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1581,
                    "name": "large",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1580,
                    "name": "medium",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1579,
                    "name": "small",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1582,
                    "name": "xlarge",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1578,
                    "name": "xsmall",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        },
        {
            "name": "Assets",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1540,
                    "name": "border",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1541,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1544,
                                    "name": "color",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 37,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1543,
                                    "name": "style",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 36,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1542,
                                    "name": "width",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 35,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1544,
                                        1543,
                                        1542
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 34,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1557,
                    "name": "fieldHeight",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1558,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1562,
                                    "name": "large",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 55,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1561,
                                    "name": "medium",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 54,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1560,
                                    "name": "small",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 53,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1563,
                                    "name": "xlarge",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 56,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1559,
                                    "name": "xsmall",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 52,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1562,
                                        1561,
                                        1560,
                                        1563,
                                        1559
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 51,
                                    "character": 20
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1556,
                    "name": "focus",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1539,
                    "name": "global",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1550,
                    "name": "gradient",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1551,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1552,
                                    "name": "linear",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 45,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1553,
                                    "name": "linearVariant",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 46,
                                            "character": 25
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1554,
                                    "name": "radial",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 47,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1555,
                                    "name": "radialVariant",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 48,
                                            "character": 25
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1552,
                                        1553,
                                        1554,
                                        1555
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 44,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1545,
                    "name": "shadow",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1546,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1547,
                                    "name": "default",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 40,
                                            "character": 19
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1549,
                                    "name": "long",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 42,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1548,
                                    "name": "short",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 41,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1547,
                                        1549,
                                        1548
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 39,
                                    "character": 15
                                }
                            ]
                        }
                    }
                }
            ]
        }
    ],
    "TreeTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5506,
                    "name": "alwaysOpen",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5503,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5504,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "flat",
                        "drop",
                        "inline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5507,
                    "name": "defaultOpen",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5508,
                    "name": "indent",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5502,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "React.ReactNode",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5505,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5615,
                    "name": "containter",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "TypographyTypes": [
        {
            "name": "TextProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3724,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "center",
                        "end",
                        "left",
                        "right",
                        "start",
                        "justify",
                        "match-parent"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3723,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3721,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3722,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3720,
                    "name": "decoration",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3719,
                    "name": "ellipsis",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3718,
                    "name": "quotes",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3726,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3727,
                    "name": "transform",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "none",
                        "full-width",
                        "capitalize",
                        "full-size-kana",
                        "lowercase",
                        "uppercase"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3725,
                    "name": "weight",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "normal",
                        "bold",
                        "bolder",
                        "lighter"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 2316,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2314,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2324,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2323,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2325,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2322,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 2264,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2259,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2260,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2261,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2262,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3465,
                    "name": "defaultStyles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 3466,
                    "name": "tag",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 3467,
                    "name": "theme",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "TextProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3724,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "center",
                        "end",
                        "left",
                        "right",
                        "start",
                        "justify",
                        "match-parent"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3723,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3721,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3722,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3720,
                    "name": "decoration",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3719,
                    "name": "ellipsis",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3718,
                    "name": "quotes",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3726,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3727,
                    "name": "transform",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "none",
                        "full-width",
                        "capitalize",
                        "full-size-kana",
                        "lowercase",
                        "uppercase"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3725,
                    "name": "weight",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "normal",
                        "bold",
                        "bolder",
                        "lighter"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "AnchorProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3593,
                    "name": "download",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3594,
                    "name": "href",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3595,
                    "name": "hrefLang",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3596,
                    "name": "media",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3597,
                    "name": "ping",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3601,
                    "name": "referrerPolicy",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3598,
                    "name": "rel",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3599,
                    "name": "target",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3600,
                    "name": "type",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ViewportTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2615,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2612,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2613,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2614,
                    "name": "theme",
                    "type": "reflection",
                    "values": [
                        "(lib: T) => R"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2611,
                    "name": "wrapper",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "MountAreaElement",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2620,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "ReactElement"
                    ]
                },
                {
                    "id": 2619,
                    "name": "key",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        },
        {
            "name": "MountArea",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2617,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "DialogOptions",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2628,
                    "name": "buttonText",
                    "comment": "Button text",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2630,
                    "name": "customContent",
                    "comment": "if custom content filled then message and buttonText will be ignored",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2629,
                    "name": "hideHeader",
                    "comment": "Hides modal window header",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2627,
                    "name": "message",
                    "comment": "Message of dialog",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2626,
                    "name": "subtitle",
                    "comment": "Subtitle of modal window header",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2625,
                    "name": "title",
                    "comment": "Title of modal window header",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Context",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2623,
                    "name": "browser",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 2622,
                    "name": "theme",
                    "type": "reference",
                    "values": [
                        "ThemeType.Index"
                    ]
                }
            ]
        }
    ]
}