{
    "\"csstype\"": [
        {
            "name": "Properties",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 511,
                    "name": "alignSelf",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 509,
                    "name": "display",
                    "type": "stringLiteral",
                    "values": [
                        "block",
                        "inline",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "none",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex",
                        "grid"
                    ],
                    "isOptional": true
                },
                {
                    "id": 512,
                    "name": "justifySelf",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 510,
                    "name": "overflow",
                    "type": "stringLiteral",
                    "values": [
                        "auto",
                        "hidden",
                        "scroll",
                        "visible",
                        "inherit"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "BadgeTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3874,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3875,
                    "name": "holder",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3876,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3877,
                                    "name": "align",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Badge/types.ts",
                                            "line": 13,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "left"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "right"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "top"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "bottom"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "top-right"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "bottom-right"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "top-left"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "bottom-left"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3877
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Badge/types.ts",
                                    "line": 12,
                                    "character": 15
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3754,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right",
                        "top-right",
                        "bottom-right",
                        "top-left",
                        "bottom-left"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3755,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3753,
                    "name": "content",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ]
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "BlockTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4006,
                    "name": "container",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4007,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4009,
                                    "name": "hoverSurface",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Block/types.ts",
                                            "line": 19,
                                            "character": 24
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "major"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "minor"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4008,
                                    "name": "surface",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Block/types.ts",
                                            "line": 18,
                                            "character": 19
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "major"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "minor"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4009,
                                        4008
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Block/types.ts",
                                    "line": 17,
                                    "character": 18
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3885,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3884,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3886,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3882,
                    "name": "hoverSurface",
                    "type": "stringLiteral",
                    "values": [
                        "major",
                        "medium",
                        "minor"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3887,
                    "name": "overflow",
                    "type": "stringLiteral",
                    "values": [
                        "auto",
                        "hidden",
                        "scroll",
                        "visible",
                        "inherit"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3883,
                    "name": "position",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3881,
                    "name": "surface",
                    "type": "stringLiteral",
                    "values": [
                        "major",
                        "medium",
                        "minor"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3880,
                    "name": "tag",
                    "type": "stringLiteral",
                    "values": [
                        "div",
                        "span",
                        "header",
                        "footer",
                        "article",
                        "section",
                        "aside",
                        "main"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ButtonGroupTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 9136,
                    "name": "children",
                    "type": "reference",
                    "overwrites": {
                        "type": "reference",
                        "name": "Props.children",
                        "id": 1240
                    },
                    "values": [
                        "ReactElement",
                        "ReactElement[]"
                    ]
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 516,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "ComponentStyles"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ButtonTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1359,
                    "name": "container",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1360,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1361,
                                    "name": "decoration",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Button/types.ts",
                                            "line": 36,
                                            "character": 22
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "text"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "filled"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "outline"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "plain"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1362,
                                    "name": "shape",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Button/types.ts",
                                            "line": 37,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "square"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "rounded"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "round"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1363,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Button/types.ts",
                                            "line": 38,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1361,
                                        1362,
                                        1363
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Button/types.ts",
                                    "line": 35,
                                    "character": 18
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1224,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1240,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1239,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1236,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "filled",
                        "outline",
                        "text",
                        "plain"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1225,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1226,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1227,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1228,
                    "name": "formEncType",
                    "comment": "The formenctype attribute specifies how form-data should be encoded\nbefore sending it to a server. This attribute overrides the form's\nenctype attribute.\nThe formenctype attribute is only used for buttons with type=\"submit\".",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1229,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1230,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1231,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1232,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1237,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1235,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1233,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "submit",
                        "reset",
                        "button"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1238,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1234,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "string[]",
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ChartTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 8497,
                    "name": "data",
                    "type": "reference",
                    "values": [
                        "Array"
                    ]
                },
                {
                    "id": 8496,
                    "name": "labels",
                    "type": "reference",
                    "values": [
                        "Array"
                    ]
                },
                {
                    "id": 8498,
                    "name": "options",
                    "type": "reference",
                    "values": [
                        "ChartOptions"
                    ],
                    "isOptional": true
                },
                {
                    "id": 8495,
                    "name": "type",
                    "comment": {
                        "tags": [
                            {
                                "tag": "default",
                                "text": "line\n"
                            }
                        ]
                    },
                    "type": "stringLiteral",
                    "tags": {
                        "default": "line"
                    },
                    "values": [
                        "line",
                        "pie",
                        "verticalBar",
                        "horizontalBar",
                        "doughnut",
                        "radar",
                        "polar",
                        "scatter",
                        "bubble"
                    ]
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "CheckTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1631,
                    "name": "container",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1632,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1634,
                                    "name": "animated",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 27,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1633,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 26,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1634,
                                        1633
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/hocs/Check/types.ts",
                                    "line": 25,
                                    "character": 18
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1635,
                    "name": "label",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1636,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1640,
                                    "name": "animated",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 33,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1637,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 30,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1638,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 31,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1639,
                                    "name": "uppercase",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 32,
                                            "character": 21
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1640,
                                        1637,
                                        1638,
                                        1639
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/hocs/Check/types.ts",
                                    "line": 29,
                                    "character": 14
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1368,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1374,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1369,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1366,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1367,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1370,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1376,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1375,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "PrivateProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1495,
                    "name": "children",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1496,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1497,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 1498,
                                            "name": "checked",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        },
                                        {
                                            "id": 1499,
                                            "name": "focus",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ReactElement"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/hocs/Check/types.ts",
                                    "line": 19,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1501,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                },
                {
                    "id": 1500,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "checkbox",
                        "radio",
                        "switch"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 516,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "ComponentStyles"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "CheckboxTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1773,
                    "name": "check",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1774,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1776,
                                    "name": "animated",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Checkbox/types.ts",
                                            "line": 10,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1777,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Checkbox/types.ts",
                                            "line": 11,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1778,
                                    "name": "focus",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Checkbox/types.ts",
                                            "line": 12,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "id": 1775,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Checkbox/types.ts",
                                            "line": 9,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1776,
                                        1777,
                                        1778,
                                        1775
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Checkbox/types.ts",
                                    "line": 8,
                                    "character": 14
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1779,
                    "name": "icon",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1780,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1783,
                                    "name": "animated",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Checkbox/types.ts",
                                            "line": 17,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1781,
                                    "name": "checked",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Checkbox/types.ts",
                                            "line": 15,
                                            "character": 19
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1784,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Checkbox/types.ts",
                                            "line": 18,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1782,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Checkbox/types.ts",
                                            "line": 16,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1783,
                                        1781,
                                        1784,
                                        1782
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Checkbox/types.ts",
                                    "line": 14,
                                    "character": 13
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1631,
                    "name": "container",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1632,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1634,
                                    "name": "animated",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 27,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1633,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 26,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1634,
                                        1633
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/hocs/Check/types.ts",
                                    "line": 25,
                                    "character": 18
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1635,
                    "name": "label",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1636,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1640,
                                    "name": "animated",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 33,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1637,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 30,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1638,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 31,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1639,
                                    "name": "uppercase",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 32,
                                            "character": 21
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1640,
                                        1637,
                                        1638,
                                        1639
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/hocs/Check/types.ts",
                                    "line": 29,
                                    "character": 14
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 516,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "ComponentStyles"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "DatePickerTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2297,
                    "name": "dateGrind",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 2306,
                    "name": "drop",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2307,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 2308,
                                    "name": "isActive",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/DatePicker/types.ts",
                                            "line": 126,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        2308
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 125,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2300,
                    "name": "gridBlock",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2301,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 2302,
                                    "name": "isActive",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/DatePicker/types.ts",
                                            "line": 120,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "Boolean"
                                    }
                                },
                                {
                                    "id": 2303,
                                    "name": "isCurrent",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/DatePicker/types.ts",
                                            "line": 121,
                                            "character": 21
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "id": 2305,
                                    "name": "isCurrentMonth",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/DatePicker/types.ts",
                                            "line": 123,
                                            "character": 26
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "id": 2304,
                                    "name": "isDisabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/DatePicker/types.ts",
                                            "line": 122,
                                            "character": 22
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        2302,
                                        2303,
                                        2305,
                                        2304
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 119,
                                    "character": 18
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2309,
                    "name": "input",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2310,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 2311,
                                    "name": "isLabelOverlay",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/DatePicker/types.ts",
                                            "line": 129,
                                            "character": 26
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        2311
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 128,
                                    "character": 14
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2299,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 2298,
                    "name": "weekDay",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1939,
                    "name": "child",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reflection",
                                "declaration": {
                                    "id": 1940,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                        {
                                            "id": 1941,
                                            "name": "align",
                                            "kind": 32,
                                            "kindString": "Variable",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "core/misc/hocs/Field/types.ts",
                                                    "line": 35,
                                                    "character": 17
                                                }
                                            ],
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "stringLiteral",
                                                        "value": "right"
                                                    },
                                                    {
                                                        "type": "stringLiteral",
                                                        "value": "left"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "groups": [
                                        {
                                            "title": "Variables",
                                            "kind": 32,
                                            "children": [
                                                1941
                                            ]
                                        }
                                    ],
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Field/types.ts",
                                            "line": 34,
                                            "character": 14
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"child\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1935,
                    "name": "container",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"container\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1937,
                    "name": "content",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"content\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1936,
                    "name": "field",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"field\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1942,
                    "name": "hint",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"hint\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1938,
                    "name": "label",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"label\"]"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2089,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2090,
                    "name": "format",
                    "comment": "Format moment YYYY-MM-DD",
                    "type": "intrinsic",
                    "tags": {
                        "default": "YYYY-MM-DD"
                    },
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2101,
                    "name": "hideToday",
                    "comment": "Hide today button",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2100,
                    "name": "locale",
                    "comment": {
                        "tags": [
                            {
                                "tag": "default",
                                "text": "ru\n"
                            }
                        ]
                    },
                    "type": "stringLiteral",
                    "tags": {
                        "default": "ru"
                    },
                    "values": [
                        "en",
                        "ru",
                        "it",
                        "fr",
                        "de"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2099,
                    "name": "masked",
                    "comment": "Enable mask input",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2092,
                    "name": "maxValue",
                    "comment": "Max datetime that could be selected",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2091,
                    "name": "minValue",
                    "comment": "Min datetime that could be selected",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2093,
                    "name": "onChange",
                    "comment": "Callback function will with Date object\nor string if format property was passed.",
                    "type": "reflection",
                    "values": [
                        "(moment: Moment, value: string) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2098,
                    "name": "stayOpen",
                    "comment": "Do not close datepicker on change\nlatest value",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2087,
                    "name": "type",
                    "comment": "Type for DatePicker",
                    "type": "stringLiteral",
                    "tags": {
                        "default": "day"
                    },
                    "values": [
                        "year",
                        "month",
                        "day"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2088,
                    "name": "value",
                    "comment": "Property value could be a string\nif you pass format property aswell\notherwise value should be instance of Date",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 516,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "ComponentStyles"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InputProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2282,
                    "name": "autoComplete",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2283,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2290,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2291,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2292,
                    "name": "formEncType",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2293,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2294,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2295,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2284,
                    "name": "list",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2285,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2287,
                    "name": "pattern",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2286,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2288,
                    "name": "readOnly",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2289,
                    "name": "required",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InputProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2282,
                    "name": "autoComplete",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2283,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2290,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2291,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2292,
                    "name": "formEncType",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2293,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2294,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2295,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2284,
                    "name": "list",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2285,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2287,
                    "name": "pattern",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2286,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2288,
                    "name": "readOnly",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2289,
                    "name": "required",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "DateGridTitleProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2269,
                    "name": "gridType",
                    "type": "stringLiteral",
                    "values": [
                        "year",
                        "month",
                        "day"
                    ]
                },
                {
                    "id": 2268,
                    "name": "maxValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 2267,
                    "name": "minValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 2276,
                    "name": "onGridTypeChange",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2277,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2278,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2279,
                                            "name": "type",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "reference",
                                                "name": "GridType",
                                                "id": 2322
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 93,
                                    "character": 25
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2270,
                    "name": "onNext",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2271,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2272,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 91,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2273,
                    "name": "onPrevious",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2274,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2275,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 92,
                                    "character": 19
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2280,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                },
                {
                    "id": 2266,
                    "name": "value",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                }
            ]
        },
        {
            "name": "DateGridProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2244,
                    "name": "hideToday",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 2247,
                    "name": "maxValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 2246,
                    "name": "minValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 2248,
                    "name": "onChange",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2249,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2250,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2251,
                                            "name": "date",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "reference",
                                                "name": "Moment"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 70,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2252,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                },
                {
                    "id": 2253,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "year",
                        "month",
                        "day"
                    ]
                },
                {
                    "id": 2245,
                    "name": "value",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                }
            ]
        },
        {
            "name": "DateGridCalendarProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2259,
                    "name": "active",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 2258,
                    "name": "maxValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 2257,
                    "name": "minValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 2260,
                    "name": "onClick",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2263,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2264,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                },
                {
                    "id": 2256,
                    "name": "tmp",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 2255,
                    "name": "value",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                }
            ]
        }
    ],
    "DividerTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 965,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 846,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 844,
                    "name": "dash",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 845,
                    "name": "gap",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 843,
                    "name": "vertical",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "DropTypes": [
        {
            "name": "TargetCoordinates",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4013,
                    "name": "bottom",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 4014,
                    "name": "left",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 4015,
                    "name": "right",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 4012,
                    "name": "top",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                }
            ]
        },
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4132,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Ref",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4127,
                    "name": "updatePosition",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4128,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 4129,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Drop/types.ts",
                                    "line": 24,
                                    "character": 19
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4018,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4031,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4022,
                    "name": "distance",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4019,
                    "name": "justify",
                    "type": "stringLiteral",
                    "values": [
                        "start",
                        "center",
                        "end",
                        "start-outside",
                        "end-outside"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4023,
                    "name": "onClickOutside",
                    "type": "reflection",
                    "values": [
                        "(event: MouseEvent, outsideTarget: undefined) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4028,
                    "name": "onEsc",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4021,
                    "name": "stretchHeight",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4020,
                    "name": "stretchWidth",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4017,
                    "name": "target",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 712,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 711,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 716,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 717,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 715,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 714,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 725,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 731,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 729,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 728,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 730,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 726,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 727,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 723,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 722,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or\ninline element and the layout used for its children,\nsuch as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "block",
                        "inline",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "none",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex",
                        "grid"
                    ],
                    "isOptional": true
                },
                {
                    "id": 720,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 721,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout\nof a document.",
                    "type": "stringLiteral",
                    "values": [
                        "hidden",
                        "visible",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "collapse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 719,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "FieldTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1939,
                    "name": "child",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reflection",
                                "declaration": {
                                    "id": 1940,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                        {
                                            "id": 1941,
                                            "name": "align",
                                            "kind": 32,
                                            "kindString": "Variable",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "core/misc/hocs/Field/types.ts",
                                                    "line": 35,
                                                    "character": 17
                                                }
                                            ],
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "stringLiteral",
                                                        "value": "right"
                                                    },
                                                    {
                                                        "type": "stringLiteral",
                                                        "value": "left"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "groups": [
                                        {
                                            "title": "Variables",
                                            "kind": 32,
                                            "children": [
                                                1941
                                            ]
                                        }
                                    ],
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Field/types.ts",
                                            "line": 34,
                                            "character": 14
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"child\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1935,
                    "name": "container",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"container\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1937,
                    "name": "content",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"content\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1936,
                    "name": "field",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"field\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1942,
                    "name": "hint",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"hint\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1938,
                    "name": "label",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"label\"]"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "State",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1929,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "outline",
                        "underline"
                    ]
                },
                {
                    "id": 1925,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ]
                },
                {
                    "id": 1926,
                    "name": "focus",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 1930,
                    "name": "isLabelOutside",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 1931,
                    "name": "isLabelOverlay",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 1927,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ]
                },
                {
                    "id": 1928,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "medium",
                        "xsmall",
                        "small",
                        "large",
                        "xlarge"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1806,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1801,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1800,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1803,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1798,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1797,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1805,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1804,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1802,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1799,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "PrivateProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1950,
                    "name": "attributes",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "focus",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 1945,
                    "name": "isLabelOutside",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 1946,
                    "name": "isLabelOverlay",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 1949,
                    "name": "labelName",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1955,
                    "name": "onClear",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onEnter",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "state",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 516,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "ComponentStyles"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "FlexboxTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4263,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4138,
                    "name": "alignContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4137,
                    "name": "alignItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4144,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4135,
                    "name": "column",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4141,
                    "name": "direction",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "row",
                        "column",
                        "column-reverse",
                        "row-reverse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4143,
                    "name": "flow",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4136,
                    "name": "inline",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4139,
                    "name": "justifyContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4140,
                    "name": "justifyItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4142,
                    "name": "wrap",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "nowrap",
                        "wrap",
                        "wrap-reverse"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "Global": [
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 712,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 711,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 716,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 717,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 715,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 714,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 725,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 731,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 729,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 728,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 730,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 726,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 727,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 723,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 722,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or\ninline element and the layout used for its children,\nsuch as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "block",
                        "inline",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "none",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex",
                        "grid"
                    ],
                    "isOptional": true
                },
                {
                    "id": 720,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 721,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout\nof a document.",
                    "type": "stringLiteral",
                    "values": [
                        "hidden",
                        "visible",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "collapse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 719,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 516,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "ComponentStyles"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 712,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 711,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 716,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 717,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 715,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 714,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 725,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 731,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 729,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 728,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 730,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 726,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 727,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 723,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 722,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or\ninline element and the layout used for its children,\nsuch as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "block",
                        "inline",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "none",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex",
                        "grid"
                    ],
                    "isOptional": true
                },
                {
                    "id": 720,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 721,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout\nof a document.",
                    "type": "stringLiteral",
                    "values": [
                        "hidden",
                        "visible",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "collapse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 719,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 733,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 739,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 737,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 736,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 738,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 734,
                    "name": "mx",
                    "comment": "Margin horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 735,
                    "name": "my",
                    "comment": "Margin vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleFlex",
            "comment": "Flexbox children styles",
            "weight": 400,
            "children": [
                {
                    "id": 745,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's\nalign-items value. In Grid, it aligns the\nitem inside the grid area. In Flexbox,\nit aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 741,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the\nspace available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 742,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the\nsize of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 743,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size.\nIt specifies how much of the remaining space in the\nflex container should be assigned to the item\n(the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert"
                    ],
                    "isOptional": true
                },
                {
                    "id": 744,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item.\nIf the size of all flex items is larger than\nthe flex container, items shrink to fit\naccording to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert"
                    ],
                    "isOptional": true
                },
                {
                    "id": 746,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its\nalignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 754,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start,\ngrid-row-end and grid-column-end, specifying a grid item’s\nsize and location within the grid by contributing a line, a\nspan, or nothing (automatic) to its grid placement, thereby\nspecifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 752,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and\ngrid-column-end specifying a grid item's size\nand location within the grid column by contributing\na line, a span, or nothing (automatic) to its grid\nplacement, thereby specifying the inline-start and\ninline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 749,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the\ngrid column by contributing a line, a span, or\nnothing (automatic) to its grid placement, thereby\nspecifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 748,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within\nthe grid column by contributing a line, a span,\nor nothing (automatic) to its grid placement.\nThis start position defines the block-start edge\nof the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 753,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end\nspecifying a grid item’s size and location within the\ngrid row by contributing a line, a span, or nothing\n(automatic) to its grid placement, thereby specifying\nthe inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 751,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid\nrow by contributing a line, a span, or nothing\n(automatic) to its grid placement, thereby\nspecifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 750,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the\ngrid row by contributing a line, a span, or nothing\n(automatic) to its grid placement, thereby specifying\nthe inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 755,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self\nproperties. The first value is the align-self property value,\nthe second the justify-self one. If the second value is not\npresent, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 725,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 731,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 729,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 728,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 730,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 726,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 727,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 733,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 739,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 737,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 736,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 738,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 734,
                    "name": "mx",
                    "comment": "Margin horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 735,
                    "name": "my",
                    "comment": "Margin vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 723,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 722,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or\ninline element and the layout used for its children,\nsuch as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "block",
                        "inline",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "none",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex",
                        "grid"
                    ],
                    "isOptional": true
                },
                {
                    "id": 720,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 721,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout\nof a document.",
                    "type": "stringLiteral",
                    "values": [
                        "hidden",
                        "visible",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "collapse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 719,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 754,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start,\ngrid-row-end and grid-column-end, specifying a grid item’s\nsize and location within the grid by contributing a line, a\nspan, or nothing (automatic) to its grid placement, thereby\nspecifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 752,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and\ngrid-column-end specifying a grid item's size\nand location within the grid column by contributing\na line, a span, or nothing (automatic) to its grid\nplacement, thereby specifying the inline-start and\ninline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 749,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the\ngrid column by contributing a line, a span, or\nnothing (automatic) to its grid placement, thereby\nspecifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 748,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within\nthe grid column by contributing a line, a span,\nor nothing (automatic) to its grid placement.\nThis start position defines the block-start edge\nof the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 753,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end\nspecifying a grid item’s size and location within the\ngrid row by contributing a line, a span, or nothing\n(automatic) to its grid placement, thereby specifying\nthe inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 751,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid\nrow by contributing a line, a span, or nothing\n(automatic) to its grid placement, thereby\nspecifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 750,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the\ngrid row by contributing a line, a span, or nothing\n(automatic) to its grid placement, thereby specifying\nthe inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 755,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self\nproperties. The first value is the align-self property value,\nthe second the justify-self one. If the second value is not\npresent, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 733,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 739,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 737,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 736,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 738,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 734,
                    "name": "mx",
                    "comment": "Margin horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 735,
                    "name": "my",
                    "comment": "Margin vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleFlex",
            "comment": "Flexbox children styles",
            "weight": 400,
            "children": [
                {
                    "id": 745,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's\nalign-items value. In Grid, it aligns the\nitem inside the grid area. In Flexbox,\nit aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 741,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the\nspace available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 742,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the\nsize of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 743,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size.\nIt specifies how much of the remaining space in the\nflex container should be assigned to the item\n(the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert"
                    ],
                    "isOptional": true
                },
                {
                    "id": 744,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item.\nIf the size of all flex items is larger than\nthe flex container, items shrink to fit\naccording to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert"
                    ],
                    "isOptional": true
                },
                {
                    "id": 746,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its\nalignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 754,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start,\ngrid-row-end and grid-column-end, specifying a grid item’s\nsize and location within the grid by contributing a line, a\nspan, or nothing (automatic) to its grid placement, thereby\nspecifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 752,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and\ngrid-column-end specifying a grid item's size\nand location within the grid column by contributing\na line, a span, or nothing (automatic) to its grid\nplacement, thereby specifying the inline-start and\ninline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 749,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the\ngrid column by contributing a line, a span, or\nnothing (automatic) to its grid placement, thereby\nspecifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 748,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within\nthe grid column by contributing a line, a span,\nor nothing (automatic) to its grid placement.\nThis start position defines the block-start edge\nof the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 753,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end\nspecifying a grid item’s size and location within the\ngrid row by contributing a line, a span, or nothing\n(automatic) to its grid placement, thereby specifying\nthe inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 751,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid\nrow by contributing a line, a span, or nothing\n(automatic) to its grid placement, thereby\nspecifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 750,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the\ngrid row by contributing a line, a span, or nothing\n(automatic) to its grid placement, thereby specifying\nthe inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 755,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self\nproperties. The first value is the align-self property value,\nthe second the justify-self one. If the second value is not\npresent, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleFlex",
            "comment": "Flexbox children styles",
            "weight": 400,
            "children": [
                {
                    "id": 745,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's\nalign-items value. In Grid, it aligns the\nitem inside the grid area. In Flexbox,\nit aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 741,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the\nspace available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 742,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the\nsize of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 743,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size.\nIt specifies how much of the remaining space in the\nflex container should be assigned to the item\n(the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert"
                    ],
                    "isOptional": true
                },
                {
                    "id": 744,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item.\nIf the size of all flex items is larger than\nthe flex container, items shrink to fit\naccording to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert"
                    ],
                    "isOptional": true
                },
                {
                    "id": 746,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its\nalignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 712,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 711,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 716,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 717,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 715,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 714,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "GridTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4399,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4278,
                    "name": "alignContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4277,
                    "name": "alignItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4274,
                    "name": "autoColumns",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4276,
                    "name": "autoFlow",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4275,
                    "name": "autoRows",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4267,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4271,
                    "name": "columnGap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4273,
                    "name": "gap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4266,
                    "name": "inline",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4279,
                    "name": "justifyContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4280,
                    "name": "justifyItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4272,
                    "name": "rowGap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4270,
                    "name": "templateAreas",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4268,
                    "name": "templateColumns",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4269,
                    "name": "templateRows",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "IconTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1091,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 1092,
                    "name": "icon",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 972,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 971,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 969,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "circle",
                        "oval",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 970,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 968,
                    "name": "type",
                    "type": "reference",
                    "values": [
                        "Global.IconProp"
                    ]
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "IconsetTypes": [
        {
            "name": "Index",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 13,
                    "name": "filled",
                    "type": "reference",
                    "values": [
                        "Filled"
                    ]
                },
                {
                    "id": 14,
                    "name": "outline",
                    "type": "reference",
                    "values": [
                        "Outline"
                    ]
                }
            ]
        }
    ],
    "MenuTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2477,
                    "name": "container",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2478,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 2481,
                                    "name": "border",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Menu/types.ts",
                                            "line": 49,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "none"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "narrow"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "wide"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 2480,
                                    "name": "flip",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Menu/types.ts",
                                            "line": 48,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 2479,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Menu/types.ts",
                                            "line": 47,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        2481,
                                        2480,
                                        2479
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Menu/types.ts",
                                    "line": 46,
                                    "character": 18
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2482,
                    "name": "item",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2483,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 2486,
                                    "name": "active",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Menu/types.ts",
                                            "line": 54,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "id": 2488,
                                    "name": "decoration",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Menu/types.ts",
                                            "line": 56,
                                            "character": 22
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "color"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "filled"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "outline"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "underline"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "tab"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "filled-underline"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 2485,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Menu/types.ts",
                                            "line": 53,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "id": 2484,
                                    "name": "shape",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Menu/types.ts",
                                            "line": 52,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "square"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "rounded"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "round"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 2487,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Menu/types.ts",
                                            "line": 55,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        2486,
                                        2488,
                                        2485,
                                        2484,
                                        2487
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Menu/types.ts",
                                    "line": 51,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2489,
                    "name": "separator",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2340,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "start",
                        "center",
                        "end"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2339,
                    "name": "border",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "narrow",
                        "wide"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2342,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2334,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "filled",
                        "outline",
                        "color",
                        "underline",
                        "tab",
                        "filled-underline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2326,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2337,
                    "name": "direction",
                    "type": "stringLiteral",
                    "values": [
                        "row",
                        "column"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2343,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2336,
                    "name": "distance",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2335,
                    "name": "flip",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2332,
                    "name": "items",
                    "type": "reference",
                    "values": [
                        "Item[]"
                    ]
                },
                {
                    "id": 2328,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(value: Value) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2341,
                    "name": "separator",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2338,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2333,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2327,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "ItemProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2468,
                    "name": "active",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 2470,
                    "name": "onEnter",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2471,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2472,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Menu/types.ts",
                                    "line": 42,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2469,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                }
            ]
        },
        {
            "name": "Item",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2462,
                    "name": "content",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ]
                },
                {
                    "id": 2464,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2463,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ]
                }
            ]
        }
    ],
    "MeterTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3480,
                    "name": "container",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3481,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3484,
                                    "name": "decoration",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Meter/types.ts",
                                            "line": 31,
                                            "character": 22
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "MeterDecoration",
                                        "id": 3490
                                    }
                                },
                                {
                                    "id": 3482,
                                    "name": "shape",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Meter/types.ts",
                                            "line": 29,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "MeterShape",
                                        "id": 3491
                                    }
                                },
                                {
                                    "id": 3483,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Meter/types.ts",
                                            "line": 30,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "Global.Size",
                                        "id": 808
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3484,
                                        3482,
                                        3483
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Meter/types.ts",
                                    "line": 28,
                                    "character": 18
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3485,
                    "name": "thumb",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3486,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3487,
                                    "name": "shape",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Meter/types.ts",
                                            "line": 34,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "MeterShape",
                                        "id": 3491
                                    }
                                },
                                {
                                    "id": 3488,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Meter/types.ts",
                                            "line": 35,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "Global.Size",
                                        "id": 808
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3487,
                                        3488
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Meter/types.ts",
                                    "line": 33,
                                    "character": 14
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3360,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3358,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "filled",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3361,
                    "name": "loading",
                    "comment": "Enabled process animation",
                    "type": "intrinsic",
                    "tags": {
                        "default": "false"
                    },
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3355,
                    "name": "percent",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 3359,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3356,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3357,
                    "name": "type",
                    "comment": {
                        "tags": [
                            {
                                "tag": "default",
                                "text": "line\n"
                            }
                        ]
                    },
                    "type": "stringLiteral",
                    "tags": {
                        "default": "line"
                    },
                    "values": [
                        "line",
                        "circle"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ModalTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4548,
                    "name": "cross",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 4547,
                    "name": "header",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 4539,
                    "name": "overlay",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4540,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4542,
                                    "name": "center",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Modal/types.ts",
                                            "line": 76,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4541,
                                    "name": "visible",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Modal/types.ts",
                                            "line": 75,
                                            "character": 19
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4542,
                                        4541
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 74,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4543,
                    "name": "window",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4544,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4546,
                                    "name": "fullSizeCenter",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Modal/types.ts",
                                            "line": 80,
                                            "character": 26
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4545,
                                    "name": "visible",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Modal/types.ts",
                                            "line": 79,
                                            "character": 19
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4546,
                                        4545
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 78,
                                    "character": 15
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "StyleProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4509,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 4510,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4508,
                    "name": "visible",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "Ref",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4430,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 4406,
                    "name": "close",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4407,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 4408,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 4409,
                                            "name": "didClose",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {
                                                "isOptional": true
                                            },
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "undefined"
                                                    },
                                                    {
                                                        "type": "reflection",
                                                        "declaration": {
                                                            "id": 4410,
                                                            "name": "__type",
                                                            "kind": 65536,
                                                            "kindString": "Type literal",
                                                            "flags": {},
                                                            "signatures": [
                                                                {
                                                                    "id": 4411,
                                                                    "name": "__call",
                                                                    "kind": 4096,
                                                                    "kindString": "Call signature",
                                                                    "flags": {},
                                                                    "type": {
                                                                        "type": "intrinsic",
                                                                        "name": "void"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 7,
                                    "character": 14
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4431,
                    "name": "customContent",
                    "type": "intrinsic",
                    "values": [
                        "ReactElement",
                        "null"
                    ]
                },
                {
                    "id": 4402,
                    "name": "open",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4403,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 4404,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 4405,
                                            "name": "customContent",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {
                                                "isOptional": true
                                            },
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "name": "ReactElement"
                                                    },
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "null"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 6,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4432,
                    "name": "overlay",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 4420,
                    "name": "setCenter",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4421,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 4422,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 4423,
                                            "name": "center",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 10,
                                    "character": 18
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4424,
                    "name": "setCustomContent",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4425,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 4426,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 4427,
                                            "name": "customContent",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "name": "ReactElement"
                                                    },
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "null"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 11,
                                    "character": 25
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4416,
                    "name": "setSubtitle",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4417,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 4418,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 4419,
                                            "name": "subtitle",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 9,
                                    "character": 20
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4412,
                    "name": "setTitle",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4413,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 4414,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 4415,
                                            "name": "title",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 8,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4429,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4428,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4433,
                    "name": "window",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4438,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4443,
                    "name": "didClose",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4449,
                    "name": "didOpen",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4437,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4439,
                    "name": "hideHeader",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4440,
                    "name": "onClose",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4446,
                    "name": "onOpen",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4436,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4435,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 712,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 711,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 716,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 717,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 715,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 714,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 725,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 731,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 729,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 728,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 730,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 726,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 727,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 723,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 722,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or\ninline element and the layout used for its children,\nsuch as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "block",
                        "inline",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "none",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex",
                        "grid"
                    ],
                    "isOptional": true
                },
                {
                    "id": 720,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 721,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout\nof a document.",
                    "type": "stringLiteral",
                    "values": [
                        "hidden",
                        "visible",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "collapse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 719,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "ModalWindowProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4521,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 4524,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4525,
                    "name": "containerAttr",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "HTMLAttributes",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "name": "HTMLElement"
                                    }
                                ]
                            },
                            {
                                "type": "reference",
                                "name": "SelfProps",
                                "id": 756
                            }
                        ]
                    },
                    "isOptional": true
                },
                {
                    "id": 4522,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4523,
                    "name": "hideHeader",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4526,
                    "name": "onClosePressed",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4527,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 4528,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 61,
                                    "character": 23
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4529,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                },
                {
                    "id": 4519,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4518,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4520,
                    "name": "visible",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "ModalOverlayProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4513,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 4515,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4514,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4516,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                },
                {
                    "id": 4512,
                    "name": "visible",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "ModalHeaderProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4533,
                    "name": "hideHeader",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4534,
                    "name": "onClosePressed",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4535,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 4536,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 69,
                                    "character": 23
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4537,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                },
                {
                    "id": 4532,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4531,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InnerProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4471,
                    "name": "innerRef",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        }
    ],
    "NotificationTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4564,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4551,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4552,
                    "name": "onClick",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "NotifyOptions",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4562,
                    "name": "customContent",
                    "comment": "if custom content filled then title and message will be ignored",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4557,
                    "name": "message",
                    "comment": "Message of notification",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 4559,
                    "name": "onClick",
                    "comment": "Will call on notificaion click",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4558,
                    "name": "timeout",
                    "comment": "Notification will be removed after timeout\nvalue in milisecods",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4556,
                    "name": "title",
                    "comment": "Title of notification",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        }
    ],
    "PanelTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4687,
                    "name": "container",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4688,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4689,
                                    "name": "align",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Panel/types.ts",
                                            "line": 11,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "left"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "right"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "top"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "bottom"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4689
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Panel/types.ts",
                                    "line": 10,
                                    "character": 18
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4567,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "right",
                        "bottom",
                        "left"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4568,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "PopoverTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4817,
                    "name": "arrow",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4818,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4819,
                                    "name": "align",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Popover/types.ts",
                                            "line": 17,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "none"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "left"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "right"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "top"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "bottom"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4819
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Popover/types.ts",
                                    "line": 16,
                                    "character": 14
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4816,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4692,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right",
                        "none"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4697,
                    "name": "arrowHeight",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4696,
                    "name": "arrowWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4693,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4695,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4694,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "RadioTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2622,
                    "name": "check",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2623,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 2625,
                                    "name": "animated",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Radio/types.ts",
                                            "line": 11,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 2626,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Radio/types.ts",
                                            "line": 12,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 2624,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Radio/types.ts",
                                            "line": 10,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        2625,
                                        2626,
                                        2624
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Radio/types.ts",
                                    "line": 9,
                                    "character": 14
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2627,
                    "name": "radio",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2628,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 2631,
                                    "name": "animated",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Radio/types.ts",
                                            "line": 17,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 2629,
                                    "name": "checked",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Radio/types.ts",
                                            "line": 15,
                                            "character": 19
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 2632,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Radio/types.ts",
                                            "line": 18,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 2630,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Radio/types.ts",
                                            "line": 16,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        2631,
                                        2629,
                                        2632,
                                        2630
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Radio/types.ts",
                                    "line": 14,
                                    "character": 14
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1631,
                    "name": "container",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1632,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1634,
                                    "name": "animated",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 27,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1633,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 26,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1634,
                                        1633
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/hocs/Check/types.ts",
                                    "line": 25,
                                    "character": 18
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1635,
                    "name": "label",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1636,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1640,
                                    "name": "animated",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 33,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1637,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 30,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1638,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 31,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1639,
                                    "name": "uppercase",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 32,
                                            "character": 21
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1640,
                                        1637,
                                        1638,
                                        1639
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/hocs/Check/types.ts",
                                    "line": 29,
                                    "character": 14
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 516,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "ComponentStyles"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "RangeTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2772,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 2773,
                    "name": "rail",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 2775,
                    "name": "thumb",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 2774,
                    "name": "track",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2654,
                    "name": "className",
                    "type": "intrinsic",
                    "overwrites": {
                        "type": "reference",
                        "name": "HTMLAttributes.className",
                        "id": 633
                    },
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2647,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2646,
                    "name": "max",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2645,
                    "name": "min",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2653,
                    "name": "mode",
                    "type": "stringLiteral",
                    "values": [
                        "single",
                        "range"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2649,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(value: number) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2648,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ScrollViewTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 8916,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 8917,
                    "name": "content",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 8929,
                    "name": "xBar",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 8930,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 8931,
                                    "name": "active",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 56,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "id": 8934,
                                    "name": "position",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 59,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "top"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "bottom"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 8932,
                                    "name": "shape",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 57,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "square"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "round"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 8933,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 58,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        8931,
                                        8934,
                                        8932,
                                        8933
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "lab/layout/ScrollView/types.ts",
                                    "line": 55,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 8935,
                    "name": "xThumb",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 8936,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 8937,
                                    "name": "active",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 62,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "id": 8938,
                                    "name": "shape",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 63,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "square"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "round"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 8939,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 64,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        8937,
                                        8938,
                                        8939
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "lab/layout/ScrollView/types.ts",
                                    "line": 61,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 8918,
                    "name": "yBar",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 8919,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 8920,
                                    "name": "active",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 45,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "id": 8923,
                                    "name": "position",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 48,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "left"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "right"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 8921,
                                    "name": "shape",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 46,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "square"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "round"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 8922,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 47,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        8920,
                                        8923,
                                        8921,
                                        8922
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "lab/layout/ScrollView/types.ts",
                                    "line": 44,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 8924,
                    "name": "yThumb",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 8925,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 8926,
                                    "name": "active",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 51,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "id": 8927,
                                    "name": "shape",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 52,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "square"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "round"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 8928,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "lab/layout/ScrollView/types.ts",
                                            "line": 53,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        8926,
                                        8927,
                                        8928
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "lab/layout/ScrollView/types.ts",
                                    "line": 50,
                                    "character": 15
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Ref",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 8912,
                    "name": "scrollTop",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 8913,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 8914,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "lab/layout/ScrollView/types.ts",
                                    "line": 38,
                                    "character": 18
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 8787,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 8789,
                    "name": "color",
                    "comment": "Custom ScrollBar color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 8788,
                    "name": "mode",
                    "comment": "Display mode",
                    "type": "stringLiteral",
                    "tags": {
                        "default": "scroll"
                    },
                    "values": [
                        "always",
                        "scroll",
                        "hidden"
                    ],
                    "isOptional": true
                },
                {
                    "id": 8791,
                    "name": "shape",
                    "comment": "Bars shape",
                    "type": "stringLiteral",
                    "tags": {
                        "default": "round"
                    },
                    "values": [
                        "square",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 8790,
                    "name": "size",
                    "comment": "Bars size",
                    "type": "stringLiteral",
                    "tags": {
                        "default": "medium"
                    },
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 8792,
                    "name": "xBarPosition",
                    "comment": "Position of X bar",
                    "type": "stringLiteral",
                    "tags": {
                        "default": "bottom"
                    },
                    "values": [
                        "top",
                        "bottom"
                    ],
                    "isOptional": true
                },
                {
                    "id": 8793,
                    "name": "yBarPosition",
                    "comment": "Position of Y bar",
                    "type": "stringLiteral",
                    "tags": {
                        "default": "right"
                    },
                    "values": [
                        "left",
                        "right"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "SelectTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2957,
                    "name": "dropItem",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2958,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 2959,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Select/types.ts",
                                            "line": 76,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 2960,
                                    "name": "underCursor",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Select/types.ts",
                                            "line": 77,
                                            "character": 23
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        2959,
                                        2960
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Select/types.ts",
                                    "line": 75,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2953,
                    "name": "dropMenu",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2954,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 2955,
                                    "name": "decoration",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Select/types.ts",
                                            "line": 72,
                                            "character": 22
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "none"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "filled"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "outline"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "underline"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 2956,
                                    "name": "focus",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Select/types.ts",
                                            "line": 73,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        2955,
                                        2956
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Select/types.ts",
                                    "line": 71,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2949,
                    "name": "input",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 2951,
                    "name": "optionItem",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 2952,
                    "name": "optionItemText",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 2950,
                    "name": "options",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 2948,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1939,
                    "name": "child",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reflection",
                                "declaration": {
                                    "id": 1940,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                        {
                                            "id": 1941,
                                            "name": "align",
                                            "kind": 32,
                                            "kindString": "Variable",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "core/misc/hocs/Field/types.ts",
                                                    "line": 35,
                                                    "character": 17
                                                }
                                            ],
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "stringLiteral",
                                                        "value": "right"
                                                    },
                                                    {
                                                        "type": "stringLiteral",
                                                        "value": "left"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "groups": [
                                        {
                                            "title": "Variables",
                                            "kind": 32,
                                            "children": [
                                                1941
                                            ]
                                        }
                                    ],
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Field/types.ts",
                                            "line": 34,
                                            "character": 14
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"child\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1935,
                    "name": "container",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"container\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1937,
                    "name": "content",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"content\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1936,
                    "name": "field",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"field\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1942,
                    "name": "hint",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"hint\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1938,
                    "name": "label",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"label\"]"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "SearchProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2945,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2946,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2938,
                    "name": "onSearch",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2939,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2940,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2941,
                                            "name": "searchValue",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Select/types.ts",
                                    "line": 57,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2944,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2937,
                    "name": "searchValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 2942,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2943,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2786,
                    "name": "defaultValues",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2783,
                    "name": "multiselect",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2787,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(values: undefined, changedValue: Option) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2782,
                    "name": "options",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ]
                },
                {
                    "id": 2781,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2784,
                    "name": "searchable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2785,
                    "name": "values",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 516,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "ComponentStyles"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "OptionsProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2921,
                    "name": "onClose",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2922,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2923,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2924,
                                            "name": "option",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Select/types.ts",
                                    "line": 51,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2925,
                    "name": "searchable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2920,
                    "name": "selected",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ]
                }
            ]
        },
        {
            "name": "SearchProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2945,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2946,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2938,
                    "name": "onSearch",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2939,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2940,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2941,
                                            "name": "searchValue",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Select/types.ts",
                                    "line": 57,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2944,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2937,
                    "name": "searchValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 2942,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2943,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                }
            ]
        },
        {
            "name": "Option",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2778,
                    "name": "text",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 2779,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        }
    ],
    "SpinnerTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1221,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 1220,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1097,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1096,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1100,
                    "name": "count",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1099,
                    "name": "duration",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1098,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1101,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "SplitTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 8642,
                    "name": "areaSize",
                    "comment": "Split area size, value in pixels",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 8641,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "ReactElement[]"
                    ]
                },
                {
                    "id": 8640,
                    "name": "direction",
                    "type": "stringLiteral",
                    "values": [
                        "row",
                        "column"
                    ],
                    "isOptional": true
                },
                {
                    "id": 8648,
                    "name": "onChange",
                    "comment": "Calls when mouseUp if position did change",
                    "type": "reflection",
                    "values": [
                        "(positions: undefined) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 8644,
                    "name": "onMove",
                    "comment": "Calls when split area moves",
                    "type": "reflection",
                    "values": [
                        "(positions: undefined) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 8643,
                    "name": "positions",
                    "comment": "You can give it array of numbers (in percent)",
                    "type": "intrinsic",
                    "values": [
                        "number[]"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "SwitchTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3130,
                    "name": "check",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3131,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3134,
                                    "name": "animated",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Switch/types.ts",
                                            "line": 11,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3132,
                                    "name": "checked",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Switch/types.ts",
                                            "line": 9,
                                            "character": 19
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3135,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Switch/types.ts",
                                            "line": 12,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3133,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Switch/types.ts",
                                            "line": 10,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3134,
                                        3132,
                                        3135,
                                        3133
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Switch/types.ts",
                                    "line": 8,
                                    "character": 14
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3136,
                    "name": "switch",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3137,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3140,
                                    "name": "animated",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Switch/types.ts",
                                            "line": 17,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3138,
                                    "name": "checked",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Switch/types.ts",
                                            "line": 15,
                                            "character": 19
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3141,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Switch/types.ts",
                                            "line": 18,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3139,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/Switch/types.ts",
                                            "line": 16,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3140,
                                        3138,
                                        3141,
                                        3139
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Switch/types.ts",
                                    "line": 14,
                                    "character": 15
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1631,
                    "name": "container",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1632,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1634,
                                    "name": "animated",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 27,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1633,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 26,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1634,
                                        1633
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/hocs/Check/types.ts",
                                    "line": 25,
                                    "character": 18
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1635,
                    "name": "label",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1636,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1640,
                                    "name": "animated",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 33,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1637,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 30,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1638,
                                    "name": "size",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 31,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "medium"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xsmall"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "small"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "large"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "xlarge"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1639,
                                    "name": "uppercase",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Check/types.ts",
                                            "line": 32,
                                            "character": 21
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "false"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "true"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1640,
                                        1637,
                                        1638,
                                        1639
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/hocs/Check/types.ts",
                                    "line": 29,
                                    "character": 14
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 516,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "ComponentStyles"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "TableTypes": [
        {
            "name": "TablePagination",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3710,
                    "name": "async",
                    "type": "reflection",
                    "values": [
                        "(page: number) => boolean"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3708,
                    "name": "pageSize",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 3709,
                    "name": "pageTotalSize",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "TableForm",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3511,
                    "name": "defaultData",
                    "type": "reflection",
                    "values": [
                        "unknown"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3516,
                    "name": "dismiss",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3510,
                    "name": "key",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3515,
                    "name": "render",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "TableColumn",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3495,
                    "name": "dataIndex",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 3497,
                    "name": "render",
                    "type": "reflection",
                    "values": [
                        "(row: any, value: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3494,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3496,
                    "name": "width",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "TableActions",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3504,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3503,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 3505,
                    "name": "onAction",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3506,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 3507,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 3508,
                                            "name": "row",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 14,
                                    "character": 17
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3749,
                    "name": "actionButtons",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3750,
                    "name": "actionButtonsEdit",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3748,
                    "name": "actions",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3736,
                    "name": "body",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3746,
                    "name": "column",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3731,
                    "name": "container",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3732,
                    "name": "content",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3734,
                    "name": "headColumn",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3733,
                    "name": "headRow",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3747,
                    "name": "more",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3737,
                    "name": "pagination",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3738,
                    "name": "paginationButton",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3739,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3740,
                                    "name": "active",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Table/types.ts",
                                            "line": 114,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3740
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 113,
                                    "character": 25
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3741,
                    "name": "row",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3742,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3743,
                                    "name": "edited",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Table/types.ts",
                                            "line": 117,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "id": 3744,
                                    "name": "withActions",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/data/Table/types.ts",
                                            "line": 118,
                                            "character": 23
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3743,
                                        3744
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 116,
                                    "character": 12
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3735,
                    "name": "search",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                },
                {
                    "id": 3745,
                    "name": "subrow",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "RowProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3663,
                    "name": "actions",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3664,
                    "name": "border",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3668,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3659,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 3666,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3662,
                    "name": "isBlur",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3661,
                    "name": "isExpanding",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3660,
                    "name": "isSelected",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3669,
                    "name": "onRowClick",
                    "type": "reflection",
                    "values": [
                        "(row: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3658,
                    "name": "row",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 3665,
                    "name": "scope",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3667,
                    "name": "style",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3673,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3523,
                    "name": "actions",
                    "type": "reference",
                    "values": [
                        "TableActions[]"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3524,
                    "name": "border",
                    "type": "stringLiteral",
                    "values": [
                        "all",
                        "external",
                        "internal",
                        "vertical",
                        "horizontal"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3529,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3540,
                    "name": "className",
                    "type": "intrinsic",
                    "overwrites": {
                        "type": "reference",
                        "name": "HTMLAttributes.className",
                        "id": 633
                    },
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3521,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 3520,
                    "name": "data",
                    "type": "reference",
                    "values": [
                        "Object[]"
                    ]
                },
                {
                    "id": 3522,
                    "name": "form",
                    "type": "reference",
                    "values": [
                        "TableForm"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3539,
                    "name": "hideHeaders",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3525,
                    "name": "indexKey",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3528,
                    "name": "noDataLabel",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3530,
                    "name": "onRowClick",
                    "type": "reflection",
                    "values": [
                        "(row: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3535,
                    "name": "onSearch",
                    "type": "reflection",
                    "values": [
                        "(value: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3527,
                    "name": "pagination",
                    "type": "reference",
                    "values": [
                        "TablePagination"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3526,
                    "name": "scope",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3534,
                    "name": "search",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "PaginationProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3728,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3719,
                    "name": "data",
                    "type": "reflection",
                    "values": [
                        "unknown"
                    ]
                },
                {
                    "id": 3723,
                    "name": "onChange",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3724,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 3725,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 3726,
                                            "name": "page",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "number"
                                            }
                                        },
                                        {
                                            "id": 3727,
                                            "name": "searchBar",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 100,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3716,
                    "name": "page",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 3715,
                    "name": "pagination",
                    "type": "reference",
                    "values": [
                        "TablePagination"
                    ]
                },
                {
                    "id": 3718,
                    "name": "search",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3717,
                    "name": "searchActive",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 3729,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                }
            ]
        },
        {
            "name": "InjectForm",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3698,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 3694,
                    "name": "data",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3695,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "indexSignature": [
                                {
                                    "id": 3696,
                                    "name": "__index",
                                    "kind": 8192,
                                    "kindString": "Index signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 3697,
                                            "name": "key",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 82,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3704,
                    "name": "dismiss",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3699,
                    "name": "setData",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3700,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 3701,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 3702,
                                            "name": "key",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        },
                                        {
                                            "id": 3703,
                                            "name": "value",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 84,
                                    "character": 16
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "FormProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3691,
                    "name": "Form",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 3692,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3690,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 3686,
                    "name": "data",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 3687,
                    "name": "dismiss",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "ColumnProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3678,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3676,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 3675,
                    "name": "row",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 3677,
                    "name": "scope",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3679,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                }
            ]
        },
        {
            "name": "ActionsProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3681,
                    "name": "actions",
                    "type": "intrinsic",
                    "values": [
                        "any[]"
                    ]
                },
                {
                    "id": 3683,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3682,
                    "name": "data",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 3684,
                    "name": "styles",
                    "type": "reference",
                    "values": [
                        "Global.FlowStyles"
                    ]
                }
            ]
        }
    ],
    "TextFieldTypes": [
        {
            "name": "TextAreaProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3335,
                    "name": "cols",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3336,
                    "name": "rows",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3337,
                    "name": "wrap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3339,
                    "name": "input",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3340,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3341,
                                    "name": "isLabelOverlay",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/control/TextField/types.ts",
                                            "line": 61,
                                            "character": 26
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3341
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/TextField/types.ts",
                                    "line": 60,
                                    "character": 14
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1939,
                    "name": "child",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reflection",
                                "declaration": {
                                    "id": 1940,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                        {
                                            "id": 1941,
                                            "name": "align",
                                            "kind": 32,
                                            "kindString": "Variable",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "core/misc/hocs/Field/types.ts",
                                                    "line": 35,
                                                    "character": 17
                                                }
                                            ],
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "stringLiteral",
                                                        "value": "right"
                                                    },
                                                    {
                                                        "type": "stringLiteral",
                                                        "value": "left"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "groups": [
                                        {
                                            "title": "Variables",
                                            "kind": 32,
                                            "children": [
                                                1941
                                            ]
                                        }
                                    ],
                                    "sources": [
                                        {
                                            "fileName": "core/misc/hocs/Field/types.ts",
                                            "line": 34,
                                            "character": 14
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"child\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1935,
                    "name": "container",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"container\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1937,
                    "name": "content",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"content\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1936,
                    "name": "field",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"field\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1942,
                    "name": "hint",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"hint\"]"
                            }
                        ]
                    }
                },
                {
                    "id": 1938,
                    "name": "label",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "State",
                                "id": 1924
                            },
                            {
                                "type": "unknown",
                                "name": "T[\"label\"]"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3155,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3154,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3157,
                    "name": "masked",
                    "type": "reference",
                    "values": [
                        "IMask.AnyMaskedOptions"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3156,
                    "name": "multiline",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3158,
                    "name": "onChange",
                    "type": "reference",
                    "values": [
                        "ChangeEventHandler"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 516,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "ComponentStyles"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InputProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3312,
                    "name": "autoComplete",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3313,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3322,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3323,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3324,
                    "name": "formEncType",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3325,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3326,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3327,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3314,
                    "name": "list",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3328,
                    "name": "max",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3329,
                    "name": "maxLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3330,
                    "name": "min",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3331,
                    "name": "minLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3315,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3317,
                    "name": "pattern",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3316,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3318,
                    "name": "readOnly",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3319,
                    "name": "required",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3332,
                    "name": "step",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3320,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "email",
                        "hidden",
                        "number",
                        "password",
                        "reset",
                        "search",
                        "tel",
                        "text",
                        "url"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3321,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3333,
                    "name": "width",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "TextAreaProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3335,
                    "name": "cols",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3336,
                    "name": "rows",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3337,
                    "name": "wrap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InputProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3312,
                    "name": "autoComplete",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3313,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3322,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3323,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3324,
                    "name": "formEncType",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3325,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3326,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3327,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3314,
                    "name": "list",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3328,
                    "name": "max",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3329,
                    "name": "maxLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3330,
                    "name": "min",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3331,
                    "name": "minLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3315,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3317,
                    "name": "pattern",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3316,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3318,
                    "name": "readOnly",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3319,
                    "name": "required",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3332,
                    "name": "step",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3320,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "email",
                        "hidden",
                        "number",
                        "password",
                        "reset",
                        "search",
                        "tel",
                        "text",
                        "url"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3321,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3333,
                    "name": "width",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ThemeTypes": [
        {
            "name": "Variables",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4974,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Colors"
                    ]
                },
                {
                    "id": 4976,
                    "name": "distance",
                    "type": "reference",
                    "values": [
                        "Distance"
                    ]
                },
                {
                    "id": 4973,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 4975,
                    "name": "radius",
                    "type": "reference",
                    "values": [
                        "Radius"
                    ]
                },
                {
                    "id": 4977,
                    "name": "typography",
                    "type": "reference",
                    "values": [
                        "Typography"
                    ]
                }
            ]
        },
        {
            "name": "Typography",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5042,
                    "name": "display",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 5043,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 5044,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 166,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 5045,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 167,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 5046,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 168,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 5047,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 169,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        5044,
                                        5045,
                                        5046,
                                        5047
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 165,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 5030,
                    "name": "header",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 5031,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 5032,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 154,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 5033,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 155,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 5034,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 156,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 5035,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 157,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        5032,
                                        5033,
                                        5034,
                                        5035
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 153,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 5048,
                    "name": "paragraph",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 5049,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 5050,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 172,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 5051,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 173,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 5052,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 174,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 5053,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 175,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        5050,
                                        5051,
                                        5052,
                                        5053
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 171,
                                    "character": 18
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 5036,
                    "name": "text",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 5037,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 5038,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 160,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 5039,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 161,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 5040,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 162,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 5041,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 163,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        5038,
                                        5039,
                                        5040,
                                        5041
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 159,
                                    "character": 13
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5013,
                    "name": "Badge",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5014,
                    "name": "Block",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5002,
                    "name": "Button",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5003,
                    "name": "Checkbox",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5004,
                    "name": "DatePicker",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4999,
                    "name": "Divider",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5015,
                    "name": "Drop",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5016,
                    "name": "Flexbox",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5017,
                    "name": "Grid",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5000,
                    "name": "Icon",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5005,
                    "name": "Menu",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5011,
                    "name": "Meter",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5018,
                    "name": "Modal",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5019,
                    "name": "Notification",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5020,
                    "name": "Panel",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5021,
                    "name": "Popover",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5006,
                    "name": "Radio",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5007,
                    "name": "Range",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5008,
                    "name": "Select",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5001,
                    "name": "Spinner",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5009,
                    "name": "Switch",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5012,
                    "name": "Table",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5010,
                    "name": "TextField",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5022,
                    "name": "Tree",
                    "type": "reference",
                    "values": [
                        "Global.OverridesStyle"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Index",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4963,
                    "name": "assets",
                    "type": "reference",
                    "values": [
                        "Assets"
                    ]
                },
                {
                    "id": 4964,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 4965,
                    "name": "replace",
                    "type": "reference",
                    "values": [
                        "Replace"
                    ]
                }
            ]
        },
        {
            "name": "Variables",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4974,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Colors"
                    ]
                },
                {
                    "id": 4976,
                    "name": "distance",
                    "type": "reference",
                    "values": [
                        "Distance"
                    ]
                },
                {
                    "id": 4973,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 4975,
                    "name": "radius",
                    "type": "reference",
                    "values": [
                        "Radius"
                    ]
                },
                {
                    "id": 4977,
                    "name": "typography",
                    "type": "reference",
                    "values": [
                        "Typography"
                    ]
                }
            ]
        },
        {
            "name": "Distance",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5027,
                    "name": "large",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 5026,
                    "name": "medium",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 5025,
                    "name": "small",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 5028,
                    "name": "xlarge",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 5024,
                    "name": "xsmall",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        },
        {
            "name": "Assets",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4980,
                    "name": "border",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4981,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4984,
                                    "name": "color",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 62,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4983,
                                    "name": "style",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 61,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4982,
                                    "name": "width",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 60,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4984,
                                        4983,
                                        4982
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 59,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4991,
                    "name": "fieldHeight",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4992,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4996,
                                    "name": "large",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 74,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4995,
                                    "name": "medium",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 73,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4994,
                                    "name": "small",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 72,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4997,
                                    "name": "xlarge",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 75,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4993,
                                    "name": "xsmall",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 71,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4996,
                                        4995,
                                        4994,
                                        4997,
                                        4993
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 70,
                                    "character": 20
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4990,
                    "name": "focus",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 4979,
                    "name": "global",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4985,
                    "name": "shadow",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4986,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4987,
                                    "name": "default",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 65,
                                            "character": 19
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4989,
                                    "name": "long",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 67,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 4988,
                                    "name": "short",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 66,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4987,
                                        4989,
                                        4988
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 64,
                                    "character": 15
                                }
                            ]
                        }
                    }
                }
            ]
        }
    ],
    "TreeTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4958,
                    "name": "child",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4959,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4960,
                                    "name": "isOpen",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Tree/types.ts",
                                            "line": 25,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4960
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Tree/types.ts",
                                    "line": 24,
                                    "character": 14
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4949,
                    "name": "container",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4950,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4951,
                                    "name": "decoration",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Tree/types.ts",
                                            "line": 16,
                                            "character": 22
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "inline"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "flat"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "drop"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4952,
                                    "name": "needIndent",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Tree/types.ts",
                                            "line": 17,
                                            "character": 22
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4951,
                                        4952
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Tree/types.ts",
                                    "line": 15,
                                    "character": 18
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4954,
                    "name": "icon",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4955,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 4956,
                                    "name": "decoration",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Tree/types.ts",
                                            "line": 21,
                                            "character": 22
                                        }
                                    ],
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "inline"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "flat"
                                            },
                                            {
                                                "type": "stringLiteral",
                                                "value": "drop"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 4957,
                                    "name": "disabled",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/layout/Tree/types.ts",
                                            "line": 22,
                                            "character": 20
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        4956,
                                        4957
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Tree/types.ts",
                                    "line": 20,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4953,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "void"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4828,
                    "name": "alwaysOpen",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4826,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4827,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "flat",
                        "drop",
                        "inline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4829,
                    "name": "defaultOpen",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4830,
                    "name": "indent",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4822,
                    "name": "label",
                    "type": "reflection",
                    "values": [
                        "React.ReactNode",
                        "string",
                        "(isOpen: boolean) => React.ReactNode"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "TypographyTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 6211,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "center",
                        "end",
                        "initial",
                        "left",
                        "right",
                        "start",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "justify",
                        "match-parent"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6210,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6208,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6209,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6207,
                    "name": "decoration",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6206,
                    "name": "ellipsis",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6214,
                    "name": "lineHeight",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6213,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6215,
                    "name": "transform",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "uppercase",
                        "full-width",
                        "capitalize",
                        "full-size-kana",
                        "lowercase"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6212,
                    "name": "weight",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "normal",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "bold",
                        "bolder",
                        "lighter"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 638,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 633,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 639,
                    "name": "draggable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 634,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 637,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 635,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 636,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 691,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus.\nThe main difference between this event and\nfocusout is that focusout bubbles while blur\ndoes not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 689,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing\ndevice button (such as a mouse's primary mouse button)\nis both pressed and released while the pointer is\nlocated inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 696,
                    "name": "onContextMenu",
                    "comment": "Event is fired on context menu.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 702,
                    "name": "onDrag",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 703,
                    "name": "onDragEnd",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 704,
                    "name": "onDragEnter",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 705,
                    "name": "onDragExit",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 706,
                    "name": "onDragLeave",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 707,
                    "name": "onDragOver",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 708,
                    "name": "onDragStart",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 709,
                    "name": "onDrop",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 690,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus.\nThe main difference between this event and focusin\nis that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 700,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 699,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character\nvalue is pressed down. Examples of keys that produce a\ncharacter value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 701,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 692,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing\ndevice button is pressed while the pointer is\ninside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 694,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing\ndevice (usually a mouse) is initially moved so\nthat its hotspot is within the element at which\nthe event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 695,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a\npointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 693,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on\na pointing device (such as a mouse or trackpad)\nis released while the pointer is located inside it.\nmouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 698,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are\nremoved from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 697,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are\nplaced on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "PrivateProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 6335,
                    "name": "sizesOf",
                    "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                            "type": "reference",
                            "name": "Typography"
                        }
                    }
                },
                {
                    "id": 6336,
                    "name": "specificStyles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6334,
                    "name": "tag",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 6211,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "center",
                        "end",
                        "initial",
                        "left",
                        "right",
                        "start",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "justify",
                        "match-parent"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6210,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6208,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6209,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6207,
                    "name": "decoration",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6206,
                    "name": "ellipsis",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6214,
                    "name": "lineHeight",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6213,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6215,
                    "name": "transform",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inherit",
                        "initial",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "uppercase",
                        "full-width",
                        "capitalize",
                        "full-size-kana",
                        "lowercase"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6212,
                    "name": "weight",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "inherit",
                        "initial",
                        "normal",
                        "unset",
                        "-moz-initial",
                        "revert",
                        "bold",
                        "bolder",
                        "lighter"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "AnchorProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 6069,
                    "name": "download",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6070,
                    "name": "href",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6071,
                    "name": "hrefLang",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6072,
                    "name": "media",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6073,
                    "name": "ping",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6077,
                    "name": "referrerPolicy",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6074,
                    "name": "rel",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6075,
                    "name": "target",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6076,
                    "name": "type",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 516,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "ComponentStyles"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ViewportTypes": [
        {
            "name": "Themes",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5227,
                    "name": "dark",
                    "type": "reference",
                    "values": [
                        "Index"
                    ]
                },
                {
                    "id": 5226,
                    "name": "light",
                    "type": "reference",
                    "values": [
                        "Index"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5233,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5230,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5231,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5232,
                    "name": "theme",
                    "type": "reflection",
                    "values": [
                        "(lib: T) => R"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5229,
                    "name": "wrapper",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "MountAreaElement",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5238,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "ReactElement"
                    ]
                },
                {
                    "id": 5237,
                    "name": "key",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        },
        {
            "name": "MountArea",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5235,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "DialogOptions",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5245,
                    "name": "buttonText",
                    "comment": "Button text",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5247,
                    "name": "customContent",
                    "comment": "if custom content filled then message and buttonText will be ignored",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5246,
                    "name": "hideHeader",
                    "comment": "Hides modal window header",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5244,
                    "name": "message",
                    "comment": "Message of dialog",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5243,
                    "name": "subtitle",
                    "comment": "Subtitle of modal window header",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5242,
                    "name": "title",
                    "comment": "Title of modal window header",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Context",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5240,
                    "name": "theme",
                    "type": "reference",
                    "values": [
                        "ThemeType.Index"
                    ]
                }
            ]
        }
    ]
}