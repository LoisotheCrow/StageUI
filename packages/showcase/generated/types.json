{
    "\"csstype\"": [
        {
            "name": "Properties",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3758,
                    "name": "alignSelf",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3756,
                    "name": "display",
                    "type": "stringLiteral",
                    "values": [
                        "block",
                        "inline",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "none",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex",
                        "grid"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3759,
                    "name": "justifySelf",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3757,
                    "name": "overflow",
                    "type": "stringLiteral",
                    "values": [
                        "auto",
                        "hidden",
                        "scroll",
                        "visible",
                        "inherit"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "BadgeTypes": [
        {
            "name": "Variants",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2187,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "top",
                        "bottom",
                        "top-right",
                        "bottom-right",
                        "top-left",
                        "bottom-left"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2077,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right",
                        "top-right",
                        "bottom-right",
                        "top-left",
                        "bottom-left"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2078,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2080,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2079,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2076,
                    "name": "content",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ]
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "BlockTypes": [
        {
            "name": "Variants",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2306,
                    "name": "hoverSurface",
                    "type": "stringLiteral",
                    "values": [
                        "medium",
                        "major",
                        "minor"
                    ]
                },
                {
                    "id": 2305,
                    "name": "surface",
                    "type": "stringLiteral",
                    "values": [
                        "medium",
                        "major",
                        "minor"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2196,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2195,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2197,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2193,
                    "name": "hoverSurface",
                    "type": "stringLiteral",
                    "values": [
                        "major",
                        "medium",
                        "minor"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2198,
                    "name": "overflow",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "hidden",
                        "auto",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2194,
                    "name": "position",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2192,
                    "name": "surface",
                    "type": "stringLiteral",
                    "values": [
                        "major",
                        "medium",
                        "minor"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2191,
                    "name": "tag",
                    "type": "stringLiteral",
                    "values": [
                        "div",
                        "span",
                        "header",
                        "footer",
                        "article",
                        "section",
                        "aside",
                        "main"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ButtonGroupTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 6216,
                    "name": "children",
                    "type": "reference",
                    "overwrites": {
                        "type": "reference",
                        "name": "Props.children",
                        "id": 618
                    },
                    "values": [
                        "ReactElement",
                        "ReactElement[]"
                    ]
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ButtonTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 725,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 726,
                    "name": "filled",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 727,
                    "name": "outline",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 729,
                    "name": "plain",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 728,
                    "name": "text",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 602,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 618,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 617,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 614,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "filled",
                        "outline",
                        "text",
                        "plain"
                    ],
                    "isOptional": true
                },
                {
                    "id": 603,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 604,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 605,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 606,
                    "name": "formEncType",
                    "comment": "The formenctype attribute specifies how form-data should be encoded before sending it to a server. This attribute overrides the form's enctype attribute.\nThe formenctype attribute is only used for buttons with type=\"submit\".",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 607,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 608,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 609,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 610,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 615,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 613,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 611,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "submit",
                        "reset",
                        "button"
                    ],
                    "isOptional": true
                },
                {
                    "id": 616,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 612,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "string[]",
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ChartTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5716,
                    "name": "data",
                    "type": "reference",
                    "values": [
                        "Array"
                    ]
                },
                {
                    "id": 5715,
                    "name": "labels",
                    "type": "reference",
                    "values": [
                        "Array"
                    ]
                },
                {
                    "id": 5717,
                    "name": "options",
                    "type": "reference",
                    "values": [
                        "ChartOptions"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5714,
                    "name": "type",
                    "comment": {
                        "tags": [
                            {
                                "tag": "default",
                                "text": "line\n"
                            }
                        ]
                    },
                    "type": "stringLiteral",
                    "tags": {
                        "default": "line"
                    },
                    "values": [
                        "line",
                        "pie",
                        "verticalBar",
                        "horizontalBar",
                        "doughnut",
                        "radar",
                        "polar",
                        "scatter",
                        "bubble"
                    ]
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "CheckTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5022,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5031,
                    "name": "children",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 5032,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 5033,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 5034,
                                            "name": "checked",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        },
                                        {
                                            "id": 5035,
                                            "name": "focus",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ReactElement"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/hocs/Check/types.ts",
                                    "line": 17,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 5028,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5023,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5019,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5020,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5024,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5030,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5021,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "checkbox",
                        "radio",
                        "switch"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5029,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "CheckboxTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 849,
                    "name": "check",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 850,
                    "name": "icon",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 734,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 736,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 735,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 732,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 733,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 739,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 738,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 737,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "DatePickerTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 918,
                    "name": "dateGrind",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 921,
                    "name": "gridBlock",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 917,
                    "name": "textFieldOkButton",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 916,
                    "name": "textFieldWrapper",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 920,
                    "name": "title",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 919,
                    "name": "weekDay",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 855,
                    "name": "format",
                    "comment": "Format moment YYYY-MM-DD",
                    "type": "intrinsic",
                    "tags": {
                        "default": "YYYY-MM-DD"
                    },
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 866,
                    "name": "hideToday",
                    "comment": "Hide today button",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 865,
                    "name": "locale",
                    "comment": {
                        "tags": [
                            {
                                "tag": "default",
                                "text": "ru\n"
                            }
                        ]
                    },
                    "type": "stringLiteral",
                    "tags": {
                        "default": "ru"
                    },
                    "values": [
                        "en",
                        "ru",
                        "it",
                        "fr",
                        "de"
                    ],
                    "isOptional": true
                },
                {
                    "id": 864,
                    "name": "masked",
                    "comment": "Enable mask input",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 857,
                    "name": "maxValue",
                    "comment": "Max datetime that could be selected",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 856,
                    "name": "minValue",
                    "comment": "Min datetime that could be selected",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 858,
                    "name": "onChange",
                    "comment": "Callback function will with Date object\nor string if format property was passed.",
                    "type": "reflection",
                    "values": [
                        "(moment: Moment, value: string) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 863,
                    "name": "stayOpen",
                    "comment": "Do not close datepicker on change\nlatest value",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 853,
                    "name": "type",
                    "comment": "Type for DatePicker",
                    "type": "stringLiteral",
                    "tags": {
                        "default": "day"
                    },
                    "values": [
                        "year",
                        "month",
                        "day"
                    ],
                    "isOptional": true
                },
                {
                    "id": 854,
                    "name": "value",
                    "comment": "Property value could be a string\nif you pass format property aswell\notherwise value should be instance of Date",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Props for text form fields",
            "weight": 100,
            "children": [
                {
                    "id": 4032,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4027,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4026,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4029,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4024,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4023,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4031,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4030,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4028,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4025,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "DateGridTitleProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 903,
                    "name": "gridType",
                    "type": "stringLiteral",
                    "values": [
                        "year",
                        "month",
                        "day"
                    ]
                },
                {
                    "id": 902,
                    "name": "maxValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 901,
                    "name": "minValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 910,
                    "name": "onGridTypeChange",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 911,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 912,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 913,
                                            "name": "type",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "reference",
                                                "name": "GridType",
                                                "id": 922
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 91,
                                    "character": 25
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 904,
                    "name": "onNext",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 905,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 906,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 89,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 907,
                    "name": "onPrevious",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 908,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 909,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 90,
                                    "character": 19
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 914,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 900,
                    "name": "value",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                }
            ]
        },
        {
            "name": "DateGridProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 878,
                    "name": "hideToday",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 881,
                    "name": "maxValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 880,
                    "name": "minValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 882,
                    "name": "onChange",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 883,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 884,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 885,
                                            "name": "date",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "reference",
                                                "name": "Moment"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 69,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 886,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 887,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "year",
                        "month",
                        "day"
                    ]
                },
                {
                    "id": 879,
                    "name": "value",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                }
            ]
        },
        {
            "name": "DateGridCalendarProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 893,
                    "name": "active",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 892,
                    "name": "maxValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 891,
                    "name": "minValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 894,
                    "name": "onClick",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 897,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 898,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 890,
                    "name": "tmp",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 889,
                    "name": "value",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                }
            ]
        }
    ],
    "DividerTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4075,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4073,
                    "name": "dash",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4074,
                    "name": "gap",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4072,
                    "name": "vertical",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "DropTypes": [
        {
            "name": "TargetCoordinates",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2311,
                    "name": "bottom",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 2312,
                    "name": "left",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 2313,
                    "name": "right",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 2310,
                    "name": "top",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2316,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2329,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2320,
                    "name": "distance",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2317,
                    "name": "justify",
                    "type": "stringLiteral",
                    "values": [
                        "start",
                        "center",
                        "end",
                        "start-outside",
                        "end-outside"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2321,
                    "name": "onClickOutside",
                    "type": "reflection",
                    "values": [
                        "(event: MouseEvent, outsideTarget: undefined) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2326,
                    "name": "onEsc",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2319,
                    "name": "stretchHeight",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2318,
                    "name": "stretchWidth",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2315,
                    "name": "target",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 3937,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3936,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 3941,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3942,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3940,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3939,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 3950,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3956,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3954,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3953,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3955,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3951,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3952,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 3948,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3947,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3945,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3946,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "hidden",
                        "collapse",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3944,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "FieldTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5178,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5179,
                    "name": "cursor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5184,
                    "name": "fieldStyles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5186,
                    "name": "insideLabelStyles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5194,
                    "name": "isEmpty",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5190,
                    "name": "manyLines",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5177,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5187,
                    "name": "onClear",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5191,
                    "name": "onEnter",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5180,
                    "name": "onLabelOverlay",
                    "type": "reflection",
                    "values": [
                        "(state: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5185,
                    "name": "overlayLabelAlign",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Props for text form fields",
            "weight": 100,
            "children": [
                {
                    "id": 4032,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4027,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4026,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4029,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4024,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4023,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4031,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4030,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4028,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4025,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "FlexboxTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2354,
                    "name": "alignContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2353,
                    "name": "alignItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2360,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2351,
                    "name": "column",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2357,
                    "name": "direction",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "row",
                        "column",
                        "column-reverse",
                        "row-reverse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2359,
                    "name": "flow",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2352,
                    "name": "inline",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2355,
                    "name": "justifyContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2356,
                    "name": "justifyItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2358,
                    "name": "wrap",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "nowrap",
                        "wrap",
                        "wrap-reverse"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "Global": [
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 3937,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3936,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 3941,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3942,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3940,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3939,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 3950,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3956,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3954,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3953,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3955,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3951,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3952,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 3948,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3947,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3945,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3946,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "hidden",
                        "collapse",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3944,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 3937,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3936,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 3941,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3942,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3940,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3939,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 3950,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3956,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3954,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3953,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3955,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3951,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3952,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 3948,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3947,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3945,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3946,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "hidden",
                        "collapse",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3944,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 3958,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3964,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3962,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3961,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3963,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3959,
                    "name": "mx",
                    "comment": "Margin horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3960,
                    "name": "my",
                    "comment": "Margin vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleFlex",
            "comment": "Flexbox children styles",
            "weight": 400,
            "children": [
                {
                    "id": 3970,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3966,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3967,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3968,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3969,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3971,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 3979,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3977,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3974,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3973,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3978,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3976,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3975,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3980,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 3950,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3956,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3954,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3953,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3955,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3951,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3952,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 3958,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3964,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3962,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3961,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3963,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3959,
                    "name": "mx",
                    "comment": "Margin horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3960,
                    "name": "my",
                    "comment": "Margin vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 3948,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3947,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3945,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3946,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "hidden",
                        "collapse",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3944,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 3979,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3977,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3974,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3973,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3978,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3976,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3975,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3980,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 3958,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3964,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3962,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3961,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3963,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3959,
                    "name": "mx",
                    "comment": "Margin horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3960,
                    "name": "my",
                    "comment": "Margin vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleFlex",
            "comment": "Flexbox children styles",
            "weight": 400,
            "children": [
                {
                    "id": 3970,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3966,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3967,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3968,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3969,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3971,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleGrid",
            "comment": "Grid children styles",
            "weight": 400,
            "children": [
                {
                    "id": 3979,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3977,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3974,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3973,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3978,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3976,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3975,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3980,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleFlex",
            "comment": "Flexbox children styles",
            "weight": 400,
            "children": [
                {
                    "id": 3970,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3966,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3967,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3968,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3969,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3971,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Props for text form fields",
            "weight": 100,
            "children": [
                {
                    "id": 4032,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4027,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4026,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4029,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4024,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4023,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4031,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4030,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4028,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4025,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 3937,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3936,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 3941,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3942,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3940,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3939,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "GridTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2481,
                    "name": "alignContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2480,
                    "name": "alignItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2477,
                    "name": "autoColumns",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2479,
                    "name": "autoFlow",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2478,
                    "name": "autoRows",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2470,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2474,
                    "name": "columnGap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2476,
                    "name": "gap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2469,
                    "name": "inline",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2482,
                    "name": "justifyContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2483,
                    "name": "justifyItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2475,
                    "name": "rowGap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2473,
                    "name": "templateAreas",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2471,
                    "name": "templateColumns",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2472,
                    "name": "templateRows",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "IconTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 7,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "circle",
                        "oval",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3,
                    "name": "type",
                    "type": "reference",
                    "values": [
                        "Global.IconProp"
                    ]
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "IconsetTypes": [
        {
            "name": "Index",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3260,
                    "name": "filled",
                    "type": "reference",
                    "values": [
                        "Filled"
                    ]
                },
                {
                    "id": 3261,
                    "name": "outline",
                    "type": "reference",
                    "values": [
                        "Outline"
                    ]
                }
            ]
        }
    ],
    "MenuTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 940,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "start",
                        "center",
                        "end"
                    ],
                    "isOptional": true
                },
                {
                    "id": 939,
                    "name": "border",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "narrow",
                        "wide"
                    ],
                    "isOptional": true
                },
                {
                    "id": 942,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 934,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "filled",
                        "outline",
                        "color",
                        "underline",
                        "tab",
                        "filled-underline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 926,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 937,
                    "name": "direction",
                    "type": "stringLiteral",
                    "values": [
                        "row",
                        "column"
                    ],
                    "isOptional": true
                },
                {
                    "id": 943,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 936,
                    "name": "distance",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 935,
                    "name": "flip",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 932,
                    "name": "items",
                    "type": "reference",
                    "values": [
                        "Item[]"
                    ]
                },
                {
                    "id": 928,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(value: Value) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 941,
                    "name": "separator",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 938,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 933,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 927,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "ItemProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1066,
                    "name": "active",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1068,
                    "name": "onEnter",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1067,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Item",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1050,
                    "name": "content",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ]
                },
                {
                    "id": 1052,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1051,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ]
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "MeterTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1722,
                    "name": "animation",
                    "comment": "Enabled process animation",
                    "type": "intrinsic",
                    "tags": {
                        "default": "false"
                    },
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1721,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1719,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "filled",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1716,
                    "name": "percent",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 1720,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1717,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1718,
                    "name": "type",
                    "comment": {
                        "tags": [
                            {
                                "tag": "default",
                                "text": "line\n"
                            }
                        ]
                    },
                    "type": "stringLiteral",
                    "tags": {
                        "default": "line"
                    },
                    "values": [
                        "line",
                        "circle"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ModalTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2732,
                    "name": "cross",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2731,
                    "name": "header",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2729,
                    "name": "overlay",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2730,
                    "name": "window",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                }
            ]
        },
        {
            "name": "StyleProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2699,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 2700,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2698,
                    "name": "visible",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "Ref",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2620,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 2596,
                    "name": "close",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2597,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2598,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2599,
                                            "name": "didClose",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {
                                                "isOptional": true
                                            },
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "undefined"
                                                    },
                                                    {
                                                        "type": "reflection",
                                                        "declaration": {
                                                            "id": 2600,
                                                            "name": "__type",
                                                            "kind": 65536,
                                                            "kindString": "Type literal",
                                                            "flags": {},
                                                            "signatures": [
                                                                {
                                                                    "id": 2601,
                                                                    "name": "__call",
                                                                    "kind": 4096,
                                                                    "kindString": "Call signature",
                                                                    "flags": {},
                                                                    "type": {
                                                                        "type": "intrinsic",
                                                                        "name": "void"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 9,
                                    "character": 14
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2621,
                    "name": "customContent",
                    "type": "intrinsic",
                    "values": [
                        "ReactElement",
                        "null"
                    ]
                },
                {
                    "id": 2592,
                    "name": "open",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2593,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2594,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2595,
                                            "name": "customContent",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {
                                                "isOptional": true
                                            },
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "name": "ReactElement"
                                                    },
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "null"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 8,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2622,
                    "name": "overlay",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 2610,
                    "name": "setCenter",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2611,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2612,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2613,
                                            "name": "center",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 12,
                                    "character": 18
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2614,
                    "name": "setCustomContent",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2615,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2616,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2617,
                                            "name": "customContent",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "reference",
                                                        "name": "ReactElement"
                                                    },
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "null"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 13,
                                    "character": 25
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2606,
                    "name": "setSubtitle",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2607,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2608,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2609,
                                            "name": "subtitle",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 11,
                                    "character": 20
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2602,
                    "name": "setTitle",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2603,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2604,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2605,
                                            "name": "title",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 10,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2619,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2618,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2623,
                    "name": "window",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2628,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2633,
                    "name": "didClose",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2639,
                    "name": "didOpen",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2627,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2629,
                    "name": "hideHeader",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2630,
                    "name": "onClose",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2636,
                    "name": "onOpen",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2626,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2625,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleColors",
            "comment": "Color styles",
            "weight": 400,
            "children": [
                {
                    "id": 3937,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3936,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleBorder",
            "comment": "Border styles",
            "weight": 400,
            "children": [
                {
                    "id": 3941,
                    "name": "borderColor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3942,
                    "name": "borderRadius",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3940,
                    "name": "borderStyle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3939,
                    "name": "borderWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StylePadding",
            "comment": "Padding styles",
            "weight": 400,
            "children": [
                {
                    "id": 3950,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3956,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3954,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3953,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3955,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3951,
                    "name": "px",
                    "comment": "Padding horizontal alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3952,
                    "name": "py",
                    "comment": "Padding vertical alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleLayout",
            "comment": "Layout styles",
            "weight": 400,
            "children": [
                {
                    "id": 3948,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3947,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3945,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3946,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "hidden",
                        "collapse",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3944,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "ModalWindowProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2711,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 2714,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2715,
                    "name": "containerAttr",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "HTMLAttributes",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "name": "HTMLElement"
                                    }
                                ]
                            },
                            {
                                "type": "reference",
                                "name": "SelfProps",
                                "id": 3981
                            }
                        ]
                    },
                    "isOptional": true
                },
                {
                    "id": 2712,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2713,
                    "name": "hideHeader",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2716,
                    "name": "onClosePressed",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2717,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2718,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 63,
                                    "character": 23
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2719,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2709,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2708,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2710,
                    "name": "visible",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "ModalOverlayProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2703,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 2705,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2704,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2706,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2702,
                    "name": "visible",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "ModalHeaderProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2723,
                    "name": "hideHeader",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2724,
                    "name": "onClosePressed",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2725,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2726,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 71,
                                    "character": 23
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2727,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 2722,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2721,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InnerProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2661,
                    "name": "innerRef",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        }
    ],
    "NotificationTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2735,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2736,
                    "name": "onClick",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "NotifyOptions",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2746,
                    "name": "customContent",
                    "comment": "if custom content filled then title and message will be ignored",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2741,
                    "name": "message",
                    "comment": "Message of notification",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 2743,
                    "name": "onClick",
                    "comment": "Will call on notificaion click",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2742,
                    "name": "timeout",
                    "comment": "Notification will be removed after timeout\nvalue in milisecods",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2740,
                    "name": "title",
                    "comment": "Title of notification",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        }
    ],
    "PanelTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2860,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2750,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "right",
                        "bottom",
                        "left"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2751,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2753,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2752,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "PopoverTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2976,
                    "name": "arrow",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2975,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2863,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2868,
                    "name": "arrowHeight",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2867,
                    "name": "arrowWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2864,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2866,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2865,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "RadioTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1207,
                    "name": "check",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1208,
                    "name": "icon",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1092,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1094,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1093,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1090,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1091,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1097,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1096,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1095,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "RangeTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1223,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 1224,
                    "name": "rail",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 1226,
                    "name": "thumb",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 1225,
                    "name": "track",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1221,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1213,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1212,
                    "name": "max",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1211,
                    "name": "min",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1219,
                    "name": "mode",
                    "type": "stringLiteral",
                    "values": [
                        "single",
                        "range"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1215,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(value: number) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1220,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1214,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ScrollViewTypes": [
        {
            "name": "Variants",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 6091,
                    "name": "active",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5982,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5984,
                    "name": "color",
                    "comment": "Custom ScrollBar color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5983,
                    "name": "mode",
                    "comment": "Display mode",
                    "type": "stringLiteral",
                    "tags": {
                        "default": "scroll"
                    },
                    "values": [
                        "always",
                        "scroll",
                        "hidden"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "SelectTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1387,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 1390,
                    "name": "dropItem",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 1389,
                    "name": "dropMenu",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 1388,
                    "name": "input",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                }
            ]
        },
        {
            "name": "SearchProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1384,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1385,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1377,
                    "name": "onSearch",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1378,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1379,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 1380,
                                            "name": "searchValue",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Select/types.ts",
                                    "line": 62,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1383,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1376,
                    "name": "searchValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1381,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1382,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1237,
                    "name": "defaultValues",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1234,
                    "name": "multiselect",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1238,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(values: undefined, changedValue: Option) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1233,
                    "name": "options",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ]
                },
                {
                    "id": 1232,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1235,
                    "name": "searchable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1236,
                    "name": "values",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Props for text form fields",
            "weight": 100,
            "children": [
                {
                    "id": 4032,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4027,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4026,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4029,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4024,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4023,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4031,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4030,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4028,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4025,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "OptionsProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1360,
                    "name": "onClose",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1361,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1362,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 1363,
                                            "name": "option",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Select/types.ts",
                                    "line": 57,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1364,
                    "name": "searchable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1359,
                    "name": "selected",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ]
                }
            ]
        },
        {
            "name": "SearchProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1384,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1385,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1377,
                    "name": "onSearch",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1378,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1379,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 1380,
                                            "name": "searchValue",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/Select/types.ts",
                                    "line": 62,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1383,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1376,
                    "name": "searchValue",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1381,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1382,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "Option",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1229,
                    "name": "text",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1230,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        }
    ],
    "SpinnerTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 118,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 117,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 121,
                    "name": "count",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 120,
                    "name": "duration",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 119,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 122,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "SplitTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5849,
                    "name": "areaSize",
                    "comment": "Split area size, value in pixels",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5848,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "ReactElement[]"
                    ]
                },
                {
                    "id": 5847,
                    "name": "direction",
                    "type": "stringLiteral",
                    "values": [
                        "row",
                        "column"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5855,
                    "name": "onChange",
                    "comment": "Calls when mouseUp if position did change",
                    "type": "reflection",
                    "values": [
                        "(positions: undefined) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5851,
                    "name": "onMove",
                    "comment": "Calls when split area moves",
                    "type": "reflection",
                    "values": [
                        "(positions: undefined) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5850,
                    "name": "positions",
                    "comment": "You can give it array of numbers (in percent)",
                    "type": "intrinsic",
                    "values": [
                        "number[]"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "SwitchTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1536,
                    "name": "check",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1537,
                    "name": "icon",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1421,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1423,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1422,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1419,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1420,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1426,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1425,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1424,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "TableTypes": [
        {
            "name": "TablePagination",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2038,
                    "name": "async",
                    "type": "reflection",
                    "values": [
                        "(page: number) => boolean"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2036,
                    "name": "pageSize",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 2037,
                    "name": "pageTotalSize",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "TableForm",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1851,
                    "name": "defaultData",
                    "type": "reflection",
                    "values": [
                        "unknown"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1856,
                    "name": "dismiss",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1850,
                    "name": "key",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1855,
                    "name": "render",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "TableColumn",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1835,
                    "name": "dataIndex",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1837,
                    "name": "render",
                    "type": "reflection",
                    "values": [
                        "(row: any, value: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1834,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1836,
                    "name": "width",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "TableActions",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1844,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1843,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1845,
                    "name": "onAction",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1846,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 1847,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 1848,
                                            "name": "row",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 15,
                                    "character": 17
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2072,
                    "name": "actionButtons",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2073,
                    "name": "actionButtonsEdit",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2071,
                    "name": "actions",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2064,
                    "name": "body",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2069,
                    "name": "column",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2059,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2060,
                    "name": "content",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2062,
                    "name": "headColumn",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2061,
                    "name": "headRow",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2070,
                    "name": "more",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2065,
                    "name": "pagination",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2066,
                    "name": "paginationButton",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2067,
                    "name": "row",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2063,
                    "name": "search",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 2068,
                    "name": "subrow",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                }
            ]
        },
        {
            "name": "RowProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1991,
                    "name": "actions",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "border",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1996,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 1994,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "isBlur",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "isExpanding",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1988,
                    "name": "isSelected",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1997,
                    "name": "onRowClick",
                    "type": "reflection",
                    "values": [
                        "(row: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "row",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 1993,
                    "name": "scope",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1995,
                    "name": "style",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2001,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1863,
                    "name": "actions",
                    "type": "reference",
                    "values": [
                        "TableActions[]"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1864,
                    "name": "border",
                    "type": "stringLiteral",
                    "values": [
                        "all",
                        "external",
                        "internal",
                        "vertical",
                        "horizontal"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1869,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1880,
                    "name": "className",
                    "type": "intrinsic",
                    "overwrites": {
                        "type": "reference",
                        "name": "HTMLAttributes.className",
                        "id": 3868
                    },
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1861,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 1860,
                    "name": "data",
                    "type": "reference",
                    "values": [
                        "Object[]"
                    ]
                },
                {
                    "id": 1862,
                    "name": "form",
                    "type": "reference",
                    "values": [
                        "TableForm"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1879,
                    "name": "hideHeaders",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1865,
                    "name": "indexKey",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1868,
                    "name": "noDataLabel",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1870,
                    "name": "onRowClick",
                    "type": "reflection",
                    "values": [
                        "(row: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1875,
                    "name": "onSearch",
                    "type": "reflection",
                    "values": [
                        "(value: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1867,
                    "name": "pagination",
                    "type": "reference",
                    "values": [
                        "TablePagination"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1866,
                    "name": "scope",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1874,
                    "name": "search",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "PaginationProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2056,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2047,
                    "name": "data",
                    "type": "reflection",
                    "values": [
                        "unknown"
                    ]
                },
                {
                    "id": 2051,
                    "name": "onChange",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2052,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2053,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2054,
                                            "name": "page",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "number"
                                            }
                                        },
                                        {
                                            "id": 2055,
                                            "name": "searchBar",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 101,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2044,
                    "name": "page",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 2043,
                    "name": "pagination",
                    "type": "reference",
                    "values": [
                        "TablePagination"
                    ]
                },
                {
                    "id": 2046,
                    "name": "search",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2045,
                    "name": "searchActive",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 2057,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "InjectForm",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2026,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 2022,
                    "name": "data",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2023,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "indexSignature": [
                                {
                                    "id": 2024,
                                    "name": "__index",
                                    "kind": 8192,
                                    "kindString": "Index signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2025,
                                            "name": "key",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 83,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 2032,
                    "name": "dismiss",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2027,
                    "name": "setData",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2028,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 2029,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2030,
                                            "name": "key",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        },
                                        {
                                            "id": 2031,
                                            "name": "value",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 85,
                                    "character": 16
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "FormProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2019,
                    "name": "Form",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 2020,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2018,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 2014,
                    "name": "data",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 2015,
                    "name": "dismiss",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "ColumnProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2006,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2004,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 2003,
                    "name": "row",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 2005,
                    "name": "scope",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2007,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "ActionsProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2009,
                    "name": "actions",
                    "type": "intrinsic",
                    "values": [
                        "any[]"
                    ]
                },
                {
                    "id": 2011,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2010,
                    "name": "data",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 2012,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        }
    ],
    "TextFieldTypes": [
        {
            "name": "TextAreaProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1709,
                    "name": "cols",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1710,
                    "name": "rows",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1711,
                    "name": "wrap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1541,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1540,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1543,
                    "name": "masked",
                    "type": "reference",
                    "values": [
                        "IMask.AnyMaskedOptions"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1542,
                    "name": "multiline",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1544,
                    "name": "onChange",
                    "type": "reference",
                    "values": [
                        "ChangeEventHandler"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InputProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1686,
                    "name": "autoComplete",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1687,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1696,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1697,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1698,
                    "name": "formEncType",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1699,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1700,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1701,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1688,
                    "name": "list",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1702,
                    "name": "max",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1703,
                    "name": "maxLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1704,
                    "name": "min",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1705,
                    "name": "minLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1689,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1691,
                    "name": "pattern",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1690,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1692,
                    "name": "readOnly",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1693,
                    "name": "required",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1706,
                    "name": "step",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1694,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "email",
                        "hidden",
                        "number",
                        "password",
                        "reset",
                        "search",
                        "tel",
                        "text",
                        "url"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1695,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1707,
                    "name": "width",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "TextAreaProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1709,
                    "name": "cols",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1710,
                    "name": "rows",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1711,
                    "name": "wrap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Props for text form fields",
            "weight": 100,
            "children": [
                {
                    "id": 4032,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4027,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4026,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4029,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4024,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4023,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4031,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4030,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4028,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4025,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InputProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1686,
                    "name": "autoComplete",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1687,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1696,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1697,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1698,
                    "name": "formEncType",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1699,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1700,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1701,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1688,
                    "name": "list",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1702,
                    "name": "max",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1703,
                    "name": "maxLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1704,
                    "name": "min",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1705,
                    "name": "minLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1689,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1691,
                    "name": "pattern",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1690,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1692,
                    "name": "readOnly",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1693,
                    "name": "required",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1706,
                    "name": "step",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1694,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "email",
                        "hidden",
                        "number",
                        "password",
                        "reset",
                        "search",
                        "tel",
                        "text",
                        "url"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1695,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1707,
                    "name": "width",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ThemeTypes": [
        {
            "name": "Variables",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3129,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Colors"
                    ]
                },
                {
                    "id": 3131,
                    "name": "distance",
                    "type": "reference",
                    "values": [
                        "Distance"
                    ]
                },
                {
                    "id": 3128,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 3130,
                    "name": "radius",
                    "type": "reference",
                    "values": [
                        "Radius"
                    ]
                },
                {
                    "id": 3132,
                    "name": "typography",
                    "type": "reference",
                    "values": [
                        "Typography"
                    ]
                }
            ]
        },
        {
            "name": "Typography",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3212,
                    "name": "caption",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3213,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3214,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 182,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3215,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 183,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3216,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 184,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3217,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 185,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3214,
                                        3215,
                                        3216,
                                        3217
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 181,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3206,
                    "name": "display",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3207,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3208,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 176,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3209,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 177,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3210,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 178,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3211,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 179,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3208,
                                        3209,
                                        3210,
                                        3211
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 175,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3194,
                    "name": "header",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3195,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3196,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 164,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3197,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 165,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3198,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 166,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3199,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 167,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3196,
                                        3197,
                                        3198,
                                        3199
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 163,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3193,
                    "name": "paragraph",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 3200,
                    "name": "text",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3201,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3202,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 170,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3203,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 171,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3204,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 172,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 3205,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 173,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3202,
                                        3203,
                                        3204,
                                        3205
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 169,
                                    "character": 13
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3175,
                    "name": "Badge",
                    "type": "reference",
                    "values": [
                        "BadgeTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3176,
                    "name": "Block",
                    "type": "reference",
                    "values": [
                        "BlockTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3164,
                    "name": "Button",
                    "type": "reference",
                    "values": [
                        "ButtonTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3165,
                    "name": "Checkbox",
                    "type": "reference",
                    "values": [
                        "CheckboxTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3166,
                    "name": "DatePicker",
                    "type": "reference",
                    "values": [
                        "DatePickerTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3160,
                    "name": "Divider",
                    "type": "reference",
                    "values": [
                        "DividerTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3177,
                    "name": "Drop",
                    "type": "reference",
                    "values": [
                        "DropTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3178,
                    "name": "Flexbox",
                    "type": "reference",
                    "values": [
                        "FlexboxTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3179,
                    "name": "Grid",
                    "type": "reference",
                    "values": [
                        "GridTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3161,
                    "name": "Icon",
                    "type": "reference",
                    "values": [
                        "IconTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3167,
                    "name": "Menu",
                    "type": "reference",
                    "values": [
                        "MenuTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3173,
                    "name": "Meter",
                    "type": "reference",
                    "values": [
                        "MeterTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3180,
                    "name": "Modal",
                    "type": "reference",
                    "values": [
                        "ModalTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3181,
                    "name": "Notification",
                    "type": "reference",
                    "values": [
                        "NotificationTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3182,
                    "name": "Panel",
                    "type": "reference",
                    "values": [
                        "PanelTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3183,
                    "name": "Popover",
                    "type": "reference",
                    "values": [
                        "PopoverTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3168,
                    "name": "Radio",
                    "type": "reference",
                    "values": [
                        "RadioTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3169,
                    "name": "Range",
                    "type": "reference",
                    "values": [
                        "RangeTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3170,
                    "name": "Select",
                    "type": "reference",
                    "values": [
                        "SelectTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3162,
                    "name": "Spinner",
                    "type": "reference",
                    "values": [
                        "SpinnerTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3171,
                    "name": "Switch",
                    "type": "reference",
                    "values": [
                        "SwitchTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3174,
                    "name": "Table",
                    "type": "reference",
                    "values": [
                        "TableTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3172,
                    "name": "TextField",
                    "type": "reference",
                    "values": [
                        "TextFieldTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3184,
                    "name": "Tree",
                    "type": "reference",
                    "values": [
                        "TreeTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3163,
                    "name": "Typography",
                    "type": "reference",
                    "values": [
                        "TypographyTypes.Styles"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3185,
                    "name": "ViewportTypes",
                    "type": "reference",
                    "values": [
                        "ViewportTypes.Styles"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Index",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3118,
                    "name": "assets",
                    "type": "reference",
                    "values": [
                        "Assets"
                    ]
                },
                {
                    "id": 3119,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 3120,
                    "name": "replace",
                    "type": "reference",
                    "values": [
                        "Replace"
                    ]
                }
            ]
        },
        {
            "name": "Variables",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3129,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Colors"
                    ]
                },
                {
                    "id": 3131,
                    "name": "distance",
                    "type": "reference",
                    "values": [
                        "Distance"
                    ]
                },
                {
                    "id": 3128,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 3130,
                    "name": "radius",
                    "type": "reference",
                    "values": [
                        "Radius"
                    ]
                },
                {
                    "id": 3132,
                    "name": "typography",
                    "type": "reference",
                    "values": [
                        "Typography"
                    ]
                }
            ]
        },
        {
            "name": "Distance",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3190,
                    "name": "large",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 3189,
                    "name": "medium",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 3188,
                    "name": "small",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 3191,
                    "name": "xlarge",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 3187,
                    "name": "xsmall",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        },
        {
            "name": "Assets",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3135,
                    "name": "border",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3136,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3139,
                                    "name": "color",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 63,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 3138,
                                    "name": "style",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 62,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 3137,
                                    "name": "width",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 61,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3139,
                                        3138,
                                        3137
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 60,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3152,
                    "name": "fieldHeight",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3153,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3157,
                                    "name": "large",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 81,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 3156,
                                    "name": "medium",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 80,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 3155,
                                    "name": "small",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 79,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 3158,
                                    "name": "xlarge",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 82,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 3154,
                                    "name": "xsmall",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 78,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3157,
                                        3156,
                                        3155,
                                        3158,
                                        3154
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 77,
                                    "character": 20
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3151,
                    "name": "focus",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 3134,
                    "name": "global",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3145,
                    "name": "gradient",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3146,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3147,
                                    "name": "linear",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 71,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 3148,
                                    "name": "linearVariant",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 72,
                                            "character": 25
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 3149,
                                    "name": "radial",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 73,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 3150,
                                    "name": "radialVariant",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 74,
                                            "character": 25
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3147,
                                        3148,
                                        3149,
                                        3150
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 70,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 3140,
                    "name": "shadow",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 3141,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 3142,
                                    "name": "default",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 66,
                                            "character": 19
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 3144,
                                    "name": "long",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 68,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 3143,
                                    "name": "short",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 67,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        3142,
                                        3144,
                                        3143
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 65,
                                    "character": 15
                                }
                            ]
                        }
                    }
                }
            ]
        }
    ],
    "TreeTypes": [
        {
            "name": "Styles",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3091,
                    "name": "containter",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2982,
                    "name": "alwaysOpen",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2980,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2981,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "flat",
                        "drop",
                        "inline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2983,
                    "name": "defaultOpen",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2984,
                    "name": "indent",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2979,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "React.ReactNode",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "TypographyTypes": [
        {
            "name": "TextProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 490,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "center",
                        "end",
                        "left",
                        "right",
                        "start",
                        "justify",
                        "match-parent"
                    ],
                    "isOptional": true
                },
                {
                    "id": 489,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 487,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 488,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 486,
                    "name": "decoration",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 485,
                    "name": "ellipsis",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 484,
                    "name": "quotes",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 492,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 493,
                    "name": "transform",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "none",
                        "capitalize",
                        "full-size-kana",
                        "full-width",
                        "lowercase",
                        "uppercase"
                    ],
                    "isOptional": true
                },
                {
                    "id": 491,
                    "name": "weight",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "normal",
                        "bold",
                        "bolder",
                        "lighter"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 3925,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3923,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3924,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3933,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3932,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "tags": {
                        "deprecated": "This feature is no longer recommended."
                    },
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3934,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3926,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3928,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3929,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3927,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3931,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3930,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 3873,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3868,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3869,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3872,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3870,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3871,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 231,
                    "name": "defaultStyles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 232,
                    "name": "tag",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 233,
                    "name": "theme",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "TextProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 490,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "center",
                        "end",
                        "left",
                        "right",
                        "start",
                        "justify",
                        "match-parent"
                    ],
                    "isOptional": true
                },
                {
                    "id": 489,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 487,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 488,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 486,
                    "name": "decoration",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 485,
                    "name": "ellipsis",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 484,
                    "name": "quotes",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 492,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 493,
                    "name": "transform",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "none",
                        "capitalize",
                        "full-size-kana",
                        "full-width",
                        "lowercase",
                        "uppercase"
                    ],
                    "isOptional": true
                },
                {
                    "id": 491,
                    "name": "weight",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "normal",
                        "bold",
                        "bolder",
                        "lighter"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "AnchorProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 359,
                    "name": "download",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 360,
                    "name": "href",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 361,
                    "name": "hrefLang",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 362,
                    "name": "media",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 363,
                    "name": "ping",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 367,
                    "name": "referrerPolicy",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 364,
                    "name": "rel",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 365,
                    "name": "target",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 366,
                    "name": "type",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ViewportTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3099,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3096,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3097,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3098,
                    "name": "theme",
                    "type": "reflection",
                    "values": [
                        "(lib: T) => R"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3095,
                    "name": "wrapper",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "MountAreaElement",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3104,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "ReactElement"
                    ]
                },
                {
                    "id": 3103,
                    "name": "key",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        },
        {
            "name": "MountArea",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3101,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "DialogOptions",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3112,
                    "name": "buttonText",
                    "comment": "Button text",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3114,
                    "name": "customContent",
                    "comment": "if custom content filled then message and buttonText will be ignored",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3113,
                    "name": "hideHeader",
                    "comment": "Hides modal window header",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3111,
                    "name": "message",
                    "comment": "Message of dialog",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3110,
                    "name": "subtitle",
                    "comment": "Subtitle of modal window header",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3109,
                    "name": "title",
                    "comment": "Title of modal window header",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Context",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3107,
                    "name": "browser",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 3106,
                    "name": "theme",
                    "type": "reference",
                    "values": [
                        "ThemeType.Index"
                    ]
                }
            ]
        }
    ]
}