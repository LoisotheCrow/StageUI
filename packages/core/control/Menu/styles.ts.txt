import WhaleTypes from '@flow-ui/whale/types'
import Types from './types'

const styles: WhaleTypes.CreateStyles<Types.Overrides, Types.Props> = (props, theme) => {

    const { size, shape } = props

    const spacing = theme.spacing[size || 'm'] || theme.spacing['m']
    const typography = theme.typography.text[size || 'm'] || theme.typography.text['m']
    const isRow = props.direction?.[0] === 'r'
    let borderRadius = '0'
    if (shape === 'rounded') {
        borderRadius = theme.radius.narrow
    }
    if (shape === 'round') {
        borderRadius = '100rem'
    }

    return {
        menu: (variant) => [
            {
                ...typography,
                display: 'flex',
                flexDirection: props.direction || 'column',
                margin: `calc(${spacing} / 2) 0`,
                ...isRow ? ({
                    justifyContent: props.align || 'stretch',
                }) : ({
                    alignItems: props.align || 'stretch',
                }),

                '[data-flow=menu-item]': {
                    display: 'flex',
                    cursor: 'pointer',
                    userSelect: 'none',
                    padding: `calc(${spacing} / 2) ${spacing}`,
                    color: theme.color.hardest.rgb().string(),
                    ':hover': {
                        color: theme.color.onSurface.rgb().string(),
                    },
                    '&[data-flow-active=true]': [
                        {
                            cursor: 'default',
                        },
                        variant({
                            decoration: {
                                'filled': {
                                    background: theme.color.primary.rgb().string(),
                                    color: theme.color.onPrimary.rgb().string(),
                                    borderRadius,
                                    ':hover': {
                                        color: theme.color.onPrimary.rgb().string(),
                                    }
                                },
                                'marker': {
                                    position: 'relative',
                                    paddingLeft: spacing,
                                    color: theme.color.primary.rgb().string(),
                                    ':before': {
                                        content: `''`,
                                        position: 'absolute',
                                        width: isRow ? `100%` : `calc(${spacing} / 4)`,
                                        height: isRow ? `calc(${spacing} / 4)` : `100%`,
                                        background: theme.color.primary.rgb().string(),
                                        borderRadius,
                                        left: 0,
                                        bottom: 0,
                                    }
                                },
                                'marker-reverse': {
                                    position: 'relative',
                                    paddingLeft: spacing,
                                    color: theme.color.primary.rgb().string(),
                                    ':before': {
                                        content: `''`,
                                        position: 'absolute',
                                        width: isRow ? `100%` : `calc(${spacing} / 4)`,
                                        height: isRow ? `calc(${spacing} / 4)` : `100%`,
                                        background: theme.color.primary.rgb().string(),
                                        borderRadius,
                                        right: 0,
                                        top: 0,
                                    }
                                },
                                'color': {
                                    color: theme.color.primary.rgb().string(),
                                    ':hover': {
                                        color: theme.color.primary.rgb().string(),
                                    }
                                },
                            }
                        })
                    ],
                },
                '[data-flow=sub-menu]': {
                    position: 'relative',
                    '&[data-flow-active=true]': [{
                        '> [data-flow=menu-item]': [
                            {
                                color: theme.color.primary.rgb().string(),
                            }
                        ]
                    }]
                },
                '[data-flow=sub-menu-arrow]': {
                    height: typography.fontSize,
                    width: typography.fontSize,
                },
                '[data-flow=sub-menu-content]': [
                    (isRow) && {
                        position: 'absolute',
                        minWidth: 'max-content',
                    }
                ],
                '[data-flow=menu-group]': {
                    display: 'flex',
                    flexDirection: props.direction || 'column',
                    alignItems: 'stretch',
                },
                '[data-flow=menu-group-title]': {
                    display: 'flex',
                    alignItems: 'center',
                    padding: `calc(${spacing} / 4) ${spacing}`,
                    fontSize: `calc(${typography.fontSize} / 1.25)`,
                    color: theme.color.hard.rgb().string(),
                },
                '[data-flow=left]': {
                    display: 'flex',
                    alignItems: 'center',
                    paddingRight: `calc(${spacing} / 2)`,
                    // Icon size
                    ' > span': {
                        height: 'auto',
                        '> svg': {
                            height: typography.fontSize,
                            width: typography.fontSize
                        }
                    },
                },
                '[data-flow=middle]': {
                    flex: 1,
                },
                '[data-flow=right]': {
                    display: 'flex',
                    alignItems: 'center',
                    paddingLeft: `calc(${spacing} / 2)`,
                    // Icon size
                    ' > span': {
                        height: 'auto',
                        '> svg': {
                            height: typography.fontSize,
                            width: typography.fontSize
                        }
                    },
                },
            }
        ],

    }
}

export default styles