{
    "\"csstype\"": [
        {
            "name": "Properties",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1841,
                    "name": "alignSelf",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1839,
                    "name": "display",
                    "type": "stringLiteral",
                    "values": [
                        "block",
                        "inline",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "none",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex",
                        "grid"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1842,
                    "name": "justifySelf",
                    "type": "stringLiteral",
                    "values": [
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "initial",
                        "left",
                        "normal",
                        "right",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1840,
                    "name": "overflow",
                    "type": "stringLiteral",
                    "values": [
                        "auto",
                        "hidden",
                        "scroll",
                        "visible",
                        "inherit"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "BadgeTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right",
                        "top-right",
                        "bottom-right",
                        "top-left",
                        "bottom-left"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 7,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 6,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3,
                    "name": "content",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ]
                },
                {
                    "id": 8,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 107,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 108,
                    "name": "holder",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "BlockTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2076,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2075,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2077,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2073,
                    "name": "hoverSurface",
                    "type": "stringLiteral",
                    "values": [
                        "major",
                        "medium",
                        "minor"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2078,
                    "name": "overflow",
                    "type": "stringLiteral",
                    "overwrites": {
                        "type": "reference",
                        "name": "StyleSelfProps.overflow",
                        "id": 1965
                    },
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2079,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2074,
                    "name": "position",
                    "type": "stringLiteral",
                    "overwrites": {
                        "type": "reference",
                        "name": "StyleFlowProps.position",
                        "id": 1973
                    },
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2072,
                    "name": "surface",
                    "type": "stringLiteral",
                    "values": [
                        "major",
                        "medium",
                        "minor"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2071,
                    "name": "tag",
                    "type": "stringLiteral",
                    "values": [
                        "div",
                        "span",
                        "header",
                        "footer",
                        "article",
                        "section",
                        "aside",
                        "main"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2176,
                    "name": "containter",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2177,
                    "name": "decoration",
                    "type": "reflection",
                    "values": [
                        "unknown"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ButtonTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 968,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 985,
                    "name": "borderColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 986,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 983,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 980,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "filled",
                        "outline",
                        "text",
                        "plain"
                    ],
                    "isOptional": true
                },
                {
                    "id": 969,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 970,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 971,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 972,
                    "name": "formEncType",
                    "comment": "The formenctype attribute specifies how form-data should be encoded before sending it to a server. This attribute overrides the form's enctype attribute.\nThe formenctype attribute is only used for buttons with type=\"submit\".",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 973,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 974,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 975,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 976,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 981,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 979,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 984,
                    "name": "textColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 977,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "submit",
                        "reset",
                        "button"
                    ],
                    "isOptional": true
                },
                {
                    "id": 982,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 978,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "string[]",
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1085,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1086,
                    "name": "filled",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1087,
                    "name": "outline",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1089,
                    "name": "plain",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1088,
                    "name": "text",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        }
    ],
    "ChartTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5447,
                    "name": "data",
                    "type": "reference",
                    "values": [
                        "Array"
                    ]
                },
                {
                    "id": 5446,
                    "name": "labels",
                    "type": "reference",
                    "values": [
                        "Array"
                    ]
                },
                {
                    "id": 5448,
                    "name": "options",
                    "type": "reference",
                    "values": [
                        "ChartOptions"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5445,
                    "name": "type",
                    "comment": {
                        "tags": [
                            {
                                "tag": "default",
                                "text": "line\n"
                            }
                        ]
                    },
                    "type": "stringLiteral",
                    "values": [
                        "line",
                        "pie",
                        "verticalBar",
                        "horizontalBar",
                        "doughnut",
                        "radar",
                        "polar",
                        "scatter",
                        "bubble"
                    ]
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "CheckTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4191,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4200,
                    "name": "children",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 4201,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 4202,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 4203,
                                            "name": "checked",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ReactElement"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/hocs/Check/types.ts",
                                    "line": 17,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 4197,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4192,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4188,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4189,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4193,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4199,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4190,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "checkbox",
                        "radio",
                        "switch"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4198,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "CheckboxTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 658,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 660,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 659,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 656,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 657,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 663,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 662,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 661,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 765,
                    "name": "check",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 766,
                    "name": "icon",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        }
    ],
    "DatePickerTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 770,
                    "name": "format",
                    "comment": "String like YYYY-MM-DD etc",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 780,
                    "name": "hideToday",
                    "comment": "Hide today button",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 779,
                    "name": "locale",
                    "type": "stringLiteral",
                    "values": [
                        "en",
                        "ru",
                        "it",
                        "fr",
                        "de"
                    ],
                    "isOptional": true
                },
                {
                    "id": 778,
                    "name": "masked",
                    "comment": "Enable mask input",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 772,
                    "name": "maxValue",
                    "comment": "Max datetime that could be selected",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 771,
                    "name": "minValue",
                    "comment": "Min datetime that could be selected",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 773,
                    "name": "onChange",
                    "comment": "Callback function will with Date object\nor string if format property was passed.",
                    "type": "reflection",
                    "values": [
                        "(moment: Moment, value: string) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 769,
                    "name": "value",
                    "comment": "Property value could be a string\nif you pass format property aswell\notherwise value should be instance of Date",
                    "type": "intrinsic",
                    "values": [
                        "Moment",
                        "Date",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Stuff for something",
            "weight": 100,
            "children": [
                {
                    "id": 2049,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2054,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2048,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2047,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2051,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2045,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2044,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2053,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2052,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2050,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2046,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 831,
                    "name": "dateGrind",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 834,
                    "name": "gridBlock",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 830,
                    "name": "textFieldOkButton",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 829,
                    "name": "textFieldWrapper",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 833,
                    "name": "title",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 832,
                    "name": "weekDay",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "DateGridTitleProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 816,
                    "name": "gridType",
                    "type": "stringLiteral",
                    "values": [
                        "year",
                        "month",
                        "day"
                    ]
                },
                {
                    "id": 815,
                    "name": "maxValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 814,
                    "name": "minValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 823,
                    "name": "onGridTypeChange",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 824,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 825,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 826,
                                            "name": "type",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "reference",
                                                "name": "GridType",
                                                "id": 835
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 76,
                                    "character": 25
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 817,
                    "name": "onNext",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 818,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 819,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 74,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 820,
                    "name": "onPrevious",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 821,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 822,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 75,
                                    "character": 19
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 827,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 813,
                    "name": "value",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                }
            ]
        },
        {
            "name": "DateGridProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 793,
                    "name": "hideToday",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 796,
                    "name": "maxValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 795,
                    "name": "minValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 797,
                    "name": "onChange",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 798,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 799,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 800,
                                            "name": "date",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "reference",
                                                "name": "Moment"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/control/DatePicker/types.ts",
                                    "line": 56,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 801,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 794,
                    "name": "value",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                }
            ]
        },
        {
            "name": "DateGridCalendarProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 806,
                    "name": "active",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 805,
                    "name": "maxValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 804,
                    "name": "minValue",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                },
                {
                    "id": 807,
                    "name": "onClick",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 810,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 811,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 803,
                    "name": "value",
                    "type": "reference",
                    "values": [
                        "Moment"
                    ]
                }
            ]
        }
    ],
    "DividerTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2602,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2600,
                    "name": "dash",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2601,
                    "name": "gap",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2599,
                    "name": "vertical",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "DropTypes": [
        {
            "name": "TargetCoordinates",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4315,
                    "name": "bottom",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 4316,
                    "name": "left",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 4317,
                    "name": "right",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 4314,
                    "name": "top",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4320,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4333,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4324,
                    "name": "distance",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4321,
                    "name": "justify",
                    "type": "stringLiteral",
                    "values": [
                        "start",
                        "center",
                        "end",
                        "start-outside",
                        "end-outside"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4325,
                    "name": "onClickOutside",
                    "type": "reflection",
                    "values": [
                        "(event: MouseEvent, outsideTarget: undefined) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4330,
                    "name": "onEsc",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4323,
                    "name": "stretchHeight",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4322,
                    "name": "stretchWidth",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4319,
                    "name": "target",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ]
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "FieldTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4533,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4534,
                    "name": "cursor",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4539,
                    "name": "fieldStyles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4541,
                    "name": "insideLabelStyles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4549,
                    "name": "isEmpty",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4545,
                    "name": "manyLines",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4532,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4542,
                    "name": "onClear",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4546,
                    "name": "onEnter",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4535,
                    "name": "onLabelOverlay",
                    "type": "reflection",
                    "values": [
                        "(state: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4540,
                    "name": "overlayLabelAlign",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Stuff for something",
            "weight": 100,
            "children": [
                {
                    "id": 2049,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2054,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2048,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2047,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2051,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2045,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2044,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2053,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2052,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2050,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2046,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "FlexboxTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3896,
                    "name": "alignContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3895,
                    "name": "alignItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3902,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3893,
                    "name": "column",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3899,
                    "name": "direction",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "column",
                        "column-reverse",
                        "row",
                        "row-reverse"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3901,
                    "name": "flow",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3894,
                    "name": "inline",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3897,
                    "name": "justifyContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3898,
                    "name": "justifyItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3900,
                    "name": "wrap",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "nowrap",
                        "wrap",
                        "wrap-reverse"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "Global": [
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Stuff for something",
            "weight": 100,
            "children": [
                {
                    "id": 2049,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2054,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2048,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2047,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2051,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2045,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2044,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2053,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2052,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2050,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2046,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "GridTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4688,
                    "name": "alignContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4687,
                    "name": "alignItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4684,
                    "name": "autoColumns",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4686,
                    "name": "autoFlow",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4685,
                    "name": "autoRows",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4677,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4681,
                    "name": "columnGap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4683,
                    "name": "gap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4676,
                    "name": "inline",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4689,
                    "name": "justifyContent",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4690,
                    "name": "justifyItems",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4682,
                    "name": "rowGap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4680,
                    "name": "templateAreas",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4678,
                    "name": "templateColumns",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4679,
                    "name": "templateRows",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "IconTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1096,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1095,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1093,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "circle",
                        "oval",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1094,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1092,
                    "name": "type",
                    "type": "reference",
                    "values": [
                        "Global.IconProp"
                    ]
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "IconsetTypes": [
        {
            "name": "Index",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1343,
                    "name": "filled",
                    "type": "reference",
                    "values": [
                        "Filled"
                    ]
                },
                {
                    "id": 1344,
                    "name": "outline",
                    "type": "reference",
                    "values": [
                        "Outline"
                    ]
                }
            ]
        }
    ],
    "MenuTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2726,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "start",
                        "center",
                        "end"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2725,
                    "name": "border",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "narrow",
                        "wide"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2728,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2720,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "filled",
                        "outline",
                        "color",
                        "underline",
                        "tab",
                        "filled-underline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2712,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2723,
                    "name": "direction",
                    "type": "stringLiteral",
                    "values": [
                        "row",
                        "column"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2729,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2722,
                    "name": "distance",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2721,
                    "name": "flip",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2718,
                    "name": "items",
                    "type": "reference",
                    "values": [
                        "Item[]"
                    ]
                },
                {
                    "id": 2714,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(value: Value) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2727,
                    "name": "separator",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2724,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2719,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2713,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "ItemProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2844,
                    "name": "active",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2846,
                    "name": "onEnter",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2845,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Item",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2828,
                    "name": "content",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ]
                },
                {
                    "id": 2830,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2829,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ]
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "MeterTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5132,
                    "name": "animation",
                    "comment": "Enabled process animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5131,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5129,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "filled",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5126,
                    "name": "percent",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 5130,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5127,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5128,
                    "name": "type",
                    "comment": {
                        "tags": [
                            {
                                "tag": "default",
                                "text": "line\n"
                            }
                        ]
                    },
                    "type": "stringLiteral",
                    "values": [
                        "line",
                        "circle"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ModalTypes": [
        {
            "name": "StyleProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 406,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 407,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 405,
                    "name": "visible",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 349,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 354,
                    "name": "didClose",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 360,
                    "name": "didOpen",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 348,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 350,
                    "name": "hideHeader",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 351,
                    "name": "onClose",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 357,
                    "name": "onOpen",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 347,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 346,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 439,
                    "name": "cross",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 438,
                    "name": "header",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 436,
                    "name": "overlay",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 437,
                    "name": "window",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                }
            ]
        },
        {
            "name": "ModalWindowProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 418,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 421,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 422,
                    "name": "containerAttr",
                    "type": {
                        "type": "intersection",
                        "types": [
                            {
                                "type": "reference",
                                "name": "HTMLAttributes",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "name": "HTMLElement"
                                    }
                                ]
                            },
                            {
                                "type": "reference",
                                "name": "StyleSelfProps",
                                "id": 1955
                            }
                        ]
                    },
                    "isOptional": true
                },
                {
                    "id": 419,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 420,
                    "name": "hideHeader",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 423,
                    "name": "onClosePressed",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 424,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 425,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 48,
                                    "character": 23
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 426,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 416,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 415,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 417,
                    "name": "visible",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "ModalOverlayProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 410,
                    "name": "center",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 412,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 411,
                    "name": "fullSize",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 413,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 409,
                    "name": "visible",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                }
            ]
        },
        {
            "name": "ModalHeaderProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 430,
                    "name": "hideHeader",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 431,
                    "name": "onClosePressed",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 432,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 433,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/layout/Modal/types.ts",
                                    "line": 56,
                                    "character": 23
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 434,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 429,
                    "name": "subtitle",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 428,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InnerProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 375,
                    "name": "innerRef",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "NotificationTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5298,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5299,
                    "name": "onClick",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "NotifyOptions",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5309,
                    "name": "customContent",
                    "comment": "if custom content filled then title and message will be ignored",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5304,
                    "name": "message",
                    "comment": "Message of notification",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 5306,
                    "name": "onClick",
                    "comment": "Will call on notificaion click",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5305,
                    "name": "timeout",
                    "comment": "Notification will be removed after timeout\nvalue in milisecods",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5303,
                    "name": "title",
                    "comment": "Title of notification",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        }
    ],
    "PanelTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 442,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "right",
                        "bottom",
                        "left"
                    ],
                    "isOptional": true
                },
                {
                    "id": 443,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 445,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 444,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 544,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "PopoverTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 547,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ],
                    "isOptional": true
                },
                {
                    "id": 553,
                    "name": "arrowHeight",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 552,
                    "name": "arrowWidth",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 548,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 550,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 549,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 551,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 653,
                    "name": "arrow",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 652,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "RadioTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4835,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4837,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4836,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4833,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4834,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4840,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4839,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4838,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4942,
                    "name": "check",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 4943,
                    "name": "icon",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        }
    ],
    "RangeTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1207,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1200,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1199,
                    "name": "max",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1198,
                    "name": "min",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1202,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(value: number) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1206,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1201,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1209,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 1212,
                    "name": "handle",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 1210,
                    "name": "rail",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 1211,
                    "name": "track",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                }
            ]
        }
    ],
    "SelectTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 848,
                    "name": "defaultValues",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ],
                    "isOptional": true
                },
                {
                    "id": 845,
                    "name": "multiselect",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 849,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(values: undefined, changedValue: Option) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 844,
                    "name": "options",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ]
                },
                {
                    "id": 843,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 846,
                    "name": "searchable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 842,
                    "name": "style",
                    "type": "reference",
                    "overwrites": {
                        "type": "reference",
                        "name": "HTMLAttributes.style",
                        "id": 1991
                    },
                    "values": [
                        "CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 847,
                    "name": "values",
                    "type": "reference",
                    "values": [
                        "Option[]"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Stuff for something",
            "weight": 100,
            "children": [
                {
                    "id": 2049,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2054,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2048,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2047,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2051,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2045,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2044,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2053,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2052,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2050,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2046,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 962,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 965,
                    "name": "dropItem",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 964,
                    "name": "dropMenu",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 963,
                    "name": "input",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                }
            ]
        },
        {
            "name": "Option",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 839,
                    "name": "text",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 840,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        }
    ],
    "SpinnerTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4080,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4079,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4083,
                    "name": "count",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4082,
                    "name": "duration",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4081,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "square",
                        "rounded",
                        "round"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4084,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "SwitchTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5009,
                    "name": "checked",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5011,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5010,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5007,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5008,
                    "name": "labelColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5014,
                    "name": "onChange",
                    "type": "reflection",
                    "values": [
                        "(checked: boolean) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5013,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5012,
                    "name": "uppercase",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5116,
                    "name": "check",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 5117,
                    "name": "icon",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                }
            ]
        }
    ],
    "TableTypes": [
        {
            "name": "TablePagination",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 308,
                    "name": "async",
                    "type": "reflection",
                    "values": [
                        "(page: number) => boolean"
                    ],
                    "isOptional": true
                },
                {
                    "id": 306,
                    "name": "pageSize",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 307,
                    "name": "pageTotalSize",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "TableForm",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 128,
                    "name": "defaultData",
                    "type": "reflection",
                    "values": [
                        "unknown"
                    ],
                    "isOptional": true
                },
                {
                    "id": 133,
                    "name": "dismiss",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 127,
                    "name": "key",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 132,
                    "name": "render",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "TableColumn",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 112,
                    "name": "dataIndex",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 114,
                    "name": "render",
                    "type": "reflection",
                    "values": [
                        "(row: any, value: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 111,
                    "name": "title",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 113,
                    "name": "width",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "TableActions",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 121,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 120,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 122,
                    "name": "onAction",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 123,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 124,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 125,
                                            "name": "row",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 15,
                                    "character": 17
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "RowProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 260,
                    "name": "actions",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 261,
                    "name": "border",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 265,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 256,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 263,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 259,
                    "name": "isBlur",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 258,
                    "name": "isExpanding",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 257,
                    "name": "isSelected",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 266,
                    "name": "onRowClick",
                    "type": "reflection",
                    "values": [
                        "(row: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 255,
                    "name": "row",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 262,
                    "name": "scope",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 264,
                    "name": "style",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 270,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 140,
                    "name": "actions",
                    "type": "reference",
                    "values": [
                        "TableActions[]"
                    ],
                    "isOptional": true
                },
                {
                    "id": 141,
                    "name": "border",
                    "type": "stringLiteral",
                    "values": [
                        "all",
                        "external",
                        "internal",
                        "vertical",
                        "horizontal"
                    ],
                    "isOptional": true
                },
                {
                    "id": 146,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 157,
                    "name": "className",
                    "type": "intrinsic",
                    "overwrites": {
                        "type": "reference",
                        "name": "HTMLAttributes.className",
                        "id": 1989
                    },
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 138,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 137,
                    "name": "data",
                    "type": "reference",
                    "values": [
                        "Object[]"
                    ]
                },
                {
                    "id": 139,
                    "name": "form",
                    "type": "reference",
                    "values": [
                        "TableForm"
                    ],
                    "isOptional": true
                },
                {
                    "id": 156,
                    "name": "hideHeaders",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 142,
                    "name": "indexKey",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 145,
                    "name": "noDataLabel",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 147,
                    "name": "onRowClick",
                    "type": "reflection",
                    "values": [
                        "(row: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 152,
                    "name": "onSearch",
                    "type": "reflection",
                    "values": [
                        "(value: any) => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 144,
                    "name": "pagination",
                    "type": "reference",
                    "values": [
                        "TablePagination"
                    ],
                    "isOptional": true
                },
                {
                    "id": 143,
                    "name": "scope",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 151,
                    "name": "search",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "PaginationProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 326,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 317,
                    "name": "data",
                    "type": "reflection",
                    "values": [
                        "unknown"
                    ]
                },
                {
                    "id": 321,
                    "name": "onChange",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 322,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 323,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 324,
                                            "name": "page",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "number"
                                            }
                                        },
                                        {
                                            "id": 325,
                                            "name": "searchBar",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 102,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 314,
                    "name": "page",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ]
                },
                {
                    "id": 313,
                    "name": "pagination",
                    "type": "reference",
                    "values": [
                        "TablePagination"
                    ]
                },
                {
                    "id": 316,
                    "name": "search",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 315,
                    "name": "searchActive",
                    "type": "intrinsic",
                    "values": [
                        "boolean"
                    ]
                },
                {
                    "id": 327,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 342,
                    "name": "actionButtons",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 343,
                    "name": "actionButtonsEdit",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 341,
                    "name": "actions",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 334,
                    "name": "body",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 339,
                    "name": "column",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 329,
                    "name": "container",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 330,
                    "name": "content",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 332,
                    "name": "headColumn",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 331,
                    "name": "headRow",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 340,
                    "name": "more",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 335,
                    "name": "pagination",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 336,
                    "name": "paginationButton",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 337,
                    "name": "row",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 333,
                    "name": "search",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                },
                {
                    "id": 338,
                    "name": "subrow",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ]
                }
            ]
        },
        {
            "name": "InjectForm",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 296,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 292,
                    "name": "data",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 293,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "indexSignature": [
                                {
                                    "id": 294,
                                    "name": "__index",
                                    "kind": 8192,
                                    "kindString": "Index signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 295,
                                            "name": "key",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 84,
                                    "character": 13
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 302,
                    "name": "dismiss",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 297,
                    "name": "setData",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 298,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "signatures": [
                                {
                                    "id": 299,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 300,
                                            "name": "key",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        },
                                        {
                                            "id": 301,
                                            "name": "value",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/data/Table/types.ts",
                                    "line": 86,
                                    "character": 16
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "FormProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 288,
                    "name": "Form",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 289,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 287,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 283,
                    "name": "data",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 284,
                    "name": "dismiss",
                    "type": "reflection",
                    "values": [
                        "() => void"
                    ],
                    "isOptional": true
                },
                {
                    "id": 290,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "ColumnProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 275,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 273,
                    "name": "columns",
                    "type": "reference",
                    "values": [
                        "TableColumn[]"
                    ]
                },
                {
                    "id": 272,
                    "name": "row",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 274,
                    "name": "scope",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 276,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "ActionsProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 278,
                    "name": "actions",
                    "type": "intrinsic",
                    "values": [
                        "any[]"
                    ]
                },
                {
                    "id": 280,
                    "name": "children",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 279,
                    "name": "data",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 281,
                    "name": "styles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        }
    ],
    "TextFieldTypes": [
        {
            "name": "TextAreaProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4526,
                    "name": "cols",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4527,
                    "name": "rows",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4528,
                    "name": "wrap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4365,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4364,
                    "name": "defaultValue",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4367,
                    "name": "masked",
                    "type": "reference",
                    "values": [
                        "IMask.AnyMaskedOptions"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4366,
                    "name": "multiline",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4368,
                    "name": "onChange",
                    "type": "reference",
                    "values": [
                        "ChangeEventHandler"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InputProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4503,
                    "name": "autoComplete",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4504,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4513,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4514,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4515,
                    "name": "formEncType",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4516,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4517,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4518,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4505,
                    "name": "list",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4519,
                    "name": "max",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4520,
                    "name": "maxLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4521,
                    "name": "min",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4522,
                    "name": "minLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4506,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4508,
                    "name": "pattern",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4507,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4509,
                    "name": "readOnly",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4510,
                    "name": "required",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4523,
                    "name": "step",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4511,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "email",
                        "hidden",
                        "number",
                        "password",
                        "reset",
                        "search",
                        "tel",
                        "text",
                        "url"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4512,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4524,
                    "name": "width",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "TextAreaProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4526,
                    "name": "cols",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4527,
                    "name": "rows",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4528,
                    "name": "wrap",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "FieldProps",
            "comment": "Stuff for something",
            "weight": 100,
            "children": [
                {
                    "id": 2049,
                    "name": "backgroundColor",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2054,
                    "name": "clearable",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2048,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2047,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "filled",
                        "underline",
                        "outline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2051,
                    "name": "disabled",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2045,
                    "name": "hint",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2044,
                    "name": "label",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2053,
                    "name": "leftChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2052,
                    "name": "rightChild",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2050,
                    "name": "shape",
                    "type": "stringLiteral",
                    "values": [
                        "round",
                        "rounded",
                        "square"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2046,
                    "name": "size",
                    "type": "stringLiteral",
                    "values": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "InputProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 4503,
                    "name": "autoComplete",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4504,
                    "name": "autoFocus",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4513,
                    "name": "form",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4514,
                    "name": "formAction",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4515,
                    "name": "formEncType",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4516,
                    "name": "formMethod",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4517,
                    "name": "formNoValidate",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4518,
                    "name": "formTarget",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4505,
                    "name": "list",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4519,
                    "name": "max",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4520,
                    "name": "maxLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4521,
                    "name": "min",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4522,
                    "name": "minLength",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4506,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4508,
                    "name": "pattern",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4507,
                    "name": "placeholder",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4509,
                    "name": "readOnly",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4510,
                    "name": "required",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4523,
                    "name": "step",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4511,
                    "name": "type",
                    "type": "stringLiteral",
                    "values": [
                        "email",
                        "hidden",
                        "number",
                        "password",
                        "reset",
                        "search",
                        "tel",
                        "text",
                        "url"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4512,
                    "name": "value",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 4524,
                    "name": "width",
                    "type": "intrinsic",
                    "values": [
                        "number",
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ThemeTypes": [
        {
            "name": "Variables",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1226,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Colors"
                    ]
                },
                {
                    "id": 1228,
                    "name": "distance",
                    "type": "reference",
                    "values": [
                        "Distance"
                    ]
                },
                {
                    "id": 1225,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1227,
                    "name": "radius",
                    "type": "reference",
                    "values": [
                        "Radius"
                    ]
                },
                {
                    "id": 1229,
                    "name": "typography",
                    "type": "reference",
                    "values": [
                        "Typography"
                    ]
                }
            ]
        },
        {
            "name": "Typography",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1295,
                    "name": "caption",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1296,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1297,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 142,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1298,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 143,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1299,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 144,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1300,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 145,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1297,
                                        1298,
                                        1299,
                                        1300
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 141,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1289,
                    "name": "display",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1290,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1291,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 136,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1292,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 137,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1293,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 138,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1294,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 139,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1291,
                                        1292,
                                        1293,
                                        1294
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 135,
                                    "character": 16
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1277,
                    "name": "header",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1278,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1279,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 124,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1280,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 125,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1281,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 126,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1282,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 127,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1279,
                                        1280,
                                        1281,
                                        1282
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 123,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1276,
                    "name": "paragraph",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1283,
                    "name": "text",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1284,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1285,
                                    "name": "1",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 130,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1286,
                                    "name": "2",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 131,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1287,
                                    "name": "3",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 132,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1288,
                                    "name": "4",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 133,
                                            "character": 13
                                        }
                                    ],
                                    "type": {
                                        "type": "reference",
                                        "name": "ObjectInterpolation",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1285,
                                        1286,
                                        1287,
                                        1288
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 129,
                                    "character": 13
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1259,
                    "name": "bage",
                    "type": "reference",
                    "values": [
                        "BageTypes.Overrides"
                    ]
                },
                {
                    "id": 1258,
                    "name": "block",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1257,
                    "name": "button",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1264,
                    "name": "checkbox",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1265,
                    "name": "datePicker",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1267,
                    "name": "icon",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1261,
                    "name": "modal",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1262,
                    "name": "panel",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1263,
                    "name": "popover",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1268,
                    "name": "range",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1266,
                    "name": "select",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1260,
                    "name": "table",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                }
            ]
        },
        {
            "name": "Index",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1215,
                    "name": "assets",
                    "type": "reference",
                    "values": [
                        "Assets"
                    ]
                },
                {
                    "id": 1216,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ]
                },
                {
                    "id": 1217,
                    "name": "replace",
                    "type": "reference",
                    "values": [
                        "Replace"
                    ]
                }
            ]
        },
        {
            "name": "Variables",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1226,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Colors"
                    ]
                },
                {
                    "id": 1228,
                    "name": "distance",
                    "type": "reference",
                    "values": [
                        "Distance"
                    ]
                },
                {
                    "id": 1225,
                    "name": "name",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1227,
                    "name": "radius",
                    "type": "reference",
                    "values": [
                        "Radius"
                    ]
                },
                {
                    "id": 1229,
                    "name": "typography",
                    "type": "reference",
                    "values": [
                        "Typography"
                    ]
                }
            ]
        },
        {
            "name": "Distance",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1273,
                    "name": "large",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1272,
                    "name": "medium",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1271,
                    "name": "small",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1274,
                    "name": "xlarge",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 1270,
                    "name": "xsmall",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        },
        {
            "name": "Assets",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 1232,
                    "name": "border",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1233,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1236,
                                    "name": "color",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 37,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1235,
                                    "name": "style",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 36,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1234,
                                    "name": "width",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 35,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1236,
                                        1235,
                                        1234
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 34,
                                    "character": 15
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1249,
                    "name": "fieldHeight",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1250,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1254,
                                    "name": "large",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 55,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1253,
                                    "name": "medium",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 54,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1252,
                                    "name": "small",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 53,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1255,
                                    "name": "xlarge",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 56,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1251,
                                    "name": "xsmall",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 52,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1254,
                                        1253,
                                        1252,
                                        1255,
                                        1251
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 51,
                                    "character": 20
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1248,
                    "name": "focus",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ]
                },
                {
                    "id": 1231,
                    "name": "global",
                    "type": "reference",
                    "values": [
                        "ObjectInterpolation"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1242,
                    "name": "gradient",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1243,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1244,
                                    "name": "linear",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 45,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1245,
                                    "name": "linearVariant",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 46,
                                            "character": 25
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1246,
                                    "name": "radial",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 47,
                                            "character": 18
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1247,
                                    "name": "radialVariant",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 48,
                                            "character": 25
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1244,
                                        1245,
                                        1246,
                                        1247
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 44,
                                    "character": 17
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 1237,
                    "name": "shadow",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 1238,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {
                                "isExported": true
                            },
                            "children": [
                                {
                                    "id": 1239,
                                    "name": "default",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 40,
                                            "character": 19
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1241,
                                    "name": "long",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 42,
                                            "character": 16
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1240,
                                    "name": "short",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {
                                        "isExported": true,
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "core/misc/themes/types.ts",
                                            "line": 41,
                                            "character": 17
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "groups": [
                                {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [
                                        1239,
                                        1241,
                                        1240
                                    ]
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "core/misc/themes/types.ts",
                                    "line": 39,
                                    "character": 15
                                }
                            ]
                        }
                    }
                }
            ]
        }
    ],
    "TreeTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5324,
                    "name": "alwaysOpen",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5321,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5322,
                    "name": "decoration",
                    "type": "stringLiteral",
                    "values": [
                        "flat",
                        "drop",
                        "inline"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5325,
                    "name": "defaultOpen",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5326,
                    "name": "indent",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5320,
                    "name": "label",
                    "type": "intrinsic",
                    "values": [
                        "React.ReactNode",
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 5323,
                    "name": "overrides",
                    "type": "reference",
                    "values": [
                        "Overrides"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Overrides",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 5425,
                    "name": "containter",
                    "type": "reference",
                    "values": [
                        "Interpolation"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "TypographyTypes": [
        {
            "name": "TextProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3769,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "center",
                        "end",
                        "start",
                        "justify",
                        "match-parent"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3768,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3766,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3767,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3765,
                    "name": "decoration",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3764,
                    "name": "ellipsis",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3763,
                    "name": "quotes",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3771,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3772,
                    "name": "transform",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "none",
                        "full-width",
                        "capitalize",
                        "full-size-kana",
                        "lowercase",
                        "uppercase"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3770,
                    "name": "weight",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "normal",
                        "bold",
                        "bolder",
                        "lighter"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Events",
            "comment": "Default events",
            "weight": 500,
            "children": [
                {
                    "id": 1945,
                    "name": "onBlur",
                    "comment": "Event fires when an element has lost focus. The main difference between this event and focusout is that focusout bubbles while blur does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1943,
                    "name": "onClick",
                    "comment": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1944,
                    "name": "onFocus",
                    "comment": "Event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1953,
                    "name": "onKeyDown",
                    "comment": "Event is fired when a key is pressed.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1952,
                    "name": "onKeyPress",
                    "comment": "Event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys.",
                    "type": "reference",
                    "deprecated": "This feature is no longer recommended.\n",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1954,
                    "name": "onKeyUp",
                    "comment": "Event is fired when a key is released.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1946,
                    "name": "onMouseDown",
                    "comment": "Event is fired at an Element when a pointing device button is pressed while the pointer is inside the element.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1948,
                    "name": "onMouseEnter",
                    "comment": "Event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1949,
                    "name": "onMouseLeave",
                    "comment": "Event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1947,
                    "name": "onMouseUp",
                    "comment": "Event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it. mouseup events are the counterpoint to onMouseDown events.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1951,
                    "name": "onTouchEnd",
                    "comment": "Event fires when one or more touch points are removed from the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1950,
                    "name": "onTouchStart",
                    "comment": "Event is fired when one or more touch points are placed on the touch surface.",
                    "type": "reference",
                    "values": [
                        "EventProp"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "StyleSelf",
            "comment": "Styles inside the component. Paddings, visibility and display props",
            "weight": 400,
            "children": [
                {
                    "id": 1966,
                    "name": "animated",
                    "comment": "Enables transition animation",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1964,
                    "name": "display",
                    "comment": "Sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.",
                    "type": "stringLiteral",
                    "values": [
                        "none",
                        "inline",
                        "grid",
                        "block",
                        "inline-block",
                        "inline-table",
                        "list-item",
                        "run-in",
                        "table",
                        "table-caption",
                        "table-cell",
                        "table-column-group",
                        "table-column",
                        "table-footer-group",
                        "table-header-group",
                        "table-row",
                        "table-row-group",
                        "flex"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1962,
                    "name": "h",
                    "comment": "Heigth alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1965,
                    "name": "overflow",
                    "comment": "Sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y.",
                    "type": "stringLiteral",
                    "values": [
                        "inherit",
                        "auto",
                        "hidden",
                        "visible",
                        "scroll"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1956,
                    "name": "p",
                    "comment": "Padding alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1960,
                    "name": "pb",
                    "comment": "PaddingBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1958,
                    "name": "pl",
                    "comment": "PaddingLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1957,
                    "name": "pr",
                    "comment": "PaddingRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1959,
                    "name": "pt",
                    "comment": "PaddingTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1963,
                    "name": "visibility",
                    "comment": "Shows or hides an element without changing the layout of a document.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "collapse",
                        "hidden",
                        "visible"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1961,
                    "name": "w",
                    "comment": "Width alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "SelfFlow",
            "comment": "Style outsize the component. Margins, flex, positions",
            "weight": 300,
            "children": [
                {
                    "id": 1978,
                    "name": "alignSelf",
                    "comment": "Property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1974,
                    "name": "flex",
                    "comment": "Sets how a flex item will grow or shrink to fit the space available in its flex container.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1975,
                    "name": "flexBasis",
                    "comment": "Sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1976,
                    "name": "flexGrow",
                    "comment": "Sets the flex grow factor of a flex item main size. It specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor).",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1977,
                    "name": "flexShrink",
                    "comment": "Sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1986,
                    "name": "gridArea",
                    "comment": "Shorthand property for grid-row-start, grid-column-start, grid-row-end and grid-column-end, specifying a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1984,
                    "name": "gridColumn",
                    "comment": "Shorthand property for grid-column-start and grid-column-end specifying a grid item's size and location within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1981,
                    "name": "gridColumnEnd",
                    "comment": "Specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1980,
                    "name": "gridColumnStart",
                    "comment": "Specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1985,
                    "name": "gridRow",
                    "comment": "Shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1983,
                    "name": "gridRowEnd",
                    "comment": "Specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1982,
                    "name": "gridRowStart",
                    "comment": "Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
                    "type": "intrinsic",
                    "values": [
                        "string",
                        "number"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1979,
                    "name": "justifySelf",
                    "comment": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "initial",
                        "unset",
                        "baseline",
                        "center",
                        "end",
                        "flex-end",
                        "flex-start",
                        "inherid",
                        "normal",
                        "safe",
                        "safe-end",
                        "safe-start",
                        "start",
                        "stretch",
                        "unsafe"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1968,
                    "name": "m",
                    "comment": "Margin alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1972,
                    "name": "mb",
                    "comment": "MarginBottom alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1970,
                    "name": "ml",
                    "comment": "MarginLeft alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1969,
                    "name": "mr",
                    "comment": "MarginRight alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1971,
                    "name": "mt",
                    "comment": "MarginTop alias",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1987,
                    "name": "placeSelf",
                    "comment": "Shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1973,
                    "name": "position",
                    "comment": "Sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "-webkit-sticky",
                        "absolute",
                        "fixed",
                        "relative",
                        "static",
                        "sticky"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "HTMLAttributes",
            "comment": "Default attributes",
            "weight": 200,
            "children": [
                {
                    "id": 1994,
                    "name": "attrs",
                    "type": "reference",
                    "values": [
                        "Object"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1989,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1990,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1993,
                    "name": "role",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1991,
                    "name": "style",
                    "type": "reference",
                    "values": [
                        "React.CSSProperties"
                    ],
                    "isOptional": true
                },
                {
                    "id": 1992,
                    "name": "tabIndex",
                    "type": "intrinsic",
                    "values": [
                        "number"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3526,
                    "name": "defaultStyles",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 3527,
                    "name": "tag",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 3528,
                    "name": "theme",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                }
            ]
        },
        {
            "name": "TextProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3769,
                    "name": "align",
                    "type": "stringLiteral",
                    "values": [
                        "left",
                        "right",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "center",
                        "end",
                        "start",
                        "justify",
                        "match-parent"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3768,
                    "name": "background",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3766,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3767,
                    "name": "color",
                    "type": "reference",
                    "values": [
                        "Global.ColorProp"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3765,
                    "name": "decoration",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3764,
                    "name": "ellipsis",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3763,
                    "name": "quotes",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3771,
                    "name": "size",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3772,
                    "name": "transform",
                    "type": "stringLiteral",
                    "values": [
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "none",
                        "full-width",
                        "capitalize",
                        "full-size-kana",
                        "lowercase",
                        "uppercase"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3770,
                    "name": "weight",
                    "type": "stringLiteral",
                    "values": [
                        "number",
                        "-moz-initial",
                        "inherit",
                        "initial",
                        "revert",
                        "unset",
                        "normal",
                        "bold",
                        "bolder",
                        "lighter"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "AnchorProps",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 3646,
                    "name": "download",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3647,
                    "name": "href",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3648,
                    "name": "hrefLang",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3649,
                    "name": "media",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3650,
                    "name": "ping",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3654,
                    "name": "referrerPolicy",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3651,
                    "name": "rel",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3652,
                    "name": "target",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 3653,
                    "name": "type",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        }
    ],
    "ViewportTypes": [
        {
            "name": "Props",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2256,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "React.ReactNode"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2253,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2254,
                    "name": "id",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2255,
                    "name": "theme",
                    "type": "reflection",
                    "values": [
                        "(lib: T) => R"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2252,
                    "name": "wrapper",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "MountAreaElement",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2261,
                    "name": "children",
                    "type": "reference",
                    "values": [
                        "ReactElement"
                    ]
                },
                {
                    "id": 2260,
                    "name": "key",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                }
            ]
        },
        {
            "name": "MountArea",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2258,
                    "name": "className",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "DialogOptions",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2269,
                    "name": "buttonText",
                    "comment": "Button text",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2271,
                    "name": "customContent",
                    "comment": "if custom content filled then message and buttonText will be ignored",
                    "type": "reference",
                    "values": [
                        "React.ReactElement"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2270,
                    "name": "hideHeader",
                    "comment": "Hides modal window header",
                    "type": "intrinsic",
                    "values": [
                        "false",
                        "true"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2268,
                    "name": "message",
                    "comment": "Message of dialog",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2267,
                    "name": "subtitle",
                    "comment": "Subtitle of modal window header",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                },
                {
                    "id": 2266,
                    "name": "title",
                    "comment": "Title of modal window header",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ],
                    "isOptional": true
                }
            ]
        },
        {
            "name": "Context",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2264,
                    "name": "browser",
                    "type": "intrinsic",
                    "values": [
                        "any"
                    ]
                },
                {
                    "id": 2263,
                    "name": "theme",
                    "type": "reference",
                    "values": [
                        "ThemeType.Index"
                    ]
                }
            ]
        }
    ],
    "__global": [
        {
            "name": "Window",
            "comment": "",
            "weight": 99999,
            "children": [
                {
                    "id": 2591,
                    "name": "currentTheme",
                    "type": "intrinsic",
                    "values": [
                        "string"
                    ]
                },
                {
                    "id": 2587,
                    "name": "setTheme",
                    "type": {
                        "type": "reflection",
                        "declaration": {
                            "id": 2588,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {},
                            "signatures": [
                                {
                                    "id": 2589,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                        {
                                            "id": 2590,
                                            "name": "theme",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ],
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                }
                            ],
                            "sources": [
                                {
                                    "fileName": "docs/plugins/CaseWrapper/index.tsx",
                                    "line": 11,
                                    "character": 17
                                }
                            ]
                        }
                    }
                }
            ]
        }
    ]
}